<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.4 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-12" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2023"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<?line 130?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces a new component, the Registrar-Agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<?line 138?>

<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer site) domain.
This includes the discovery of the BRSKI registrar in the customer domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer domain, specifically the customer domain certificate, are exchanged and authenticated utilizing voucher-request and voucher-response artifacts as defined in <xref target="RFC8995"/>.
Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA).
The MASA issues the voucher and provides it via the domain registrar to the pledge.
<xref target="RFC8366"/> specifies the format of the voucher artifacts.
<xref target="I-D.ietf-anima-rfc8366bis"/> further enhances the format of the voucher artifacts and also the voucher-request.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with pledge in responder mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered to generate bootstrapping requests in the customer domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>introduces the Registrar-Agent as new component to facilitate the communication between the pledge and the domain registrar.
The Registrar-Agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
BRSKI-PRM supports the identification of the Registrar-Agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the Registrar-Agent is a component used by an installer and not co-located with the registrar.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server, the Registrar-Agent acting as client, and the domain registrar.</t>
  <t>enables the usage of arbitrary transports between the pledge and the domain registrar via the Registrar-Agent; security is addressed at the application layer, and both IP-based and non-IP connectivity can be used between pledge and Registrar-Agent.</t>
  <t>allows the application of Registrar-Agent credentials to establish TLS connections to the domain registrar; these are different from the IDevID of the pledge.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.
For the interaction with the domain registrar, the Registrar-Agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
To utilize the EST server endpoints on the domain registrar, the Registrar-Agent will act as client toward the registrar.</t>

<t>The Registrar-Agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is only optionally supported.
If TLS is optionally used between the Registrar-Agent and the pledge, the Registrar-Agent needs to identify the pledge based on its product-serial-number rather than the hostname as this is not set in an IDevID certificate.</t>

<t>BRSKI-PRM is designed to rely on object security to support also for alternative transports for which TLS may not be available, e.g., Bluetooth or NFC.
This is achieved through an additional signature wrapping of the exchanged data objects involving the Registrar-Agent for transport.</t>

<t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar must perform the pre-processing of this wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges which can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End Entity.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>.
Endpoints are accessible via .well-known URIs.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available on-site.
It may be at a central site or an internet resident "cloud" service.
The on-site to off-site connection may also be temporary and, e.g., only available at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge-Enrollment-Request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge-Voucher-Request is a request for a voucher sent to the domain registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar-Enrollment-Request is the CSR of a PER sent to the CA by the domain registrar (in its role as PKI RA).</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar-Voucher-Request is a request for a voucher signed by the domain registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The latter is indicated by a string like "BASE64URL(content-name)".</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The Registrar-Agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer domain does not offer enough physical security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the ability of the pledge and the Registrar-Agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the Registrar-Agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as Registrar-Agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the Registrar-Agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the Registrar-Agent.</t>
  <t>The security of communication between the Registrar-Agent and the pledge must not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the Registrar-Agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC6125"/> methods.</t>
  <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the Registrar-Agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which Registrar-Agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher-request or an enrollment-request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-requests and -responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architecture</name>

<section anchor="overview"><name>Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a Registrar-Agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is based on JOSE <xref target="RFC7515"/> and further specified in <xref target="exchanges_uc2"/> to address the requirements stated in <xref target="req-sol"/> above.
In constrained environments it may be provided based on COSE <xref target="RFC9052"/> and <xref target="RFC9053"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer domain, this document specifies the exchange of authenticated self-contained objects with the help of a Registrar-Agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>

<t>Note that the Join Proxy is not shown in the figure, having been replaced by Registrar-Agent.
In certain situations the Join Proxy may still be present and could be used by the Registrar-Agent to connect to the Registrar.
For example, a Registrar-Agent application on a smartphone often can connect to local wifi without giving up their LTE connection <xref target="androidnsd"/>, but only can make link-local connections.</t>

<t>The Registrar-Agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the Registrar-Agent and the domain registrar.
The addition of the Registrar-Agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using Registrar-Agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,416" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,416" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,416 L 424,416" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="40" y="100">:</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="40" y="116">:</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="40" y="132">:</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="40" y="148">:</text>
<text x="40" y="164">:</text>
<text x="40" y="180">:</text>
<text x="412" y="180">BRSKI-</text>
<text x="40" y="196">:</text>
<text x="404" y="196">MASA</text>
<text x="40" y="212">:</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="40" y="228">V</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">PRM</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="356" y="308">(PKI</text>
<text x="392" y="308">RA)</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="220" y="324">LDevID</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="336" y="404">CA)</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="448" y="420">.</text>
<text x="288" y="436">.........................................</text>
<text x="236" y="452">&quot;Domain&quot;</text>
<text x="316" y="452">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------+-----------+
    :                    | M anufacturer |           |
    :                    | A uthorized   | Ownership |
    :                    | S igning      | Tracker   |
    :                    | A uthority    |           |
    :                    +---------------+-----------+
    :                                         ^
    :                                         | BRSKI-
    :                                         | MASA
    :          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>| (PKI RA)  |  .
|        |     .  |     LDevID |        |           |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the Registrar-Agent.
The protocol used between the pledge and the Registrar-Agent is assumed to be HTTP in the context of this document.
Any other protocols (including HTTPS) can be used as long as they support the exchange of the necessary data objects.
This includes CoAP or protocol to be used over Bluetooth or NFC connections
A pledge acting as a server during bootstrapping leads to some differences for BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the Registrar-Agent <bcp14>MUST</bcp14> be possible.</t>
      <t>As the Registrar-Agent <bcp14>MUST</bcp14> be able to request data objects for bootstrapping of the pledge, the pledge <bcp14>MUST</bcp14> offer corresponding endpoints as defined in <xref target="pledge_ep"/>.</t>
      <t>The Registrar-Agent <bcp14>MUST</bcp14> provide additional data to the pledge in the context of the voucher-request trigger, which the pledge <bcp14>MUST</bcp14> include into the PVR as defined in <xref target="pvrt"/> and <xref target="pvrr"/>.
This allows the registrar to identify, with which Registrar-Agent the pledge was in contact.</t>
      <t>The order of exchanges in the BRSKI-PRM call flow is different those in BRSKI <xref target="RFC8995"/>, as the PVR and PER are collected at once and provided to the registrar.
This enables bulk bootstrapping of several devices.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-Agent: provides a store and forward communication path to exchange data objects between the pledge and the domain registrar.
The Registrar-Agent acts as a broker in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The Registrar-Agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges.
It can then perform a (bulk) bootstrapping based on the collected data.
The Registrar-Agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the Registrar-Agent as only authenticated self-contained objects are used, which are transported via the Registrar-Agent and provided either by the pledge or the registrar.
The trust assumption between the Registrar-Agent and the registrar is based on the LDevID of the Registrar-Agent, provided by the PKI responsible for the domain.
This allows the Registrar-Agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a Registrar-Agent during the TLS session establishment and also to verify that this Registrar-Agent is authorized to perform the bootstrapping of the distinct pledge.
The Registrar-Agent may be realized as stand-alone component supporting nomadic activities of a service technician moving between different installation sites.
Contrary, the Registrar-Agent may also be realized as co-located functionality for a registrar, to support pledges in pledge-responder-mode.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a Registrar-Agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the Registrar-Agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general, the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer site) domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the Registrar-Agent.
A registrar with combined functionality of BRSKI and BRSKI-PRM detects if the bootstrapping is performed by the pledge directly (BRSKI case) or by the Registrar-Agent (BRSKI-PRM case) based on the utilized credential for authentication (either pledgeâs IDevID or LDevID from Registrar-Agent), see also <xref target="exchanges_uc2_2"/>.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
A MASA is able to support enrollment via Registrar-Agent without changes unless it checks the vouchers proximity indication, in which case it would need to be enhanced to support BRSKI-PRM to also accept the agent-proximity.</t>
</list></t>

</section>
<section anchor="arch_nomadic"><name>Nomadic connectivity</name>

<t>In one example instance of the PRM architecture as shown in <xref target="uc3figure"/>, there is no connectivity between the location in which the pledge is installed and the location of the domain registrar.
This is often the case in the aforementioned building automation use case (<xref target="building-automation"/>).</t>

<figure title="Registrar-Agent nomadic connectivity example" anchor="uc3figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="456" viewBox="0 0 456 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 24,128 L 24,176" fill="none" stroke="black"/>
<path d="M 96,128 L 96,176" fill="none" stroke="black"/>
<path d="M 208,32 L 208,64" fill="none" stroke="black"/>
<path d="M 224,400 L 224,448" fill="none" stroke="black"/>
<path d="M 328,320 L 328,368" fill="none" stroke="black"/>
<path d="M 376,72 L 376,312" fill="none" stroke="black"/>
<path d="M 376,368 L 376,400" fill="none" stroke="black"/>
<path d="M 424,320 L 424,368" fill="none" stroke="black"/>
<path d="M 424,400 L 424,448" fill="none" stroke="black"/>
<path d="M 432,32 L 432,64" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 24,128 L 96,128" fill="none" stroke="black"/>
<path d="M 104,160 L 184,160" fill="none" stroke="black"/>
<path d="M 24,176 L 96,176" fill="none" stroke="black"/>
<path d="M 328,320 L 424,320" fill="none" stroke="black"/>
<path d="M 272,352 L 320,352" fill="none" stroke="black"/>
<path d="M 328,368 L 424,368" fill="none" stroke="black"/>
<path d="M 224,400 L 424,400" fill="none" stroke="black"/>
<path d="M 224,448 L 424,448" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,312 372,306.4 372,317.6" fill="black" transform="rotate(90,376,312)"/>
<polygon class="arrowhead" points="384,72 372,66.4 372,77.6" fill="black" transform="rotate(270,376,72)"/>
<polygon class="arrowhead" points="328,352 316,346.4 316,357.6" fill="black" transform="rotate(0,320,352)"/>
<polygon class="arrowhead" points="280,352 268,346.4 268,357.6" fill="black" transform="rotate(180,272,352)"/>
<polygon class="arrowhead" points="192,160 180,154.4 180,165.6" fill="black" transform="rotate(0,184,160)"/>
<polygon class="arrowhead" points="112,160 100,154.4 100,165.6" fill="black" transform="rotate(180,104,160)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="164" y="100">........................................</text>
<text x="8" y="116">.</text>
<text x="40" y="116">v</text>
<text x="320" y="116">.</text>
<text x="8" y="132">.</text>
<text x="248" y="132">.-.-.-.-.-.-.-.</text>
<text x="320" y="132">.</text>
<text x="8" y="148">.</text>
<text x="192" y="148">:</text>
<text x="244" y="148">Registrar-</text>
<text x="304" y="148">:</text>
<text x="320" y="148">.</text>
<text x="8" y="164">.</text>
<text x="60" y="164">Pledge</text>
<text x="192" y="164">:</text>
<text x="224" y="164">Agent</text>
<text x="304" y="164">:</text>
<text x="320" y="164">.</text>
<text x="8" y="180">.</text>
<text x="116" y="180">L2</text>
<text x="140" y="180">or</text>
<text x="164" y="180">L3</text>
<text x="248" y="180">:-.-.-.-.-.-.-:</text>
<text x="320" y="180">.</text>
<text x="8" y="196">.</text>
<text x="140" y="196">connectivity</text>
<text x="216" y="196">^</text>
<text x="320" y="196">.</text>
<text x="164" y="212">..........................!.............</text>
<text x="52" y="228">Pledge</text>
<text x="112" y="228">install</text>
<text x="216" y="228">!</text>
<text x="60" y="244">location</text>
<text x="216" y="244">!</text>
<text x="256" y="244">Nomadic</text>
<text x="216" y="260">!</text>
<text x="276" y="260">connectivity</text>
<text x="216" y="276">!</text>
<text x="248" y="292">...........!...................</text>
<text x="416" y="292">.........</text>
<text x="128" y="308">.</text>
<text x="216" y="308">v</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="208" y="324">.-.-.-.-.-.-.-.</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="152" y="340">:</text>
<text x="204" y="340">Registrar-</text>
<text x="264" y="340">:</text>
<text x="364" y="340">Domain</text>
<text x="448" y="340">.</text>
<text x="128" y="356">.</text>
<text x="152" y="356">:</text>
<text x="184" y="356">Agent</text>
<text x="264" y="356">:</text>
<text x="376" y="356">Registrar</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="208" y="372">:-.-.-.-.-.-.-:</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="248" y="420">Key</text>
<text x="324" y="420">Infrastructure</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="260" y="436">(e.g.,</text>
<text x="304" y="436">PKI</text>
<text x="336" y="436">CA)</text>
<text x="448" y="436">.</text>
<text x="128" y="452">.</text>
<text x="448" y="452">.</text>
<text x="288" y="468">.........................................</text>
<text x="236" y="484">&quot;Domain&quot;</text>
<text x="316" y="484">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
........................................      |
.   v                                  .      |
. +--------+           .-.-.-.-.-.-.-. .      |
. |        |           : Registrar-  : .      |
. | Pledge |<--------->: Agent       : .      |
. +--------+ L2 or L3  :-.-.-.-.-.-.-: .      |
.          connectivity   ^            .      |
..........................!.............      |
   Pledge install         !                   |
   location               ! Nomadic           |
                          ! connectivity      |
                          !                   |
               ...........!...................|.........
               .          v                   v        .
               .  .-.-.-.-.-.-.-.       +-----------+  .
               .  : Registrar-  :       | Domain    |  .
               .  : Agent       :<----->| Registrar |  .
               .  :-.-.-.-.-.-.-:       +-----+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t>PRM enables support of this case through nomadic connectivity of the Registrar-Agent.
To perform enrollment in this setup, multiple round trips of the Registrar-Agent between the pledge install location and the domain registrar are required.</t>

<t><list style="numbers">
  <t>Connectivity to domain registrar: preparation tasks for pledge bootstrapping not part of the BRSKI-PRM protocol definition, like retrieval of list of pledges to enroll.</t>
  <t>Connectivity to pledge install location: retrieve information about available pledges (IDevID), collect request objects like voucher-requests and enrollment-requests using the BRSKI-PRM approach described in <xref target="exchanges_uc2_1"/>.</t>
  <t>Connectivity to domain registrar, submit collected pledges' request information, retrieve response objects as voucher and enrollment information using the BRSKI-PRM approach described in <xref target="exchanges_uc2_2"/>.</t>
  <t>Connectivity to pledge install location, provide retrieved objects to the pledge to enroll pledges and collect status using the BRSKI-PRM approach described in <xref target="exchanges_uc2_3"/>.</t>
  <t>Connectivity to domain registrar, submit voucher status and enrollment status using the BRSKI-PRM approach described in <xref target="exchanges_uc2_4"/>.</t>
</list></t>

<t>Variations of this setup include cases where the Registrar-Agent uses for example WiFi to connect to the pledge installation network, and mobile network connectivity to connect to the domain registrar.
Both connections may also be possible in a single location at the same time, based on installation building conditions.,</t>

</section>
<section anchor="registrar-agent-co-located-with-registrar"><name>Registrar-Agent co-located with registrar</name>

<t>Compared to <xref target="RFC8995"/> BRSKI, pledges supporting BRSKI-PRM can be completely passive and only need to react when being requested to react by a Registrar-Agent.
In <xref target="RFC8995"/>, pledges instead need to continuously request enrollment from a domain registrar, which may result in undesirable communications pattern and possible overload of a domain registrar.</t>

<figure title="Registrar-Agent integrated into Domain Registrar example" anchor="uc4figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="472" viewBox="0 0 472 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,160 L 8,208" fill="none" stroke="black"/>
<path d="M 80,160 L 80,208" fill="none" stroke="black"/>
<path d="M 200,32 L 200,64" fill="none" stroke="black"/>
<path d="M 208,144 L 208,224" fill="none" stroke="black"/>
<path d="M 216,256 L 216,288" fill="none" stroke="black"/>
<path d="M 368,72 L 368,136" fill="none" stroke="black"/>
<path d="M 368,224 L 368,256" fill="none" stroke="black"/>
<path d="M 416,144 L 416,224" fill="none" stroke="black"/>
<path d="M 416,256 L 416,288" fill="none" stroke="black"/>
<path d="M 424,32 L 424,64" fill="none" stroke="black"/>
<path d="M 200,32 L 424,32" fill="none" stroke="black"/>
<path d="M 200,64 L 424,64" fill="none" stroke="black"/>
<path d="M 208,144 L 416,144" fill="none" stroke="black"/>
<path d="M 8,160 L 80,160" fill="none" stroke="black"/>
<path d="M 88,192 L 200,192" fill="none" stroke="black"/>
<path d="M 8,208 L 80,208" fill="none" stroke="black"/>
<path d="M 208,224 L 416,224" fill="none" stroke="black"/>
<path d="M 216,256 L 416,256" fill="none" stroke="black"/>
<path d="M 216,288 L 416,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="376,136 364,130.4 364,141.6" fill="black" transform="rotate(90,368,136)"/>
<polygon class="arrowhead" points="376,72 364,66.4 364,77.6" fill="black" transform="rotate(270,368,72)"/>
<polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
<polygon class="arrowhead" points="96,192 84,186.4 84,197.6" fill="black" transform="rotate(180,88,192)"/>
<g class="text">
<text x="48" y="52">.....</text>
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="176" y="52">.....</text>
<text x="236" y="52">Vendor</text>
<text x="296" y="52">Service</text>
<text x="32" y="68">:</text>
<text x="32" y="84">:</text>
<text x="32" y="100">:</text>
<text x="32" y="116">:</text>
<text x="240" y="116">...............................</text>
<text x="408" y="116">.........</text>
<text x="32" y="132">:</text>
<text x="120" y="132">.</text>
<text x="440" y="132">.</text>
<text x="32" y="148">v</text>
<text x="120" y="148">.</text>
<text x="440" y="148">.</text>
<text x="120" y="164">.</text>
<text x="268" y="164">..............</text>
<text x="440" y="164">.</text>
<text x="120" y="180">.</text>
<text x="216" y="180">.</text>
<text x="268" y="180">Registrar-</text>
<text x="320" y="180">.</text>
<text x="356" y="180">Domain</text>
<text x="440" y="180">.</text>
<text x="44" y="196">Pledge</text>
<text x="216" y="196">.</text>
<text x="248" y="196">Agent</text>
<text x="320" y="196">.</text>
<text x="368" y="196">Registrar</text>
<text x="440" y="196">.</text>
<text x="100" y="212">L2</text>
<text x="124" y="212">or</text>
<text x="148" y="212">L3</text>
<text x="268" y="212">..............</text>
<text x="440" y="212">.</text>
<text x="140" y="228">connectivity</text>
<text x="440" y="228">.</text>
<text x="120" y="244">.</text>
<text x="440" y="244">.</text>
<text x="120" y="260">.</text>
<text x="440" y="260">.</text>
<text x="120" y="276">.</text>
<text x="240" y="276">Key</text>
<text x="316" y="276">Infrastructure</text>
<text x="440" y="276">.</text>
<text x="120" y="292">.</text>
<text x="440" y="292">.</text>
<text x="280" y="308">.........................................</text>
<text x="228" y="324">&quot;Domain&quot;</text>
<text x="308" y="324">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
    :                                         |
    :          ...............................|.........
    :          .                              v        .
    v          .          +-------------------------+  .
 +--------+    .          |..............           |  .   
 |        |    .          |. Registrar- . Domain    |  .
 | Pledge |<------------->|. Agent      . Registrar |  .
 +--------+ L2 or L3      |..............           |  .   
            connectivity  +-------------------+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t>The benefits of BRSKI-PRM can be achieved even without the operational complexity of standalone Registrar-Agents by integrating the necessary functionality of the Registrar-Agent as a module into the domain registrar as shown in <xref target="uc4figure"/> so that it can support the BRSKI-PRM communications to the pledge.</t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement in the PVR and in the voucher, that the registrar certificate was provided via the Registrar-Agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is therefore a different assertion then "proximity", which is defined in section 4 of <xref target="RFC8366"/>.
"Agent-proximity" is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the registrar via the TLS handshake and pins that public key as the "proximity-registrar-cert" into the voucher request.
This allows the MASA to verify the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS connection is considered provisional until the pledge receives the voucher.</t>

<t>In contrast, in BRSKI-PRM, the pledge has no direct connection to the registrar and must take the Registrar-Agent LDevID provisionally.
The Registrar-Agent has included its LDevID, a certificate signed by the domain owner, into the PVR trigger message.
The Registrar-Agent identity is therefore included into the Pledge Voucher Request (PVR).</t>

<t>Akin to the BRSKI case, the pledge has provided proximity evidence to the MASA.
But additionally, this allows the Registrar to be sure that the PVR collected by the Registrar-Agent was in fact collected by the Registrar-Agent to which the Registrar is connected to.</t>

<t>In a similar fashion, the pledge accepts the registrar certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.
See also Section 5 of <xref target="RFC8995"/> on "PROVISIONAL accept of server cert".</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>The pledge is triggered by the Registrar-Agent to generate the PVR and PER.
It will also be triggered for processing of the responses and the generation of status information once the Registrar-Agent has received the responses from the registrar later in the process.
Due to the use of the Registrar-Agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction as responder with the Registrar-Agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>When the Registrar-Agent reaches out to a pledge, for instance with an example URI path "http://pledge.example/.well-known/brski/tpvr", it will in fact send a Host: header of "pledge.example", with a relative path of "/.well-known/brski/tpbr".
However in practice the pledge will often be known only by its IP address as returned by a discovery protocol, and that is what will be present in the Host: header.</t>

<t>The pledge <bcp14>MUST</bcp14> respond to all queries regardless of what Host: header is provided by the client.
<xref section="7.2" sectionFormat="comma" target="RFC9110"/> makes the Host: header mandatory, so it will always be present.</t>

<t>The following operations are defined for the <em>pledge</em> in this document, describing their endpoints and their corresponding URIs.
The endpoints are defined with short names to also accommodate for the constraint case.</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure1">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge-voucher-request creation - Returns PVR</c>
      <c>/tpvr</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge-enrollment-request - Returns PER</c>
      <c>/tper</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Supply voucher to pledge - Returns pledge voucher-status</c>
      <c>/svr</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply enrollment-response to pledge - Returns pledge enrollment-status</c>
      <c>/ser</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply CA certs to pledge</c>
      <c>/scac</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query status of pledge - Returns pledge-status</c>
      <c>/qps</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The Registrar-Agent as a new component provides a message passing service between the pledge and the domain registrar.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher-request/response, the enrollment-request/response, as well as related telemetry and status information.</t>

<t>For the communication with the pledge the Registrar-Agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.</t>

<t>The communication between the Registrar-Agent and the pledge <bcp14>MAY</bcp14> be protected using TLS as outlined in <xref target="exchanges_uc2_1"/>.
The details of doing TLS validation are <xref target="pledgehttps"/>.</t>

<t>For the communication with the registrar, the Registrar-Agent uses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
These endpoints do not expect signature wrapped-objects, which are used b BRSKI-PRM.
This specifically applies for the enrollment-request and the provisioning of CA certificates.
To accommodate the use of signature-wrapped object, the following additional endpoints are defined for the <em>registrar</em>.
Operations and their corresponding URIs:</t>

<texttable title="Additional endpoints on the registrar" anchor="eppfigure2">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Supply PER to registrar - Returns enrollment-response</c>
      <c>/requestenroll</c>
      <c><xref target="exchanges_uc2_2_per"/></c>
      <c>Request (wrapped) CA certificates - Returns wrapped CA Certificates</c>
      <c>/wrappedcacerts</c>
      <c><xref target="exchanges_uc2_2_wca"/></c>
</texttable>

<t>For authentication to the domain registrar, the Registrar-Agent uses its EE (RegAgt) certificate.
The provisioning of the Registrar-Agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived Registrar-Agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The Registrar-Agent will use its EE certificate when establishing a TLS session with the domain registrar for TLS client authentication.
The EE (RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> makes a similar requirement.
In BRSKI-PRM, the SKID is used in favor of providing the complete EE (RegAgt) certificate to accommodate also constraint environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SKID in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the Registrar-Agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the EE (RegAgt) certificate allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a Registrar-Agent and to adopt different internal handling accordingly.
If a registrar detects a request that originates from a Registrar-Agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the EE (RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing Registrar-Agent LDevID certificates.
This allows the registrar to detect Registrar-Agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the EE (RegAgt) certificate, the Registrar-Agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the Registrar-Agent using DNS-SD with mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by prior administrative means or the Registrar-Agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge-voucher-request object.
This behavior is retained also in BRSKI-PRM.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the Registrar-Agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>EE (RegAgt) certificate and corresponding private key: own operational key pair (to sign agent-signed-data).</t>
  <t>Registrar EE certificate: certificate of the domain registrar (to be provided to the pledge).</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped (to query discovery of specific pledges based on the product-serial-number).</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>As a Registrar-Agent acts as representative of the domain registrar towards the pledge or may even be collocated with the domain registrar, a separate discovery of the registrar is likely not needed as Registrar-Agent and registrar are domain components and have a trust relation.
Moreover, other communication (not part of this document) between the Registrar-Agent and the registrar is assumed, e.g., to exchange information about product-serial-number(s) of pledges to be discovered as outlined in <xref target="arch_nomadic"/>.
Moreover, as the standard discovery described in section 4 and the appendix A.2 of <xref target="RFC8995"/> does not support  of registrars with an enhanced feature set (like the support of BRSKI-PRM), this standard discovery is not applicable.</t>

<t>As a more general solution, the BRSKI discovery mechanism can be extended to provide upfront information on the capabilities of registrars, such as the mode of operation (pledge-responder-mode or registrar-responder-mode).
Defining discovery extensions is out of scope of this document.
This may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by Registrar-Agent in the context of this document describes the minimum discovery approach to be supported.
A more general discovery mechanism, also supporting GRASP besides DNS-SD with mDNS may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

<t>Discovery in BRSKI-PRM uses DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
Note that <xref target="RFC6762"/> Section 9 provides support for conflict resolution in situations when an DNS-SD with mDNS responder receives a mDNS response with inconsistent data.
Note that <xref target="RFC8990"/> does not support conflict resolution of mDNS, which may be a limitation for its application.</t>

<t>The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".
The product-serial-number composition is manufacturer dependent and may contain information regarding the manufacturer, the product type, and further information specific to the product instance. To allow distinction of pledges, the product-serial-number therefore needs to be sufficiently unique.</t>

<t>In the absence of a more general discovery as defined in <xref target="I-D.eckert-anima-brski-discovery"/> the Registrar-Agent <bcp14>MUST</bcp14>  use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on DNS-SD with mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply DNS-SD with mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
<section anchor="behavior-of-pledge-with-combined-functionality"><name>Behavior of Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator or responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a pledge-enrollment-request (PER) or to provide an enrollment-response can be used for further certificates.</t>

</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the Registrar-Agent may be accomplished using different transport means (protocols and/or network technologies).
This specification utilizes HTTP as transport.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the Registrar-Agent and the registrar.
Transport channel independence is realized by data objects, which are not bound to specific transport security and stay the same across the communication from the pledge via the Registrar-Agent to the registrar..
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The Registrar-Agent provides the domain registrar certificate (registrar LDevID certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the Registrar-Agent or may be fetched by the Registrar-Agent based on a prior TLS connection with this domain registrar.
In addition, the Registrar-Agent provides agent-signed-data containing the pledge product-serial-number, signed with the private key corresponding to the EE (RegAgt) certificate, as described in <xref target="exchanges_uc2_1"/>.
This enables the registrar to verify and log, which Registrar-Agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> provide the EE (RegAgt) certificate identified by the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR in its RVR (see also <xref target="pvr-proc-reg"/>.</t>

<t>The MASA in turn verifies the registrar LDevID certificate is included in the PVR (contained in the "prior-signed-voucher-request" field of RVR) in the "agent-provided-proximity-registrar-certificate" leaf and may assert the PVR as "verified" or "logged".</t>

<t>In addition, the MASA <bcp14>MAY</bcp14> issue the assertion "agent-proximity" as follows:
The MASA verifies the signature of the "agent-signed-data" contained in the "prior-signed-voucher-request", based on the provided EE (RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.
The assertion of "agent-proximity" is similar to the proximity assertion by the MASA when using BRSKI.
Note that the different assertions do not provide a metric of strength as the security properties are not comparable.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx error status code as described in section 5.6 of <xref target="RFC8995"/>.
When successful, the voucher will then be supplied via the registrar to the Registrar-Agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1088" width="560" viewBox="0 0 560 1088" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,248 L 32,336" fill="none" stroke="black"/>
<path d="M 32,392 L 32,592" fill="none" stroke="black"/>
<path d="M 32,632 L 32,712" fill="none" stroke="black"/>
<path d="M 32,728 L 32,752" fill="none" stroke="black"/>
<path d="M 32,808 L 32,896" fill="none" stroke="black"/>
<path d="M 32,952 L 32,1072" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 112,32 L 112,96" fill="none" stroke="black"/>
<path d="M 168,104 L 168,208" fill="none" stroke="black"/>
<path d="M 168,256 L 168,336" fill="none" stroke="black"/>
<path d="M 168,384 L 168,592" fill="none" stroke="black"/>
<path d="M 168,624 L 168,704" fill="none" stroke="black"/>
<path d="M 168,736 L 168,752" fill="none" stroke="black"/>
<path d="M 168,816 L 168,896" fill="none" stroke="black"/>
<path d="M 168,960 L 168,1072" fill="none" stroke="black"/>
<path d="M 208,32 L 208,96" fill="none" stroke="black"/>
<path d="M 240,32 L 240,96" fill="none" stroke="black"/>
<path d="M 312,104 L 312,208" fill="none" stroke="black"/>
<path d="M 312,256 L 312,336" fill="none" stroke="black"/>
<path d="M 312,512 L 312,592" fill="none" stroke="black"/>
<path d="M 312,640 L 312,704" fill="none" stroke="black"/>
<path d="M 312,736 L 312,752" fill="none" stroke="black"/>
<path d="M 312,816 L 312,896" fill="none" stroke="black"/>
<path d="M 312,960 L 312,1008" fill="none" stroke="black"/>
<path d="M 312,1040 L 312,1072" fill="none" stroke="black"/>
<path d="M 336,32 L 336,96" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 432,104 L 432,208" fill="none" stroke="black"/>
<path d="M 432,256 L 432,336" fill="none" stroke="black"/>
<path d="M 432,400 L 432,496" fill="none" stroke="black"/>
<path d="M 432,576 L 432,592" fill="none" stroke="black"/>
<path d="M 432,640 L 432,704" fill="none" stroke="black"/>
<path d="M 432,736 L 432,752" fill="none" stroke="black"/>
<path d="M 432,816 L 432,896" fill="none" stroke="black"/>
<path d="M 432,960 L 432,976" fill="none" stroke="black"/>
<path d="M 432,1040 L 432,1072" fill="none" stroke="black"/>
<path d="M 448,32 L 448,96" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 536,104 L 536,208" fill="none" stroke="black"/>
<path d="M 536,256 L 536,336" fill="none" stroke="black"/>
<path d="M 536,400 L 536,512" fill="none" stroke="black"/>
<path d="M 536,560 L 536,592" fill="none" stroke="black"/>
<path d="M 536,640 L 536,704" fill="none" stroke="black"/>
<path d="M 536,736 L 536,752" fill="none" stroke="black"/>
<path d="M 536,816 L 536,896" fill="none" stroke="black"/>
<path d="M 536,960 L 536,1008" fill="none" stroke="black"/>
<path d="M 536,1040 L 536,1072" fill="none" stroke="black"/>
<path d="M 552,32 L 552,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 112,32 L 208,32" fill="none" stroke="black"/>
<path d="M 240,32 L 336,32" fill="none" stroke="black"/>
<path d="M 376,32 L 448,32" fill="none" stroke="black"/>
<path d="M 472,32 L 552,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 112,96 L 208,96" fill="none" stroke="black"/>
<path d="M 240,96 L 336,96" fill="none" stroke="black"/>
<path d="M 376,96 L 448,96" fill="none" stroke="black"/>
<path d="M 472,96 L 552,96" fill="none" stroke="black"/>
<path d="M 40,176 L 160,176" fill="none" stroke="black"/>
<path d="M 40,192 L 160,192" fill="none" stroke="black"/>
<path d="M 40,256 L 56,256" fill="none" stroke="black"/>
<path d="M 136,256 L 160,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 136,272 L 160,272" fill="none" stroke="black"/>
<path d="M 40,288 L 80,288" fill="none" stroke="black"/>
<path d="M 128,288 L 160,288" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 136,320 L 160,320" fill="none" stroke="black"/>
<path d="M 40,336 L 80,336" fill="none" stroke="black"/>
<path d="M 128,336 L 160,336" fill="none" stroke="black"/>
<path d="M 176,400 L 216,400" fill="none" stroke="black"/>
<path d="M 264,400 L 304,400" fill="none" stroke="black"/>
<path d="M 176,448 L 208,448" fill="none" stroke="black"/>
<path d="M 256,448 L 304,448" fill="none" stroke="black"/>
<path d="M 320,512 L 408,512" fill="none" stroke="black"/>
<path d="M 456,512 L 528,512" fill="none" stroke="black"/>
<path d="M 320,560 L 392,560" fill="none" stroke="black"/>
<path d="M 472,560 L 528,560" fill="none" stroke="black"/>
<path d="M 176,576 L 200,576" fill="none" stroke="black"/>
<path d="M 280,576 L 304,576" fill="none" stroke="black"/>
<path d="M 176,640 L 216,640" fill="none" stroke="black"/>
<path d="M 264,640 L 304,640" fill="none" stroke="black"/>
<path d="M 320,656 L 344,656" fill="none" stroke="black"/>
<path d="M 392,656 L 424,656" fill="none" stroke="black"/>
<path d="M 320,672 L 344,672" fill="none" stroke="black"/>
<path d="M 400,672 L 424,672" fill="none" stroke="black"/>
<path d="M 176,688 L 192,688" fill="none" stroke="black"/>
<path d="M 288,688 L 304,688" fill="none" stroke="black"/>
<path d="M 288,736 L 304,736" fill="none" stroke="black"/>
<path d="M 176,752 L 192,752" fill="none" stroke="black"/>
<path d="M 40,816 L 56,816" fill="none" stroke="black"/>
<path d="M 136,816 L 160,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 160,832" fill="none" stroke="black"/>
<path d="M 40,848 L 64,848" fill="none" stroke="black"/>
<path d="M 144,848 L 160,848" fill="none" stroke="black"/>
<path d="M 40,864 L 64,864" fill="none" stroke="black"/>
<path d="M 144,864 L 160,864" fill="none" stroke="black"/>
<path d="M 40,880 L 56,880" fill="none" stroke="black"/>
<path d="M 40,896 L 56,896" fill="none" stroke="black"/>
<path d="M 136,896 L 160,896" fill="none" stroke="black"/>
<path d="M 176,960 L 224,960" fill="none" stroke="black"/>
<path d="M 272,960 L 304,960" fill="none" stroke="black"/>
<path d="M 176,976 L 200,976" fill="none" stroke="black"/>
<path d="M 288,976 L 304,976" fill="none" stroke="black"/>
<path d="M 320,992 L 336,992" fill="none" stroke="black"/>
<path d="M 512,992 L 528,992" fill="none" stroke="black"/>
<path d="M 320,1008 L 352,1008" fill="none" stroke="black"/>
<path d="M 504,1008 L 528,1008" fill="none" stroke="black"/>
<path d="M 176,1056 L 200,1056" fill="none" stroke="black"/>
<path d="M 280,1056 L 304,1056" fill="none" stroke="black"/>
<polygon class="arrowhead" points="536,992 524,986.4 524,997.6" fill="black" transform="rotate(0,528,992)"/>
<polygon class="arrowhead" points="536,512 524,506.4 524,517.6" fill="black" transform="rotate(0,528,512)"/>
<polygon class="arrowhead" points="432,656 420,650.4 420,661.6" fill="black" transform="rotate(0,424,656)"/>
<polygon class="arrowhead" points="328,1008 316,1002.4 316,1013.6" fill="black" transform="rotate(180,320,1008)"/>
<polygon class="arrowhead" points="328,672 316,666.4 316,677.6" fill="black" transform="rotate(180,320,672)"/>
<polygon class="arrowhead" points="328,560 316,554.4 316,565.6" fill="black" transform="rotate(180,320,560)"/>
<polygon class="arrowhead" points="312,1056 300,1050.4 300,1061.6" fill="black" transform="rotate(0,304,1056)"/>
<polygon class="arrowhead" points="312,976 300,970.4 300,981.6" fill="black" transform="rotate(0,304,976)"/>
<polygon class="arrowhead" points="312,960 300,954.4 300,965.6" fill="black" transform="rotate(0,304,960)"/>
<polygon class="arrowhead" points="312,736 300,730.4 300,741.6" fill="black" transform="rotate(0,304,736)"/>
<polygon class="arrowhead" points="312,640 300,634.4 300,645.6" fill="black" transform="rotate(0,304,640)"/>
<polygon class="arrowhead" points="312,448 300,442.4 300,453.6" fill="black" transform="rotate(0,304,448)"/>
<polygon class="arrowhead" points="312,400 300,394.4 300,405.6" fill="black" transform="rotate(0,304,400)"/>
<polygon class="arrowhead" points="184,960 172,954.4 172,965.6" fill="black" transform="rotate(180,176,960)"/>
<polygon class="arrowhead" points="184,752 172,746.4 172,757.6" fill="black" transform="rotate(180,176,752)"/>
<polygon class="arrowhead" points="184,688 172,682.4 172,693.6" fill="black" transform="rotate(180,176,688)"/>
<polygon class="arrowhead" points="184,576 172,570.4 172,581.6" fill="black" transform="rotate(180,176,576)"/>
<polygon class="arrowhead" points="184,400 172,394.4 172,405.6" fill="black" transform="rotate(180,176,400)"/>
<polygon class="arrowhead" points="168,896 156,890.4 156,901.6" fill="black" transform="rotate(0,160,896)"/>
<polygon class="arrowhead" points="168,848 156,842.4 156,853.6" fill="black" transform="rotate(0,160,848)"/>
<polygon class="arrowhead" points="168,816 156,810.4 156,821.6" fill="black" transform="rotate(0,160,816)"/>
<polygon class="arrowhead" points="168,336 156,330.4 156,341.6" fill="black" transform="rotate(0,160,336)"/>
<polygon class="arrowhead" points="168,288 156,282.4 156,293.6" fill="black" transform="rotate(0,160,288)"/>
<polygon class="arrowhead" points="168,256 156,250.4 156,261.6" fill="black" transform="rotate(0,160,256)"/>
<polygon class="arrowhead" points="168,192 156,186.4 156,197.6" fill="black" transform="rotate(0,160,192)"/>
<polygon class="arrowhead" points="48,880 36,874.4 36,885.6" fill="black" transform="rotate(180,40,880)"/>
<polygon class="arrowhead" points="48,864 36,858.4 36,869.6" fill="black" transform="rotate(180,40,864)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,816 36,810.4 36,821.6" fill="black" transform="rotate(180,40,816)"/>
<polygon class="arrowhead" points="48,320 36,314.4 36,325.6" fill="black" transform="rotate(180,40,320)"/>
<polygon class="arrowhead" points="48,272 36,266.4 36,277.6" fill="black" transform="rotate(180,40,272)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<path class="jump" d="M 32,728 C 26,728 26,712 32,712" fill="none" stroke="black"/><circle cx="168" cy="384" r="6" class="opendot" fill="white" stroke="black"/>
<circle cx="168" cy="624" r="6" class="opendot" fill="white" stroke="black"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="164" y="52">Registrar-</text>
<text x="276" y="52">Domain</text>
<text x="412" y="52">Domain</text>
<text x="508" y="52">Vendor</text>
<text x="144" y="68">Agent</text>
<text x="288" y="68">Registrar</text>
<text x="396" y="68">CA</text>
<text x="512" y="68">Service</text>
<text x="156" y="84">(RegAgt)</text>
<text x="280" y="84">(JRC)</text>
<text x="508" y="84">(MASA)</text>
<text x="492" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="40" y="244">(1)</text>
<text x="88" y="244">trigger</text>
<text x="136" y="244">PVR</text>
<text x="180" y="244">(tPVR)</text>
<text x="224" y="244">and</text>
<text x="256" y="244">PER</text>
<text x="300" y="244">(tPER)</text>
<text x="372" y="244">generation</text>
<text x="428" y="244">on</text>
<text x="468" y="244">pledge</text>
<text x="76" y="260">opt.</text>
<text x="112" y="260">TLS</text>
<text x="108" y="276">tPVR</text>
<text x="104" y="292">PVR</text>
<text x="108" y="324">tPER</text>
<text x="104" y="340">PER</text>
<text x="32" y="356">~</text>
<text x="168" y="356">~</text>
<text x="312" y="356">~</text>
<text x="432" y="356">~</text>
<text x="536" y="356">~</text>
<text x="40" y="388">(2)</text>
<text x="88" y="388">provide</text>
<text x="136" y="388">PVR</text>
<text x="160" y="388">t</text>
<text x="236" y="388">infrastructure</text>
<text x="240" y="404">TLS</text>
<text x="312" y="404">|</text>
<text x="276" y="420">[Reg-Agt</text>
<text x="368" y="420">authenticated</text>
<text x="264" y="436">and</text>
<text x="332" y="436">authorized?]</text>
<text x="232" y="452">PVR</text>
<text x="312" y="452">|</text>
<text x="276" y="468">[Reg-Agt</text>
<text x="364" y="468">authorized?]</text>
<text x="272" y="484">[accept</text>
<text x="340" y="484">device?]</text>
<text x="276" y="500">[contact</text>
<text x="344" y="500">vendor]</text>
<text x="432" y="516">RVR</text>
<text x="436" y="532">[extract</text>
<text x="512" y="532">DomainID]</text>
<text x="432" y="548">[update</text>
<text x="488" y="548">audit</text>
<text x="532" y="548">log]</text>
<text x="432" y="564">Voucher</text>
<text x="240" y="580">Voucher</text>
<text x="40" y="628">(2)</text>
<text x="88" y="628">provide</text>
<text x="136" y="628">PER</text>
<text x="160" y="628">t</text>
<text x="236" y="628">infrastructure</text>
<text x="240" y="644">PER</text>
<text x="368" y="660">CSR</text>
<text x="372" y="676">Cert</text>
<text x="240" y="692">Enroll-Resp</text>
<text x="44" y="724">2)</text>
<text x="80" y="724">query</text>
<text x="136" y="724">cACerts</text>
<text x="188" y="724">from</text>
<text x="268" y="724">infrastructure</text>
<text x="180" y="740">--</text>
<text x="236" y="740">cACert-Req</text>
<text x="256" y="756">cACert-Resp--</text>
<text x="32" y="772">~</text>
<text x="168" y="772">~</text>
<text x="312" y="772">~</text>
<text x="432" y="772">~</text>
<text x="536" y="772">~</text>
<text x="40" y="804">(3)</text>
<text x="88" y="804">provide</text>
<text x="152" y="804">voucher</text>
<text x="200" y="804">and</text>
<text x="264" y="804">certificate</text>
<text x="328" y="804">and</text>
<text x="376" y="804">collect</text>
<text x="436" y="804">status</text>
<text x="484" y="804">info</text>
<text x="76" y="820">opt.</text>
<text x="112" y="820">TLS</text>
<text x="104" y="836">Voucher</text>
<text x="104" y="852">vStatus</text>
<text x="104" y="868">cACerts</text>
<text x="112" y="884">Enroll-Resp--</text>
<text x="96" y="900">eStatus</text>
<text x="32" y="916">~</text>
<text x="168" y="916">~</text>
<text x="312" y="916">~</text>
<text x="432" y="916">~</text>
<text x="536" y="916">~</text>
<text x="40" y="948">(4)</text>
<text x="88" y="948">provide</text>
<text x="152" y="948">voucher</text>
<text x="212" y="948">status</text>
<text x="256" y="948">and</text>
<text x="300" y="948">enroll</text>
<text x="356" y="948">status</text>
<text x="396" y="948">to</text>
<text x="448" y="948">registrar</text>
<text x="248" y="964">TLS</text>
<text x="248" y="980">vStatus</text>
<text x="360" y="996">req</text>
<text x="404" y="996">device</text>
<text x="456" y="996">audit</text>
<text x="496" y="996">log</text>
<text x="388" y="1012">device</text>
<text x="440" y="1012">audit</text>
<text x="480" y="1012">log</text>
<text x="288" y="1028">[verify</text>
<text x="344" y="1028">audit</text>
<text x="388" y="1028">log]</text>
<text x="240" y="1060">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+   +-----------+   +-----------+    +--------+  +---------+
| Pledge |   | Registrar-|   | Domain    |    | Domain |  | Vendor  |
|        |   | Agent     |   | Registrar |    | CA     |  | Service |
|        |   | (RegAgt)  |   |  (JRC)    |    |        |  | (MASA)  |
+--------+   +-----------+   +-----------+    +--------+  +---------+
   |                |                 |              |   Internet |
   |   discover     |                 |              |            |
   |    pledge      |                 |              |            |
   | mDNS query     |                 |              |            |
   |<---------------|                 |              |            |
   |--------------->|                 |              |            |
   |                |                 |              |            |

   (1) trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<--opt. TLS --->|                 |              |            |
   |<----- tPVR ----|                 |              |            |
   |------ PVR ---->|                 |              |            |
   |                |                 |              |            |
   |<----- tPER ----|                 |              |            |
   |------ PER ---->|                 |              |            |
   ~                ~                 ~              ~            ~

   (2) provide PVR to infrastructure
   |                |<----- TLS ----->|              |            |
   |                |         [Reg-Agt authenticated |            |
   |                |          and authorized?]      |            |
   |                |----- PVR ------>|              |            |
   |                |         [Reg-Agt authorized?]  |            |
   |                |         [accept device?]       |            |
   |                |         [contact vendor]       |            |
   |                |                 |------------ RVR --------->|
   |                |                 |           [extract DomainID]
   |                |                 |           [update audit log]
   |                |                 |<--------- Voucher --------|
   |                |<--- Voucher ----|              |            |
   |                |                 |              |            |

   (2) provide PER to infrastructure
   |                |------ PER ----->|              |            |
   |                |                 |---- CSR ---->|            |
   |                |                 |<--- Cert ----|            |
   |                |<--Enroll-Resp---|              |            |
   |                |                 |              |            |
   (2) query cACerts from infrastructure
   |                |-- cACert-Req -->|              |            |
   |                |<-- cACert-Resp--|              |            |
   ~                ~                 ~              ~            ~

   (3) provide voucher and certificate and collect status info
   |<--opt. TLS --->|                 |              |            |
   |<--- Voucher ---|                 |              |            |
   |---- vStatus -->|                 |              |            |
   |<--- cACerts ---|                 |              |            |
   |<--Enroll-Resp--|                 |              |            |
   |--- eStatus --->|                 |              |            |
   ~                ~                 ~              ~            ~

   (4) provide voucher status and enroll status to registrar
   |                |<------ TLS ---->|              |            |
   |                |----  vStatus -->|              |            |
   |                |                 |--- req device audit log-->|
   |                |                 |<---- device audit log ----|
   |                |           [verify audit log]
   |                |                 |              |            |
   |                |---- eStatus --->|              |            |
   |                |                 |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers">
  <t><xref target="exchanges_uc2_1"/> describes the request object acquisition by the Registrar-Agent from pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes the request object processing initiated by the Registrar-Agent to the registrar and also the interaction of the registrar with the MASA and the domain CA including the response object processing by these entities.</t>
  <t><xref target="exchanges_uc2_3"/> describes the supply of response objects between the Registrar-Agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses corresponding exchanges between the Registrar-Agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the Registrar-Agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> and <xref target="exchangesfig_uc2_all"/> based on DNS-SD or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-Agent:
  <list style="symbols">
      <t>possesses own credentials (EE (RegAgt) certificate and corresponding private key) for the registrar domain.</t>
      <t><bcp14>MAY</bcp14> possess the IDevID CA certificate of the pledge vendor/manufacturer to validate IDevID certificate on returned PVR or in case of TLS usage for pledge communication.
The distribution of IDevID CA certificates to the Registrar-Agent is out of scope of this document and may be done by a manual configuration.
In addition, the Registrar-Agent <bcp14>SHOULD</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The Registrar-Agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
      <list style="symbols">
          <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
          <t>discovered by using standard approaches like DNS-SD with mDNS as described in <xref target="discovery_uc2_ppa"/></t>
          <t>discovered by using a manufacturer specific approach, e.g., RF beacons.
If the product-serial-number(s) are not known in advance, the Registrar-Agent cannot perform a distinct triggering of pledges but and triggers  all pledges discovered .</t>
        </list></t>
    </list>
The Registrar-Agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
  <t>Registrar (same as in BRSKI): possesses/trusts IDevID CA certificate and has own registrar EE credentials.</t>
</list></t>

<figure title="Request collection (Registrar-Agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="576" viewBox="0 0 576 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 424,104 L 424,336" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 376,32 L 472,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 376,96 L 472,96" fill="none" stroke="black"/>
<path d="M 48,144 L 64,144" fill="none" stroke="black"/>
<path d="M 352,144 L 416,144" fill="none" stroke="black"/>
<path d="M 48,176 L 72,176" fill="none" stroke="black"/>
<path d="M 336,176 L 416,176" fill="none" stroke="black"/>
<path d="M 48,240 L 80,240" fill="none" stroke="black"/>
<path d="M 280,240 L 416,240" fill="none" stroke="black"/>
<path d="M 48,272 L 88,272" fill="none" stroke="black"/>
<path d="M 376,272 L 416,272" fill="none" stroke="black"/>
<path d="M 48,320 L 88,320" fill="none" stroke="black"/>
<path d="M 312,320 L 416,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="424,320 412,314.4 412,325.6" fill="black" transform="rotate(0,416,320)"/>
<polygon class="arrowhead" points="424,240 412,234.4 412,245.6" fill="black" transform="rotate(0,416,240)"/>
<polygon class="arrowhead" points="56,272 44,266.4 44,277.6" fill="black" transform="rotate(180,48,272)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="428" y="52">Registrar-</text>
<text x="408" y="68">Agent</text>
<text x="420" y="84">(RegAgt)</text>
<text x="456" y="116">-create</text>
<text x="504" y="132">agent-signed-data</text>
<text x="108" y="148">optional</text>
<text x="184" y="148">establish</text>
<text x="240" y="148">TLS</text>
<text x="300" y="148">connection</text>
<text x="112" y="180">trigger</text>
<text x="236" y="180">pledge-voucher-request</text>
<text x="244" y="196">-agent-provided-proximity-registrar-cert</text>
<text x="156" y="212">-agent-signed-data</text>
<text x="180" y="244">pledge-voucher-request</text>
<text x="452" y="244">-store</text>
<text x="496" y="244">PVR</text>
<text x="128" y="276">trigger</text>
<text x="264" y="276">pledge-enrollment-request</text>
<text x="128" y="292">(empty)</text>
<text x="200" y="324">pledge-enrollment-request</text>
<text x="452" y="324">-store</text>
<text x="504" y="324">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                                    +-----------+
| Pledge |                                    | Registrar-|
|        |                                    | Agent     |
|        |                                    | (RegAgt)  |
+--------+                                    +-----------+
    |                                               |-create
    |                                               | agent-signed-data
    |<-- optional establish TLS connection ---------|
    |                                               |
    |<--- trigger pledge-voucher-request -----------|
    |     -agent-provided-proximity-registrar-cert  |
    |     -agent-signed-data                        |
    |                                               |
    |----- pledge-voucher-request ----------------->|-store PVR
    |                                               |
    |<----- trigger pledge-enrollment-request ------|
    |       (empty)                                 |
    |                                               |
    |------ pledge-enrollment-request ------------->|-store (PER)
    |                                               |
]]></artwork></artset></figure>

<t>TLS <bcp14>MAY</bcp14> be optionally used to provide privacy for the interaction between the Registrar-Agent and the pledge, see <xref target="pledgehttps"/>.</t>

<t>Note: The Registrar-Agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="pvrt"><name>Pledge-Voucher-Request (PVR) - Trigger</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tpvr"</t>

<t>The Registrar-Agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Note that at the time of receiving the PVR trigger, the pledge cannot verify the registrar LDevID certificate and has no proof-of-possession of the corresponding private key for the certificate. The pledge therefore accepts the registrar LDevID certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge will also be unable to verify the agent-signed-data itself as it does not possess the EE (RegAgt) certificate and the domain trust has not been established at this point of the communication.
Verification <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value) of the EE (RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request:agent-signed-data" element (defined in <xref target="I-D.ietf-anima-rfc8366bis"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload representation in JSON syntax of
  "ietf-voucher-request-prm:agent-signed-data"

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="pvrr"><name>Pledge-Voucher-Request (PVR) - Response</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the Registrar-Agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the Registrar-Agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/> to support JWS signing of the object:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate. If the certificate chain is not included it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity" (different value as in RFC 8995)..</t>
</list></t>

<t>The ietf-voucher-request:voucher is extended with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar LDevID certificate (provided as PVR trigger parameter by the Registrar-Agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as a PVR trigger parameter by the Registrar-Agent.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-voucher-request-prm:voucher"
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
    "alg": "ES256",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ],
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Media-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>MUST</bcp14> include this Media-Type header field indicating the included media type for the PVR.
The PVR is included by the registrar in its RCR as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="pledge-enrollment-request-per-trigger"><name>Pledge-Enrollment-Request (PER) - Trigger</name>

<t>Once the Registrar-Agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tper"</t>

<t>The Registrar-Agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "re-enroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>This document specifies the request of a generic certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing RA/CA.
How the HTTP POST can be used to provide CSR attributes is out of scope for this specification.</t>

</section>
<section anchor="PER-response"><name>Pledge-Enrollment-Request (PER) - Response</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the PER  trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID, POI is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the pledge-enrollment-request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>MUST</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the Registrar-Agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The Registrar-Agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format.
Note that the wrapping of the PER signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The Registrar-Agent enrollment-request Content-Type header for a signature-wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge-enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate. If the certificate chain is not included it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate.
The body of the pledge-enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/></t>
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<t>While BRSKI-PRM targets the initial enrollment, re-enrollment <bcp14>SHOULD</bcp14> be supported as described in a similar way as for enrollment in this document, if no other re-enrollment mechanism is supported.
Note that in this case the current LDevID credential is used instead of the IDevID credential to create the signature of the PKCS#10 request.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-ztp-types" Representation
  in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" Representation
  in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the Registrar-Agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t>As the Registrar-Agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the Registrar-Agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent on Registrar, MASA and Domain CA</name>

<t>The BRSKI-PRM bootstrapping exchanges between Registrar-Agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-Agent: possesses its own credentials (EE (RegAgt) certificate and corresponding private key) of the domain.
In addition, it <bcp14>MAY</bcp14> possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., DNS-SD with mDNS.
The Registrar-Agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar (same as in BRSKI): possesses the IDevID CA certificate of the pledge vendor/manufacturer and its own registrar EE credentials of the domain.</t>
  <t>MASA (same as in BRSKI): possesses its own vendor/manufacturer credentials (voucher signing key and certificate, TLS server certificate and private key) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.</t>
</list></t>

<figure title="Request processing between Registrar-Agent and bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| Agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The Registrar-Agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the Registrar-Agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="connection-establishment-registrar-agent-to-registrar"><name>Connection Establishment (Registrar-Agent to Registrar)</name>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using Registrar-Agent EE credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the Registrar-Agent is authorized to establish a connection to the registrar based on the TLS client authentication.
If the connection from Registrar-Agent to registrar is established, the authorization <bcp14>SHOULD</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized Registrar-Agent.</t>

<t>With BRSKI-PRM, the pledge generates PVR and PER as JSON-in-JWS objects and the Registrar-Agent forwards them to the registrar.
In <xref target="RFC8995"/>, the pledge generates PVR as CMS-signed JSON and PER as PKCS#10 or PKCS#7 according to <xref target="RFC7030"/> and inherited by <xref target="RFC8995"/>.</t>

<t>For BRSKI-PRM, the Registrar-Agent sends the PVR by HTTP POST to the same registrar endpoint as introduced by BRSKI: "/.well-
known/brski/requestvoucher", but with a Content-Type header field for JSON-in-JWS"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The Registrar-Agent sets the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field is set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="pvr-proc-reg"><name>Pledge-Voucher-Request (PVR) Processing by Registrar</name>

<t>After receiving the PVR from Registrar-Agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar LDevID certificate to ensure the registrar in proximity of the Registrar-Agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the Registrar-Agent provided data has been signed with the private key corresponding to the EE (RegAgt) certificate indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue Registrar-Agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the EE (RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar has access to the EE (RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.
Note, the registrar may have stored the EE (RegAgt) certificate if used during TLS establishment between Registrar-Agent and registrar or it may be provided via a repository.</t>
</list></t>

<t>If the registrar is unable to validate the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the Registrar-Agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid.</t>
  <t>404 Not Found status code if the pledge provided information could not be used with automated allowance, as described in section 5.3 of <xref target="RFC8995"/>.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar performs pledge authorization according to <xref target="RFC8995"/>, Section 5.3 followed by obtaining a voucher from the pledge's MASA according to <xref target="RFC8995"/>, Section 5.4 with the modifications described below in <xref target="rvr-proc"/>.</t>

</section>
<section anchor="rvr-proc"><name>Registrar-Voucher-Request (RVR) Processing (Registrar to MASA)</name>

<t>If the MASA address/URI is learned from the <xref target="RFC8995"/> Section 2.3 IDevID MASA URI extension, then the MASA on that URI <bcp14>MUST</bcp14> support the procedures defined in this document if the PVR used JSON-JWS encoding.
If the MASA is only configured on the registrar, then a registrar supporting BRKSI-PRM and other voucher encoding formats (such as those in <xref target="RFC8995"/>) <bcp14>SHOULD</bcp14> support per-message-format MASA address/URI configuration for the same IDevID trust anchor."</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>, Section 5.5.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of Registrar-Agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as received from Registrar-Agent, see <xref target="pvrr"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be extended with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: EE (RegAgt) certificate or the EE (RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.
If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.</t>
</list></t>

<t>The MASA uses this information for verification that the Registrar-Agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar LDevID credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher-request-prm:voucher"
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>This document uses the JSON-in-JWS format throughout the definition of exchanges and in the examples.
Nevertheless, alternative encodings of the voucher as used in BRSKI <xref target="RFC8995"/> with JSON-in-CMS or CBOR-in-COSE_Sign <xref target="RFC8152"/> for constraint environments are possible as well.
The assumption is that a pledge typically supports a single encoding variant and creates the PVR in the supported format.
To ensure that the pledge is able to process the voucher, the registrar <bcp14>MUST</bcp14> use the media type for Accept header in the RVR based on the media type used for the PVR.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in Section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar LDevID certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar LDevID credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar LDevID certificate is used or that different registrar LDevID certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The EE (RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding EE (RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar LDevID certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the EE (RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in Section 5.6 of <xref target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="exchanges_uc2_2_vc"><name>Voucher Issuance by MASA</name>

<t>The MASA creates a voucher with Media-Type of <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the MASA detects that the Accept header of the PVR does not match <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code "406 Not Acceptable" as the pledge will not be able to parse the response.
The voucher is according to <xref target="I-D.ietf-anima-rfc8366bis"/> but uses the new assertion value specified <xref target="agt_prx"/>.</t>

<t><xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation
  in JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The pinned-domain certificate to be put into the voucher is determined by the MASA as described in section 5.5 of <xref target="RFC8995"/>.
The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>MASA issued Voucher Processing by Registrar</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in Section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar EE credentials.</t>

<t>The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credentials (see <xref target="RFC7515"/>, Section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar EE certificate as well as potential subordinate CA certificates up to (but not including) the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>(For many installations, with a single registrar credential, the registrar credential is what is pinned)</t>

<t>In <xref target="RFC8995"/>, the Registrar proved possession of the it's credential when the TLS session was setup.
While the pledge could not, at the time, validate the certificate truly belonged the registrar, it did validate that the certificate it was provided was able to authenticate the TLS connection.</t>

<t>In the BRSKI-PRM mode, with the Registrar-Agent mediating all communication, the Pledge has not as yet been able to witness that the intended Registrar really does possess the relevant private key.
This second signature provides for the same level of assurance to the pledge, and that it matches the public key that the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).</t>

<t>The registrar <bcp14>MUST</bcp14> use the same registrar EE credentials used for authentication in the TLS handshake to authenticate towards the Registrar-Agent.
This has some operational implications when the registrar may be part of a scalable framework as described in <xref section="1.3.1" sectionFormat="comma" target="I-D.richardson-anima-registrar-considerations"/>.</t>

<t>The second signature <bcp14>MUST</bcp14> either be done with the private key associated with the registrar EE certificate provided to the Registrar-Agent, or the use of a certificate chain is necessary.
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher-request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".</t>

<t><xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": BASE64URL(JWS Signature)
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header (MASA)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Example: Decoded "JWS Protected Header (Reg)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge as explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the Registrar-Agent.</t>

</section>
<section anchor="exchanges_uc2_2_per"><name>Pledge-Enrollment-Request (PER) Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the Registrar-Agent sends the PER to the registrar in the same HTTP-over-TLS connection. Which is similar to the PER processing described in Section 5.2 of <xref target="RFC8995"/>.
In case the PER cannot be send in the same HTTP-over-TLS connection the Registrar-Agent may send the PER in a new HTTP-over-TLS connection. The registrar is able to correlate the PVR and the PER based on the signatures and the contained product-serial-number information.
Note, this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.
As specified in <xref target="PER-response"/> deviating from BRSKI the PER is not a raw PKCS#10.
As the Registrar-Agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the EE (RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment-request with the corresponding domain CA.
It creates a registrar-enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>Note while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported in a similar way with the exception that the current LDevID certificate is used instead of the IDevID certificate to verify the wrapping signature of the PKCS#10 request (see also <xref target="PER-response"/>).</t>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the Registrar-Agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="exchanges_uc2_2_wca"><name>Request Wrapped-CA-certificate(s) (Registrar-Agent to Registrar)</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t>To support Registrar-Agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar LDevID credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64 encoded "x5bag" (see definition in <xref target="RFC9360"/>) in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with registrar signature in General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "certs" representation in JSON syntax
{
  "x5bag": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Objects supplied by the Registrar-Agent to the Pledge</name>

<t>It is assumed that the Registrar-Agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID (Pledge) certificate (from CA via registrar)</t>
</list></t>

<t>To deliver these response objects, the Registrar-Agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-Agent: obtained voucher and LDevID certificate and optionally IDevID CA certificates.
The IDevID CA certificate is necessary, when the connection between the Registrar-Agent and the pledge is established using TLS to enable the Registrar-Agent to validate the pledges' IDevID certificate during the TLS handshake as described in <xref target="exchanges_uc2_1"/>.</t>
</list></t>

<figure title="Responses and status handling between pledge and Registrar-Agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 88,160" fill="none" stroke="black"/>
<path d="M 296,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 104,192" fill="none" stroke="black"/>
<path d="M 240,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 112,224" fill="none" stroke="black"/>
<path d="M 248,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 296,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 72,288" fill="none" stroke="black"/>
<path d="M 304,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 112,320" fill="none" stroke="black"/>
<path d="M 240,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,320 316,314.4 316,325.6" fill="black" transform="rotate(0,320,320)"/>
<polygon class="arrowhead" points="328,224 316,218.4 316,229.6" fill="black" transform="rotate(0,320,224)"/>
<polygon class="arrowhead" points="56,288 44,282.4 44,293.6" fill="black" transform="rotate(180,48,288)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,192 44,186.4 44,197.6" fill="black" transform="rotate(180,48,192)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="132" y="164">optional</text>
<text x="184" y="164">TLS</text>
<text x="244" y="164">connection</text>
<text x="140" y="196">supply</text>
<text x="200" y="196">voucher</text>
<text x="152" y="228">voucher</text>
<text x="212" y="228">status</text>
<text x="344" y="228">-</text>
<text x="376" y="228">store</text>
<text x="380" y="244">pledge</text>
<text x="440" y="244">voucher</text>
<text x="500" y="244">status</text>
<text x="108" y="260">supply</text>
<text x="168" y="260">CAcerts</text>
<text x="244" y="260">(optional)</text>
<text x="108" y="292">supply</text>
<text x="216" y="292">enrollment-response</text>
<text x="148" y="324">enroll</text>
<text x="204" y="324">status</text>
<text x="344" y="324">-</text>
<text x="376" y="324">store</text>
<text x="380" y="340">pledge</text>
<text x="436" y="340">enroll</text>
<text x="492" y="340">status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<----- optional TLS connection ----|
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<--- supply CAcerts (optional) ----|
    |                                   |
    |<--- supply enrollment-response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status

]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>MAY</bcp14> optionally use TLS to protect the communication as outlined in <xref target="exchanges_uc2_1"/>.</t>

<t>The Registrar-Agent provides the information via distinct pledge endpoints as following.</t>

<section anchor="exchanges_uc2_3a"><name>Pledge: Voucher-Response Processing</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/svr".</t>

<t>The Registrar-Agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of several signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in Section 5.6.1 in <xref target="RFC8995"/>, against pre-installed manufacturer trust anchor (IDevID).</t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Validate the LDevID(Reg) certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert")</t>
  <t>Verify registrar signature of the voucher similar as described in Section 5.6.1 in <xref target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
</list></t>

<t>Step3 and step 4 have been introduced in BRSKI-PRM to enable verification of LDevID(Reg) certificate and also the proof-of-possession of the corresponding private key by the registrar, which is done in BRSKI based on the established TLS channel.
If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar LDevID certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="exchanges_uc2_3b"><name>Pledge: Voucher Status Telemetry</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the Registrar-Agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "pvs-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate because
  it starts in the future (1/1/2023).",
  "reason-context": {
    "pvs-details": "Current date: 1/1/1970"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>If the pledge did not did not provide voucher status telemetry information after processing the voucher, the Registrar-Agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="exchanges_uc2_5"/> and <bcp14>MAY</bcp14> resent the voucher depending on the Pledge status following the procedure described in <xref target="exchanges_uc2_3a"/>.</t>

</section>
<section anchor="exchanges_uc2_3c"><name>Pledge: Wrapped-CA-Certificate(s) Processing</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/scac".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHOULD</bcp14> only be done, if the voucher-response has been successfully processed by pledge as reflected in the voucher status telemetry.</t>

<t>The CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded "x5bag".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

<t>The verification comprises the following steps the pledge <bcp14>MUST</bcp14> perform. Maintaining the order of versification steps as indicated allows to determine, which verification has already been passed:</t>

<t><list style="numbers">
  <t>Check content-type of the CA certificates message. If no Content-Type is contained in the HTTP header, the default Content-Type utilized in this document (JSON-in-JWS) is used. If the Content-Type of the response is in an unknown or unsupported format, the pledge <bcp14>SHOULD</bcp14> reply with a 415 Unsupported media type error code.</t>
  <t>Check the encoding of the payload. If the pledge detects errors in the encoding of the payload, it <bcp14>SHOULD</bcp14> reply with 400 Bad Request error code.</t>
  <t>Verify that the wrapped CA certificate object is signed using the registrar certificate against the pinned-domain certificate. This <bcp14>MAY</bcp14> be done by comparing the hash that is indicating the certificate used to sign the message is that of the pinned-domain certificate. If the validation against the pinned domain-certificate fails, the client <bcp14>SHOULD</bcp14> reply with a 401 Unauthorized error code. It signals that the authentication has failed and therefore the object was not accepted.</t>
  <t>Verify signature of the the received wrapped CA certificate object. If the validation of the signature fails, the pledge <bcp14>SHOULD</bcp14> reply with a 406 Not Acceptable. It signals that the object has not been accepted.</t>
  <t>If the received CA certificates are not self-signed, i.e., an intermediate CA certificate, verify them against an already installed trust anchor, as described in section 4.1.3 of <xref target="RFC7030"></xref>.</t>
</list></t>

</section>
<section anchor="pledge-enrollment-response-processing"><name>Pledge: Enrollment-Response Processing</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/ser".</t>

<t>The Registrar-Agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the Registrar-Agent and the infrastructure is: <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the Registrar-Agent.
If the verification of the LDevID certificate succeeds, the status property <bcp14>SHALL</bcp14> be set to "status": true, otherwise to "status": false</t>

</section>
<section anchor="pledge-enrollment-status-telemetry"><name>Pledge: Enrollment-Status Telemetry</name>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll-status is signed and results in a JSON-in-JWS object.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using its new LDevID credentials as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IDevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-enroll-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "pes-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Enrollment response could not be verified.",
  "reason-context": {
    "pes-details": "no matching trust anchor"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the Registrar-Agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Voucher Status and Enroll Status Handling (Registrar-Agent to Domain Registrar)</name>

<t>The following description requires that the Registrar-Agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-Agent: obtained voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar-|        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| (RegAgt)  |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The Registrar-Agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHOULD</bcp14> log the transaction provided for a pledge via Registrar-Agent and include the identity of the Registrar-Agent in these logs. For log analysis the following may be considered:</t>

<t><list style="symbols">
  <t>The registrar knows the interacting Registrar-Agent from the authentication of the Registrar-Agent towards the registrar using LDevID (RegAgt) and can log it accordingly.</t>
  <t>The telemetry information from the pledge can be correlated to the voucher response provided from the registrar to the Registrar-Agent and further to the pledge.</t>
  <t>The telemetry information, when provided to the registrar is provided via the Registrar-Agent and can thus be correlated.</t>
</list></t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device of the domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> Section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The Registrar-Agent may use the response to signal success / failure to the service technician operating the Registrar-Agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in Section 5.8 of <xref target="RFC8995"/>.</t>

<t>The Registrar-Agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The Registrar-Agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device of the domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the signature verification of the status information is an addition to the described handling in Section 5.9.4 of <xref target="RFC8995"/>, and is replacing the pledges TLS client authentication by DevID credentials in <xref target="RFC8995"></xref>.</t>

<t>According to <xref target="RFC8995"/> Section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
An example case for the registrar revoking the issued LDevID for the pledge is when the pledge was not able to verify the received LDevID certificate and therefore did send a 406 (Not Acceptable) response.
In this case the registrar may revoke the LDevID certificate as the pledge did no accepted it for installation.</t>

<t>The Registrar-Agent may use the response to signal success / failure to the service technician operating the Registrar-Agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge-Status by Registrar-Agent from Pledge</name>

<t>The following assumes that a Registrar-Agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-Agent: possesses LDevID (RegAgt), may have a list of product-serial-number(s) of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures performed with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between Registrar-Agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="exchanges_uc2_5a"><name>Pledge-Status - Request (Registrar-Agent to Pledge)</name>

<t>The Registrar-Agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/qps"</t>

<t>The Registrar-Agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by Registrar-Agent using the private key corresponding to the EE (RegAgt) certificate.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a Registrar-Agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).
As the pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of Registrar-Agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The Registrar-Agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "status-request" representation
  in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="exchanges_uc2_5b"><name>Pledge-Status - Response (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is:</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment-response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize its bootstrapped credentials (LDevID) in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "status-response" representation
  in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t><list style="symbols">
  <t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the Registrar-Agent in the bootstrapping-status request.</t>
  <t>In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the Registrar-Agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.</t>
  <t>The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.</t>
  <t>The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.</t>
  <t>The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>
</list></t>

<t>The pledge <bcp14>SHOULD</bcp14> by default only respond to requests from nodes it can authenticate (such as registrar
agent), once the pledge is enrolled with CA certificates and a matching domain certificate.</t>

</section>
</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher-Request Artifact</name>

<t><xref target="I-D.ietf-anima-rfc8366bis"/> extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.
These additional fields are defined in <xref target="exchanges_uc2_1"/> as:</t>

<t><list style="symbols">
  <t>agent-signed-data to provide a JSON encoded artifact from the involved Registrar-Agent, which allows the registrar to verify the Registrar-Agent's involvement</t>
  <t>agent-provided-proximity-registrar-cert to provide the registrar certificate visible to the Registrar-Agent, comparable to the registrar-proximity-certificate used in <xref target="RFC8995"/></t>
  <t>agent-signing certificate to optionally provide the Registrar-Agent signing certificate.</t>
</list></t>

<t>Examples for the application of these fields in the context of a PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="iana-con"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                Description                       Reference
 tpvr               create pledge-voucher-request     [THISRFC]
 tper               create pledge-enrollment-request  [THISRFC]
 svr                supply voucher-response           [THISRFC]
 ser                supply enrollment-response        [THISRFC]
 scac               supply CA certificates to pledge  [THISRFC]
 qps                query pledge status               [THISRFC]
 requestenroll      supply PER to registrar           [THISRFC]
 wrappedcacerts     request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
<section anchor="dns-service-names"><name>DNS Service Names</name>

<t>IANA has registered the following service names:</t>

<t><strong>Service Name:</strong> brski-pledge<br />
<strong>Transport Protocol(s):</strong> tcp<br />
<strong>Assignee:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Contact:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Description:</strong> The Bootstrapping Remote Secure Key Infrastructure Pledge<br />
<strong>Reference:</strong> [THISRFC]</t>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>potentially no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<t><xref target="exchanges_uc2_1"/> describes to optional apply TLS to protect the communication between the Registrar-Agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>

<t>The credential used by the Registrar-Agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the Registrar-Agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the Registrar-Agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<section anchor="sec_cons-dos"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.
Because in BRSKI-PRM, the pledge responds to requests from real or illicit Registrar-Agents, pledges are more subject to DoS attacks from Registrar-Agents in BRSKI-PRM than they are from illicit registrars in <xref target="RFC8995"/>, where pledges do initiate the connections.</t>

<t>A DoS attack with a faked Registrar-Agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>

<t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the Registrar-Agent.
In that case the pledge <bcp14>MAY</bcp14> simply resent the PVR previously sent.
Note that in case of resending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A Registrar-Agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar LDevID certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the Registrar-Agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the EE (RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (Section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a Registrar-Agent with a valid EE (RegAgt) certificate may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the Registrar-Agent against the domain registrar.
The EE (RegAgt) certificate may have been acquired by a prior BRSKI run for the Registrar-Agent, if an IDevID is available on Registrar-Agent.
Alternatively, the EE (RegAgt) certificate may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the EE (RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a Registrar-Agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the EE (RegAgt) certificate, due to missing trusted timestamp in the Registrar-Agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the EE (RegAgt) certificate used in the TLS handshake with the Registrar-Agent. If both certificates are verified successfully, the Registrar-Agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of DNS-SD with mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a Registrar-Agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the Registrar-Agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref target="RFC8995"/> Section 11.7 (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref target="RFC8407"/> Section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Charlie Kaufman (Early SECDIR review), Martin BjÃ¶rklund (Early YANGDOCTORS review), Marco Tiloca (Early IOTDIR review), Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC6762">
  <front>
    <title>Multicast DNS</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6762"/>
  <seriesInfo name="DOI" value="10.17487/RFC6762"/>
</reference>

<reference anchor="RFC6763">
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6763"/>
  <seriesInfo name="DOI" value="10.17487/RFC6763"/>
</reference>

<reference anchor="RFC7030">
  <front>
    <title>Enrollment over Secure Transport</title>
    <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
    <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
    <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
    <date month="October" year="2013"/>
    <abstract>
      <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7030"/>
  <seriesInfo name="DOI" value="10.17487/RFC7030"/>
</reference>

<reference anchor="RFC7515">
  <front>
    <title>JSON Web Signature (JWS)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7515"/>
  <seriesInfo name="DOI" value="10.17487/RFC7515"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC8366">
  <front>
    <title>A Voucher Artifact for Bootstrapping Protocols</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <date month="May" year="2018"/>
    <abstract>
      <t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer. This artifact is known as a "voucher".</t>
      <t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure. Other YANG-derived formats are possible. The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t>
      <t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8366"/>
  <seriesInfo name="DOI" value="10.17487/RFC8366"/>
</reference>

<reference anchor="RFC8610">
  <front>
    <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
    <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
    <author fullname="C. Vigano" initials="C." surname="Vigano"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2019"/>
    <abstract>
      <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8610"/>
  <seriesInfo name="DOI" value="10.17487/RFC8610"/>
</reference>

<reference anchor="RFC8615">
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
    <date month="May" year="2019"/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8615"/>
  <seriesInfo name="DOI" value="10.17487/RFC8615"/>
</reference>

<reference anchor="RFC8995">
  <front>
    <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <author fullname="M. Behringer" initials="M." surname="Behringer"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8995"/>
  <seriesInfo name="DOI" value="10.17487/RFC8995"/>
</reference>

<reference anchor="RFC9360">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="February" year="2023"/>
    <abstract>
      <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9360"/>
  <seriesInfo name="DOI" value="10.17487/RFC9360"/>
</reference>


<reference anchor="I-D.ietf-anima-jws-voucher">
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname="Thomas Werner" initials="T." surname="Werner">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="29" month="August" year="2023"/>
      <abstract>
	 <t>   [TODO: I-D.draft-ietf-anima-rfc8366bis] defines a digital artifact
   called voucher as a YANG-defined JSON document that is signed using a
   Cryptographic Message Syntax (CMS) structure.  This document
   introduces a variant of the voucher artifact in which CMS is replaced
   by the JSON Object Signing and Encryption (JOSE) mechanism described
   in RFC7515 to support deployments in which JOSE is preferred over
   CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-09"/>
   
</reference>


<reference anchor="I-D.ietf-netconf-sztp-csr">
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Russ Housley" initials="R." surname="Housley">
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname="Sean Turner" initials="S." surname="Turner">
         <organization>sn3rd</organization>
      </author>
      <date day="2" month="March" year="2022"/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-sztp-csr-14"/>
   
</reference>


<reference anchor="I-D.ietf-anima-rfc8366bis">
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software</organization>
      </author>
      <author fullname="Max Pritikin" initials="M." surname="Pritikin">
         <organization>Cisco Systems</organization>
      </author>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname="Qiufang Ma" initials="Q." surname="Ma">
         <organization>Huawei</organization>
      </author>
      <date day="22" month="August" year="2023"/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#x27;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#x27;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-10"/>
   
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC2986">
  <front>
    <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
    <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
    <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
    <date month="November" year="2000"/>
    <abstract>
      <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2986"/>
  <seriesInfo name="DOI" value="10.17487/RFC2986"/>
</reference>

<reference anchor="RFC5272">
  <front>
    <title>Certificate Management over CMS (CMC)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <author fullname="M. Myers" initials="M." surname="Myers"/>
    <date month="June" year="2008"/>
    <abstract>
      <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
      <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
      <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
      <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5272"/>
  <seriesInfo name="DOI" value="10.17487/RFC5272"/>
</reference>

<reference anchor="RFC6125">
  <front>
    <title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
    <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
    <author fullname="J. Hodges" initials="J." surname="Hodges"/>
    <date month="March" year="2011"/>
    <abstract>
      <t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6125"/>
  <seriesInfo name="DOI" value="10.17487/RFC6125"/>
</reference>

<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>

<reference anchor="RFC7252">
  <front>
    <title>The Constrained Application Protocol (CoAP)</title>
    <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
    <author fullname="K. Hartke" initials="K." surname="Hartke"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
      <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7252"/>
  <seriesInfo name="DOI" value="10.17487/RFC7252"/>
</reference>

<reference anchor="RFC8152">
  <front>
    <title>CBOR Object Signing and Encryption (COSE)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="July" year="2017"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8152"/>
  <seriesInfo name="DOI" value="10.17487/RFC8152"/>
</reference>

<reference anchor="RFC8407">
  <front>
    <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <date month="October" year="2018"/>
    <abstract>
      <t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules. Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules. This document obsoletes RFC 6087.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="216"/>
  <seriesInfo name="RFC" value="8407"/>
  <seriesInfo name="DOI" value="10.17487/RFC8407"/>
</reference>

<reference anchor="RFC8792">
  <front>
    <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
    <author fullname="A. Farrel" initials="A." surname="Farrel"/>
    <author fullname="Q. Wu" initials="Q." surname="Wu"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8792"/>
  <seriesInfo name="DOI" value="10.17487/RFC8792"/>
</reference>

<reference anchor="RFC8990">
  <front>
    <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
    <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8990"/>
  <seriesInfo name="DOI" value="10.17487/RFC8990"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9053">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052).</t>
      <t>This document, along with RFC 9052, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9053"/>
  <seriesInfo name="DOI" value="10.17487/RFC9053"/>
</reference>

<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="RFC9238">
  <front>
    <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="J. Latour" initials="J." surname="Latour"/>
    <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
    <date month="May" year="2022"/>
    <abstract>
      <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
      <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9238"/>
  <seriesInfo name="DOI" value="10.17487/RFC9238"/>
</reference>


<reference anchor="I-D.ietf-anima-brski-ae">
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Steffen Fries" initials="S." surname="Fries">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Hendrik Brockhaus" initials="H." surname="Brockhaus">
         <organization>Siemens AG</organization>
      </author>
      <date day="11" month="December" year="2023"/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995) that supports alternative
   certificate enrollment protocols, such as CMP.  This offers the
   following advantages.

   Using authenticated self-contained signed objects for certification
   requests and responses, their origin can be authenticated
   independently of message transfer.  This supports end-to-end
   authentication (proof of origin) also over multiple hops, as well as
   asynchronous operation of certificate enrollment.  This in turn
   provides architectural flexibility where to ultimately authenticate
   and authorize certification requests while retaining full-strength
   integrity and authenticity of certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-ae-08"/>
   
</reference>


<reference anchor="I-D.richardson-emu-eap-onboarding">
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname="Alan DeKok" initials="A." surname="DeKok">
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="2" month="April" year="2023"/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-emu-eap-onboarding-03"/>
   
</reference>


<reference anchor="I-D.eckert-anima-brski-discovery">
   <front>
      <title>Discovery for BRSKI variations</title>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei USA</organization>
      </author>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Esko Dijk" initials="E." surname="Dijk">
         <organization>IoTconsultancy.nl</organization>
      </author>
      <date day="23" month="October" year="2023"/>
      <abstract>
	 <t>   This document specifies how BRSKI entities, such as registrars,
   proxies, pledges or others that are acting as responders, can be
   discovered and selected by BRSKI entities acting as initiators.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-eckert-anima-brski-discovery-01"/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="March"/>
  </front>
  <format type="PDF" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
  <front>
    <title>Android Developer: Connect devices wirelessly</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
</reference>
<reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
  <front>
    <title>Security with Network Protocols</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
</reference>



<reference anchor="I-D.richardson-anima-registrar-considerations">
   <front>
      <title>Operational Considerations for BRSKI Registrar</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <author fullname="Wei Pan" initials="W." surname="Pan">
         <organization>Huawei Technologies</organization>
      </author>
      <date day="11" month="May" year="2023"/>
      <abstract>
	 <t>   This document describes a number of operational modes that a BRSKI
   Registration Authority (Registrar) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the Registrar is
   deployed into.  This document does not change any protocol
   mechanisms.

   This document includes operational advice about avoiding unwanted
   consequences.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-anima-registrar-considerations-07"/>
   
</reference>

<reference anchor="RFC8971">
  <front>
    <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
    <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
    <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
    <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
    <author fullname="V. Govindan" initials="V." surname="Govindan"/>
    <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
    <date month="December" year="2020"/>
    <abstract>
      <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8971"/>
  <seriesInfo name="DOI" value="10.17487/RFC8971"/>
</reference>


<reference anchor="I-D.irtf-t2trg-taxonomy-manufacturer-anchors">
   <front>
      <title>A Taxonomy of operational security considerations for manufacturer installed keys and Trust Anchors</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="6" month="August" year="2023"/>
      <abstract>
	 <t>   This document provides a taxonomy of methods used by manufacturers of
   silicon and devices to secure private keys and public trust anchors.
   This deals with two related activities: how trust anchors and private
   keys are installed into devices during manufacturing, and how the
   related manufacturer held private keys are secured against
   disclosure.

   This document does not evaluate the different mechanisms, but rather
   just serves to name them in a consistent manner in order to aid in
   communication.

   RFCEDITOR: please remove this paragraph.  This work is occurring in
   https://github.com/mcr/idevid-security-considerations

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-taxonomy-manufacturer-anchors-02"/>
   
</reference>




    </references>


<?line 2246?>

<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge-Voucher-Request - PVR (from Pledge to Registrar-Agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-Agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge-Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar-Voucher-Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a pledge-voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example registrar-voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar-Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response (from MASA to Pledge, via Registrar and Registrar-Agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-Agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="pledgehttps"><name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>

<t>The use of HTTP-over-TLS between Registrar-Agent and pledge has been identified as an optional mechanism.</t>

<t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the Registrar-Agent.
The authenticity of the onboarding and enrollment is not dependant upon the security of the TLS connection.</t>

<t>The use of HTTP-over-TLS is not mandated by this document for a number of reasons:</t>

<t><list style="numbers">
  <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods and raw public key, they do no help as there is no previous relationship between the Registrar-Agent.</t>
  <t>The pledge can use it's IDevID certificate to authenticate itself, but <xref target="RFC6125"/> DNS-ID methods do not apply as the pledge does not have a FQDN.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute which must be present in every IDevID.</t>
</list></t>

<t>If the Registrar-Agent has a preconfigured list of which product-serial-number(s), from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>

<t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that product-serial-number.
The use of scannable QRcodes may help automate this in some cases.</t>

<t><list style="numbers">
  <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref section="4.1" sectionFormat="comma" target="I-D.irtf-t2trg-taxonomy-manufacturer-anchors"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A Registrar-Agent application will need to use different APIs in order to initiate an HTTPS connection without performing WebPKI verification.
The application will then have to do it's own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involved use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures. See <xref target="androidtrustfail"/></t>
  <t>The use of the Host: (or :authority in HTTP/2) is explained in <xref section="7.2" sectionFormat="comma" target="RFC9110"/>. This header is mandatory, and so a compliant HTTPS client is going to insert it.
But, the contents of this header will at best be an IP address that came from the discovery process.
The pledge <bcp14>MUST</bcp14> therefore ignore the Host: header when it processes requests, and the pledge <bcp14>MUST NOT</bcp14> do any kind of name-base virtual hosting using the IP address/port combination.
Note that there is no requirement for the pledge to operate it's BRSKI-PRM service on port 80 or port 443, so if there is no reason for name-based virtual hosting.</t>
  <t>Note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge's IDevID certificate.
IDevID certificates are intended to be widely useable and EKU does not support that use.</t>
</list></t>

</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 11 -&gt; IETF draft 12:</t>

<t><list style="symbols">
  <t>Updated acknowledgements to reflect early reviews</t>
</list></t>

<t>From IETF draft 10 -&gt; IETF draft 11:</t>

<t><list style="symbols">
  <t>issue #79, clarified that BRSKI discovery in the context of BRSKI-PRM is not needed in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #103, removed step 6 in verification handling for the wrapped CA certificate provisioning as only applicable after enrollment <xref target="exchanges_uc2_3c"/></t>
  <t>issue #128: included notation of nomadic operation of the Registrar-Agent in <xref target="architecture"/>, including proposed text from PR #131</t>
  <t>issue #130, introduced DNS service discovery name for brski_pledge to enable discovery by the Registrar-Agent in <xref target="iana-con"/></t>
  <t>removed unused reference RFC 5280</t>
  <t>removed site terminology</t>
  <t>deleted duplicated text in <xref target="pledge_ep"/></t>
  <t>clarified registrar discovery and relation to BRSKI-Discovery in <xref target="discovery_uc2_reg"/></t>
  <t>clarified discovery of pledges by the Registrar-Agent in <xref target="discovery_uc2_ppa"/>, deleted reference to GRASP as handled in BRSKI-Discovery</t>
  <t>addressed comments from SECDIR early review</t>
</list></t>

<t>From IETF draft 09 -&gt; IETF draft 10:</t>

<t><list style="symbols">
  <t>issue #79, clarified discovery in the context of BRSKI-PRM and included information about future discovery enhancements in a separate draft in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #93, included information about conflict resolution in mDNS and GRASP in <xref target="discovery_uc2_ppa"/></t>
  <t>issue #103, included verification handling for the wrapped CA certificate provisioning in <xref target="exchanges_uc2_3c"/></t>
  <t>issue #106, included additional text to elaborate more the registrar status handling in <xref target="exchanges_uc2_4"/></t>
  <t>issue #116, enhanced DoS description in <xref target="sec_cons-dos"/></t>
  <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_ep"/></t>
  <t>issue #122, availability of product-serial-number information on registrar agent clarified in <xref target="exchanges_uc2_1"/></t>
  <t>issue #123, Clarified usage of alternative voucher formats in  <xref target="rvr-proc"/></t>
  <t>issue #124, determination of pinned domain certificate done as in RFC 8995 included in <xref target="exchanges_uc2_2_vc"/></t>
  <t>issue #125, remove strength comparison of voucher assertions in <xref target="agt_prx"/> and <xref target="exchanges_uc2"/></t>
  <t>issue #130, aligned the usage of site and domain throughout the document</t>
  <t>changed naming of registrar certificate from LDevID(RegAgt) to EE (RegAgt) certificate throughout the document</t>
  <t>change x5b to x5bag according to <xref target="RFC9360"/></t>
  <t>updated JSON examples -&gt; "signature": BASE64URL(JWS Signature)</t>
</list></t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the product-serial-number and the inclusion of GRASP</t>
  <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
  <t>issue #82, included optional TLS protection of the communication link between Registrar-Agent and pledge in the introduction <xref target="req-sol"/>, and <xref target="exchanges_uc2_1"/></t>
  <t>issue #83, enhanced <xref target="PER-response"/> and <xref target="exchanges_uc2_2_per"/> with note to re-enrollment</t>
  <t>issue #87, clarified available information at the Registrar-Agent in <xref target="exchanges_uc2_1"/></t>
  <t>issue #88, clarified, that the PVR in <xref target="pvrr"/> and PER in <xref target="PER-response"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
  <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="exchanges_uc2_2_per"/></t>
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="exchanges_uc2_2_wca"/></t>
  <t>issue #94: clarified terminology (possess vs. obtained)</t>
  <t>issue #95: clarified optional IDevID CA certificates on Registrar-Agent <xref target="exchanges_uc2_3"/></t>
  <t>issue #96: updated <xref target="exchangesfig_uc2_3"/> to correct to just one CA certificate provisioning</t>
  <t>issue #97: deleted format explanation in <xref target="exchanges_uc2_3"/> as it may be misleading</t>
  <t>issue #99: motivated verification of second signature on voucher in <xref target="exchanges_uc2_3"/></t>
  <t>issue #100: included negative example in <xref target="vstat"/></t>
  <t>issue #101: included handling if <xref target="exchanges_uc2_3b"/> voucher telemetry information has not been received by the Registrar-Agent</t>
  <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="exchanges_uc2_3c"/></t>
  <t>issue #105: included negative example in <xref target="estat"/></t>
  <t>issue #107: included example for certificate revocation in <xref target="exchanges_uc2_4"/></t>
  <t>issue #108: renamed heading to Pledge-Status Request of <xref target="exchanges_uc2_5a"/></t>
  <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="exchanges_uc2_5b"/></t>
  <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_res"/></t>
  <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="exchanges_uc2_5b"/></t>
  <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
  <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
  <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the Registrar-Agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that Registrar-Agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge-voucher-request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the Registrar-Agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but Registrar-Agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for Registrar-Agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for Registrar-Agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the Registrar-Agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an pledge-enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; Registrar-Agent to
better underline Registrar-Agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and Registrar-Agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between Registrar-Agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
Registrar-Agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to Registrar-Agent signing certificate using SKID
in Registrar-Agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and Registrar-Agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between Registrar-Agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization></organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
iqL/rnkBvg/kGUme20SP/GLlq7AtpyFT0JrerEikQgLqEDso+EPDH3HNAuE4
bejXjQvzmhx5c9LUBTFwjijqUcMPTLvUioPG6kAyiIsN5uLl/UnRMkBZyk9c
OvDQjl/YDZHxZuk0bQvzT53VLati4KMBA3PCugk9ISISRuxtCZPlMfy//+v/
ahzyY61MkFhD1Ps2AicVTMMi1/SPDPDBCsSNtYk7rumtLY80z45RpmkpvQW8
ZaP2tpMnluFe48YJPLVjdUoiTagA3t8u/iF78FSHW8yoMBDi9BJGhxVjyVnD
YZwKIECRyE6o50Q4jWg1ORU2zEMHZoA/KgVSHGMgA/YYRY2OKDjlpbCsgChx
FMuPws7eUTI3Mj2Xai7pxy4MJ7a5xY7hx2pIo/vmBMhkuQT2QisKYwrD2SHd
FhN38d0bPcgmHjmQ/a9EZiTHkBYHI7RuOEnf5p6b1HWXsL715o1+P/Tfv3u3
/avwQHV7e4i7ZV2jrg4Lf7ld2ib9mOcji7d8Pwz+Z59PmvktXAz+FTyvDo7f
uHX43b51VYTPm/G82CM69hieCMYTPO9+gtMNa5eeb+/PvyTXE/7lCm/QHXBN
/ktiWel5dzXCn39xdz96vufnX+IJrXy+Zzz2p3e+/BO50OyL/tfU8TIutO6L
8WHin44LrftifKpkUrEnLPVicLz44P2u4wlLvBidMzvUT5cNddmP8UsteXG5
X2rJi/+/90s9Dv1SHYTfFMsV1trrjkIWq2ZX5fbqfiGmpFJosvW04YHCVlRf
NjKNJvM2RbuYD7ztrOZg5LqcN32xNwkLkNIpR4Z6w2tsTgmw0t1RptW+eBZo
bOgYyhjERqBT8uY1uzfUpxJIyyjQW1yNRAihT9wbcIJZXcB8i1uOtJ6WnMer
KjJFhOKyjTb2EoPtWYB9bbRIWAN9Hq52oiHLA4db4sybYh6jgd6mMia6NtHG
WP6Mw9SXIwo09VAS30W5+PEauwLSPNbQbY2pVGbzsccA8FMf+AVx+VfO9Nf0
ZRXZtXv/OZF28WT9zXPGOjdmb6YMvVbucLid5NBD3kMJX3r/gVOE7NOHbIbD
xOOuo+X82QN6Qnrad3ldil9CyROREed/W2Uzobg3i4DxfflVmQjGDPcngLXh
HHiBFlLYkHG0TFFzXX3hy4p0dV/5wFrZLOwAplbNrqZGB5GgV7KZcFK+B263
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
/EGLi7ci61xglZurM4F1IvD7/Ilv5F0+F/GzpOHPXoY8Zx2D9Ww1zy7Or75u
zTylIM93UsoVv5JSpx7pGRtKtdeN8To/PBX8fbWKTs8bVsl4fvslXK3SOPpE
BWUvN9HKprVzG6cXml9u2v2Oaf5Rt54Emyt+6OZUi+TlPaXTM+TVqVD+4fOb
XC8/ff37b9UYf/vjVCFnudrV1ze+r9ZUSjA+Fc5rXc95Pw3bSPjVPEyaxzk9
ezmQVg+/mJi9rCzUnKjkadn6bMKGJt9ccq8ffIFMfuNnlJpjGS+G+bOMr1ln
fMWO1P38/92UrycpuZ875dh+6hgDhz737Wo7k7oL3wKS5LoIOvs4k+4MW+4m
hmzcPIjOmsn71aQT3j1SknjZOwTu3aGVBJJmHRDGRaAy/FbLwinLws6ExpbF
TtGBE9qEEkKFywSGGioZm9mKwQR/p2eF6st3mJE+7fmOmFhBrrnuwqRU0dR3
RYuSLL5azJksH9w03BmO6AYdUM5O8sNjbI0WKNmUmJTwumWqeIMWENREfpCm
O4853VAxykBVjJmy2rspM2J1crCX5iNTtBXCahW0VAmGWsKmiexI3W9X+Fak
hMNoyvLJ0Zej+4j5Wyfj6SrREaNdxJNNmYVZJF7mu7oyQbjUNfQBXGEWgcLL
aCUcKDSGvefud0wxHDdFC3bvhlJGTGRDa5o9MpsxEH93BrYC2jlGUH/DsuSe
iZoXDIHzjMndH7bo99GCZ/MWHJFJ8JuCCEkmDCFDgZDfCpXJYSYXGbMVBXLE
GOCnF8wxM40SXswPwFccO+slwVGW2EDbTdKuEg8VCzTm0UtDyIn4FSSZ33VZ
Dt4nKrfmghJeX0XbhXRVSrrFqgJf7R1de4S16A7NLDFcWVs7CA91JT3oLJrP
HN9natHHSjCXxkBpvzQaRwz6Mp0pPci6h7krbihqqpVGLBDhJx0WhIovW3lp
zpjS8VI2djLv4KQlKLI2ZKKfuszcYl6UZGKrA0t915TMDfiCgxZ+QPYWY75K
aTv87eCABzqUdE+TwJS7zw6lTjJtHSnanFESe8JyUbBEeFQFYxCKle34WCtf
BbG2aQxYq3tX8V0rS1xGQZfs30OiWztj0IZiytIQPNJzFdeXfUpXBR5WM2YF
Y9ARjGHK3HLsOSI4cMJYxxz67t5iGVu7adc1qQXFVD0X/FqdDdBC2l3Zbhm4
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
W8rXI+xGj6esHwwSSYekx6wQg0xzJqkJJ52dyDPDyLTwoROZ8ApAIv6WDAUU
ykvyjrFhFSh0RGh5frkGYTVs0mSC1nemxU28jHbOsqfHwI/3XPYbtJRIIl1G
rK8i+qo2ciRR8ty7H8GgV/huGSDAGbNjYurq3p6pI/FeMDFbyEboPnjiqBO5
ewTEkRppvmTu4oU/d1LvYMp+GarZ/QwEX0+jLsvlG49FaSTtR6EA9GKR7wmp
4MjRvZeHdBWxehlm4795FfHiIuLt57Kz/HI8INC7GenSPWKVP51nWUyOxee7
m4li2D/Uj8Ojve5NSvnmz5uPBwsx2EGJOunjrddfdrqep30+3He6UWdTHlZ/
Hlbzx+/3X9+9iHi6g/YrdxH/4gLhL11HPH+zrnpY3Tqkq290Da667viBP714
WR3rH3sQ7VV9xjd6+etOfu0y3vW7d+bqyVb35u7E2//7r829dWPuZzfkmvtx
367+mUfRmifRvl39M4+iNU+ifbs6P4q2eNoax5HEc1bLXjHLq0eVZpKYBO7N
i2fPtB3d1Z4wVsI9U6x5evgs3PnOXrT6Zfvhs1959uzb1V89fPYrz55dOK/k
kcmyaMNRUJxp24YRp0XlvJw7Z2LTNQhGeSZDF8Rb/uyZwujZM0D9Xzx89vNn
zy6jZ7r3ne+r57pS0/wH79Qj7rWlUgpEcxTZiTlTJkc4kHud3qCywzXrGCNb
Gu0YQ+uCokdyiFiGPYBW/QhcdqMPvGeHnpzwDda7D1xN8oXEmcxL9UFUnCCP
spmcDGOQVKvT61DuzesYduwqP5zM7Juy2LeqaDvle3HKZE530zMDThyy8W4m
ApzANJL9mgA6Mhz72+6mcTYUyaugso5467jm0ezf/Xg4lEu3/wX9a/ewpdGD
mJQgFm/kPqOxldITZBhLL6CofAi3cig1W476jpwJjvQkeIts6qqJZy/ZKmTG
xEif1t78Tp8c7nKWZXKQydKMPxxjUq58yayJgLh+KR9jN+kbduK44BveshiN
++XjTE2mbOo/zhRN1kVfCR0z9USlQw/H/OfjvLy8JRbJ1OwizgOz6QepsXbf
j/P+kcctZM4J/9nHLegZB3rcgl4HpNcCH7nZZKamy6I6E8lQeXpHIbOCMozx
887mR6jNW9PZAwrKU4qYODIIfQozycwmpcfNzJTZxRgce9SNEeeY0x5M0GiS
rYCbSIqaxyrqb5hzXSgAQ34Q5eYUQT1irGxJ6dpZrvHnMmJH08H16eqKM2GY
UR8M7pQktKqX+k4/08t9YLyDiaPYk6M/B6j1Zi7b68zvGHlmhpl2HNMVpp2b
hWtDHQHmoq6vitPwqA0hUZV1onkA96DnXc2Vn452RxlZoi+Oh/rBWfoFVHgc
QK0sep+sb8mJMMnNwkxZ4C79uSHd3RBX/ovXAtuJkG9Xb74BY9nmxHW1m2ho
HMEuD2jpBnxQiDP27IDpOR2j68u7I6JKSKELE49UYzx2EdcpyaSKm3zNWxjP
94L/qAuaAxekm0sjsbLCwsqmRqd4jKbGFq2GDyJ4rIQ1UixJO8LkCwYzmVpw
Re5+SU7NZODFtjf/PnmLlgl2r5utP4YbcfEjDaRnYzbJO7Oe535/0KIvx4jd
j1as24lXkvdkjezl/b337cp+HurOTtjt73bRYWuwhbH6+vRw2BijJ/k5C7Oy
9/77ECc2VrGXt+nYKyp14jj/KSb2oaJH881mG0cn6lIVcDmX4DvzpXM1hP/3
U7j3nz1oU7iOIPz/gcI5jja3pvresLUjUPmZHSMrZoruysazf/wrCpeW/AUz
UDj9Vj+GoHDeVj8+Hf5F4f5F4f5F4f5F4f5F4f5F4f5LKVw0zHbk1M4uUvwR
dfR1sDTINb2Vevt29RbLs5If7petYqbbr9PRcfE16d3MVpmuL6PQ+6x6Pzr3
s9XdzeFZLRf9YC9PO0OI5haTcGxZ+zPdZhNR/TxYBs7N/GnwGDlqGbK7h3T3
2398+KU9NvMHz+C7l4brKmlHz7W5m75ruJVv+VXPQgr6vm95x7MoWeXdTu+y
w1haL7Or0bF3WxkqHY2BAqaOAP94Tw+6GMNEiVPFajzuTBAHdGzFoY1vl446
Gy58rCDeAAp6ttza+E79caiaQzZNhlDYadOCjVZ1RZO8LFJhpt+uNla+b78n
Tgf6q2fullnDE8AjWJs3QKHZaGL3tAlMEuP5diVZ9Ghe9W77q1fb6cm58Kik
jsIKN02MSL1bO5K5t8RQ9PPuNBS09L6j0Kurg2jq5H7us2gdu1Hm5Xf3fppt
ABYHT0oPxjTaBirALjWGQQ7OsmDN8ZPqST56BdyYZEr1KN/5Sb4+91pYIxM/
014bvYZqC812dcL9pllpRd+gHHgHnrve29L6aLjjDEzNV42S5d2E9vs8SVRj
Z+9VLEcR+WvbqjZlS7aA7y58Wf92JdJbsY5gjGbp6XX86m18W97xd5flbmFM
oWmiLwC2xDjdT61FT5/ZbOO3jsS8fCwwo/y8Svn5WN2nkzwJQnpXdsHu7YE2
CbNoAOO2jTyRXRbuYwda94h1sLwpm4eyDoalaPD9WgA+5wjF3Bf2W19K5h5s
R1fNBZweYznAg7/c3sO/RSem46KBrhgbPX8SYjnzsPb/GSCBvryTxTduVlN2
84XdbvPNUL9Pk8iycs1TSja7DZ4Wg460nRajTN3f/mDy50EifJwBYxPTPCyW
++KLMGJ/KgfR/DqejkbHTWfypb/Un3pPT78aLrqI2RAGWRjSPxo5fviVgO/d
8PLfroe2/fiRyrJ9pNJ8dS0vqunys3LppwLo1SOASVkWdRmWpkTSZbN/XXr9
/PzfnFcy5UWvgk1VX6yeWB5TSe75Jv90dfXYlI85PamXxoePwdM6rqot1e/o
bZdRvM4OFNLROJoaTK0K4s3re1Tshj56WUezevuwnlPdAvVL9Wvmz0F4OFXT
qYPfViVaPo43BNqqZdvU3HlVQJQkeRoIVWSqC2i1ynC/6GheVXmL4oLqEuEX
26KufHuqW1a3QdM4z//TT5atbjNHV8GpIvOcCk2FW95pVcP1XH+wKk21+dvV
lfjp+uvLcqJPVUxfV5HmVUixTKt1FPMHFaMVDe3T9bXLCzyXVck8KmfHqyRR
2TBev7a1QFURujDbcok8WvcfThWn5K+PUJgyWUV1jb9gd11sZ9k8JE35UJWk
5xWzrpM4K0jXqh75pM8PNFY1wjCpZF5cLOGrNbuSqo2lem1Jr0iqcypE+UbR
5ZdFb+flJs6+VxXrqvplt6JENeSokiK+20ymrvLFS8bVo35VH56Xuw2ulcnA
4M95bsqYHpO8pipnJytql4P9UL/Y2R5R1fS0KwlV7sWolnlgUHHv9RzjjOtv
5VQnmttQVSEdqxrzQo/VtN+vFpnwioj4GvSxAr7oVGOzavrNupC/b/74UCFg
3X+rPiKveh/vi6Zg7CaOP1QPjM5LviatyuS8snel0o1B1hXognOpz1VZVVY+
F2SkorHo8lCX9eLVFml2zVdeDGdzTfXS0HFCi0BGOM8xps2K6ivmq7rw56ti
uRjqJqnruL1ahPr90d+TLTr7o0YZqm+frHiBSD7h1ky5fNf5CS0P3LA2ZVBV
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
0wIA

-->

</rfc>

