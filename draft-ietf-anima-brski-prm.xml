<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-05" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2022"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<t>This document defines enhancements to bootstrapping a remote secure key infrastructure (BRSKI, RFC8995) to facilitate bootstrapping in domains featuring no or only time limited connectivity between a pledge and the domain registrar.
It specifically targets situations, in which the interaction model changes from a pledge-initiated-mode, as used in BRSKI, to a pledge-responding-mode as described in this document.
To support both, BRSKI-PRM introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establishment the trust relation between pledge and domain registrar, BRSKI-PRM relies on the exchange of authenticated self-contained objects --- object security rather than transport security.</t>

<t>The approach defined here is agnostic with respect to the underlying enrollment protocol which connects the pledge, and domain registrar to the Domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of network elements in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate, is exchanged utilizing voucher request objects and voucher response objects as defined in <xref target="RFC8995"/>.
Voucher objects are specified in <xref target="RFC8366"/>. Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA). 
The MASA issues the voucher object and provides it via the domain registrar to the pledge.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies on a binding of the certification request to an underlying TLS connection between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as a client (this document refers to this approach as pledge-initiator-mode).
In industrial environments the pledge may behave as a server and thus does not initiate the bootstrapping with the domain registrar.
In this scenarios it is expected that the pledge will be triggered to generate bootstrapping requests in the customer site/domain.
This document refers to this approach as pledge-responder-mode and</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the registrar, as the pledge is in responder mode, and acts as server.
For the interaction with the domain registrar the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server and a registrar-agent and the domain registrar.
The security is addressed on application layer only to enable usage of arbitrary transport means between the pledge and the domain registrar via the registrar-agent.
Connectivity between the pledge and the registrar-agent may be via IP-based networks (wired or wireless) but also via Bluetooth or NFC.</t>
  <t>allows the application of registrar-agent credentials to establish TLS connections to the domain registrar. These registrar-agent credentials are different from the pledge's IDevID.</t>
</list></t>

<t>The term endpoint used in the context of this document is similar to resources in CoAP <xref target="RFC7252"/> and also in HTTP <xref target="RFC9110"/>.
It is not used to describe a device.
Endpoints are accessible via .well-known URIs.</t>

<t>TODO: double-check
To utilize the EST server endpoints on the domain-registrar, the registrar-agent will act as client towards the domain registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is not directly applicable, as the pledge only possesses an IDevID certificate.
The IDevID does not contain any anchor for which any kind of <xref target="RFC6125"/> validation can be done.
Second, the registrar-agent may not be aware of manufacturer trust anchors to validate the IDevIDs.
Finally, IDevID do not typically set Extended Key Usage (EKU) for TLS WWW Server authentication.</t>

<t>The inability to effectively do TLS in responder mode is one reason for relying on object security.</t>

<t>Another reason is the application on different transports channels, for which TLS may not be available, such as Bluetooth and NFC.</t>

<t>So, instead of using TLS to provide secure transport between the pledge and the registrar-agent, BRSKI-PRM relies on an additional signature wrapping the pledge enrollment request.
For EST <xref target="RFC7030"/> the registrar then needs to do some pre-processing to verify this signature, which is not present in EST.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the EE certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request
EE:</t>
  </dd>
  <dt/>
  <dd>
    <t>End entity</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>Mutual authenticated Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available within the customer site/domain.
It may be at a central site or an internet resident "cloud" service.
The connection may also be a temporary: available only at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge-enrollment-request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof of possession (of a private key)</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof of identity (see <xref target="req-sol"/>)</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge-Voucher-Request is a request for a voucher signed by the Pledge to the Registrar.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar-enrollment-request is the CSR of PER send to the CA by the registrar (RA/LRA)</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar-Voucher-Request is a request for a voucher signed by the Registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehendable to a human reader.
In order to keep them readable the examples use the token "base64encodedvalue==" whenever such a thing occurs.
This token is in fact valid base64.
The full examples are in appendix.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The later is indicated by a string like "BASE64URL(THING)"</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to environments where pledges may have different behavior: pledge-responder-mode, or pledges may have no direct connection to the domain registrar.
Either way pledges are expected to be managed by the same registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a construction site where a building is going up.</t>

<t>Another environment relates to the assembly of cabinets, which are prepared in advance to be installed on a customer site/domain.</t>

<t>As there is no direct connection to the registrar available in these environments the solution specified allows the pledges to act in a server role so they can be triggered for bootstrapping e.g., by a commissioning tool.</t>

<t>As BRSKI focuses on the pledge in a client role, initiating the bootstrapping (pledge-initiated-mode), BRSKI-PRM defines pledges acting as a server (pledge-responder-mode) responding to PVR and PER and consumption of the results.</t>

<t>The following examples motivate support of BRSKI-PRM to support pledges acting as server as well as pledges with limited connectivity to the registrar.</t>

<t>While BRSKI-PRM defines support for pledges in responder mode, there may be pledges, which can act as both initiator or responder.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

<t>A pledge which can initiate, <bcp14>SHOULD</bcp14> listen for BRSKI messages as describe in <xref section="4.1" sectionFormat="comma" target="RFC8995"/>.  Upon discovery of a potential Registrar, it <bcp14>SHOULD</bcp14> initiate to that Registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the pledge-responder-mode connections described in this document.</t>

<t>Once a pledge with such combined functionality has been bootstrapped, it may act as client for enrollment or re-enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined endpoints can be used to trigger a Pledge-Enrollment-Request (PER) for further certificates.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building (or a cabinet) or the basement of a building is equipped with sensors, actuators and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, in the basement, a service technician collects the device specific information from the basement network and provides them to the central building management system.  This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may visit every new house in a subdivision collecting device specific information before connecting to the Registrar.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement.
This operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates .
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presume the availability of the pledge to communicate with the registrar-agent.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/> and the application examples described in <xref target="sup-env"/> the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server).</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment. These requests are than provided by the  registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The communication between the registrar-agent and the pledge <bcp14>MUST NOT</bcp14> rely on transport layer security (TLS) because the pledge does not have certificate a that can easily be verified by <xref target="RFC6125"/> methods.
It is also more difficult to use TLS over other technology stacks (e.g., BTLE).</t>
  <t>The use of authenticated self-contained objects provides a work around for both the TLS challenges, and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher request and voucher response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>Proof of Identity (POI): provides data-origin authentication of a data object, e.g., a voucher request or an enrollment request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>Proof of Possession (POP): proves that an entity possesses and controls the private key corresponding to the public key contained in the  certification request, typically by adding a signature using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher requests and responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and proof of possession of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A Proof of Identity (POI) is also required for the certification request and therefore needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request through a proof of identity (POI).
The binding of data origin authentication or POI to the certification request may be provided directly by with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10  using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate the new use cases.
The pledge-responder-mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.
As indicated before, the communication model between registrar-agent and pledge assumes that the pledge acts as server and responds to requests.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.</t>

<t>For the authenticated self-contained objects used for the certification request, BRSKI-PRM relies on the defined message wrapping mechanisms of the enrollment protocols stated in <xref target="req-sol"/> above.</t>

<t>The security used within the document for bootstrapping objects produced or consumed by the pledge bases on JOSE <xref target="RFC7515"/>. In constraint environments it may provided based on COSE <xref target="RFC9052"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found in  <xref target="BRSKI-PRM-abstract"/>.</t>

<section anchor="uc2"><name>Pledge-Responder-Mode (PRM): Registrar-Agent Communication with Pledges</name>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects (the voucher request/response as known from BRSKI and the enrollment request/response as introduced by BRSKI-PRM) with the help of a registrar-agent.
This allows independence from protection provided by the utilized transport protocol.</t>

<t>The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.
Note that the Join Proxy is neglected in the figure as not needed by the registrar-agent.
The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar as described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints were the required functionality is provided</t>
  <t>enhances existing with new supported media types, e.g., for JWS voucher</t>
  <t>defines new endpoints were additional functionality is required, e.g., for wrapped certification request or new status information.</t>
</list></t>

<figure title="Architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="448" viewBox="0 0 448 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 32,48 L 32,232" fill="none" stroke="black"/>
<path d="M 72,240 L 72,384" fill="none" stroke="black"/>
<path d="M 144,240 L 144,336" fill="none" stroke="black"/>
<path d="M 200,368 L 200,432" fill="none" stroke="black"/>
<path d="M 240,32 L 240,144" fill="none" stroke="black"/>
<path d="M 240,240 L 240,336" fill="none" stroke="black"/>
<path d="M 304,240 L 304,336" fill="none" stroke="black"/>
<path d="M 352,152 L 352,232" fill="none" stroke="black"/>
<path d="M 352,336 L 352,368" fill="none" stroke="black"/>
<path d="M 360,72 L 360,144" fill="none" stroke="black"/>
<path d="M 400,240 L 400,336" fill="none" stroke="black"/>
<path d="M 400,368 L 400,432" fill="none" stroke="black"/>
<path d="M 440,32 L 440,144" fill="none" stroke="black"/>
<path d="M 240,32 L 440,32" fill="none" stroke="black"/>
<path d="M 32,48 L 64,48" fill="none" stroke="black"/>
<path d="M 160,48 L 232,48" fill="none" stroke="black"/>
<path d="M 240,64 L 440,64" fill="none" stroke="black"/>
<path d="M 240,144 L 440,144" fill="none" stroke="black"/>
<path d="M 8,240 L 72,240" fill="none" stroke="black"/>
<path d="M 144,240 L 240,240" fill="none" stroke="black"/>
<path d="M 304,240 L 400,240" fill="none" stroke="black"/>
<path d="M 80,304 L 136,304" fill="none" stroke="black"/>
<path d="M 248,304 L 296,304" fill="none" stroke="black"/>
<path d="M 144,336 L 240,336" fill="none" stroke="black"/>
<path d="M 304,336 L 400,336" fill="none" stroke="black"/>
<path d="M 200,368 L 400,368" fill="none" stroke="black"/>
<path d="M 8,384 L 72,384" fill="none" stroke="black"/>
<path d="M 200,432 L 400,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="360,232 348,226.4 348,237.6" fill="black" transform="rotate(90,352,232)"/>
<polygon class="arrowhead" points="360,152 348,146.4 348,157.6" fill="black" transform="rotate(270,352,152)"/>
<polygon class="arrowhead" points="304,304 292,298.4 292,309.6" fill="black" transform="rotate(0,296,304)"/>
<polygon class="arrowhead" points="256,304 244,298.4 244,309.6" fill="black" transform="rotate(180,248,304)"/>
<polygon class="arrowhead" points="144,304 132,298.4 132,309.6" fill="black" transform="rotate(0,136,304)"/>
<polygon class="arrowhead" points="88,304 76,298.4 76,309.6" fill="black" transform="rotate(180,80,304)"/>
<polygon class="arrowhead" points="40,232 28,226.4 28,237.6" fill="black" transform="rotate(90,32,232)"/>
<g class="text">
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="276" y="52">Vendor</text>
<text x="336" y="52">Service</text>
<text x="256" y="84">M</text>
<text x="312" y="84">anufacturer</text>
<text x="256" y="100">A</text>
<text x="304" y="100">uthorized</text>
<text x="400" y="100">Ownership</text>
<text x="256" y="116">S</text>
<text x="292" y="116">igning</text>
<text x="392" y="116">Tracker</text>
<text x="256" y="132">A</text>
<text x="300" y="132">uthority</text>
<text x="396" y="180">BRSKI-</text>
<text x="104" y="196">BRSKI-PRM</text>
<text x="396" y="196">MASA</text>
<text x="232" y="212">.............................</text>
<text x="392" y="212">.........</text>
<text x="120" y="228">.</text>
<text x="424" y="228">.</text>
<text x="120" y="244">.</text>
<text x="424" y="244">.</text>
<text x="120" y="260">.</text>
<text x="424" y="260">.</text>
<text x="36" y="276">Pledge</text>
<text x="120" y="276">.</text>
<text x="192" y="276">Registrar</text>
<text x="272" y="276">BRSKI</text>
<text x="340" y="276">Domain</text>
<text x="424" y="276">.</text>
<text x="120" y="292">.</text>
<text x="176" y="292">Agent</text>
<text x="272" y="292">EST</text>
<text x="352" y="292">Registrar</text>
<text x="424" y="292">.</text>
<text x="332" y="308">(PKI</text>
<text x="368" y="308">RA)</text>
<text x="424" y="308">.</text>
<text x="120" y="324">.</text>
<text x="212" y="324">LDevID</text>
<text x="424" y="324">.</text>
<text x="120" y="340">.</text>
<text x="424" y="340">.</text>
<text x="36" y="356">IDevID</text>
<text x="120" y="356">.</text>
<text x="424" y="356">.</text>
<text x="120" y="372">.</text>
<text x="424" y="372">.</text>
<text x="120" y="388">.</text>
<text x="224" y="388">Key</text>
<text x="300" y="388">Infrastructure</text>
<text x="424" y="388">.</text>
<text x="120" y="404">.</text>
<text x="236" y="404">(e.g.,</text>
<text x="280" y="404">PKI</text>
<text x="344" y="404">Certificate</text>
<text x="424" y="404">.</text>
<text x="120" y="420">.</text>
<text x="300" y="420">Authority)</text>
<text x="424" y="420">.</text>
<text x="120" y="436">.</text>
<text x="424" y="436">.</text>
<text x="272" y="452">.......................................</text>
<text x="220" y="468">&quot;Domain&quot;</text>
<text x="300" y="468">components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                             +------------------------+
   +---- Drop Ship ----------| Vendor Service         |
   |                         +------------------------+
   |                         | M anufacturer|         |
   |                         | A uthorized  |Ownership|
   |                         | S igning     |Tracker  |
   |                         | A uthority   |         |
   |                         +--------------+---------+
   |                                       ^
   |                                       |  BRSKI-
   |    BRSKI-PRM                          |   MASA
   |          .............................|.........
   V          .                            v        .
+-------+     .  +-----------+       +-----------+  .
|       |     .  |           |       |           |  .
|Pledge |     .  | Registrar | BRSKI | Domain    |  .
|       |     .  | Agent     |  EST  | Registrar |  .
|       |<------>|           |<----->| (PKI RA)  |  .
|       |     .  |     LDevID|       |           |  .
|       |     .  +-----------+       +-----+-----+  .
|IDevID |     .                            |        .
|       |     .         +------------------+-----+  .
+-------+     .         | Key Infrastructure     |  .
              .         | (e.g., PKI Certificate |  .
              .         |       Authority)       |  .
              .         +------------------------+  .
              .......................................
                       "Domain" components
]]></artwork></artset></figure>

<t>The following list describes the components in a (customer) site domain:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Other protocols may be used like CoAP, Bluetooth, or NFC, but are out of scope of this document.
A pledge acting as a server during bootstrapping leads to some differences to BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent must be possible.</t>
      <t>As the registrar-agent must be able to request data objects for bootstrapping of the pledge, the pledge must offer corresponding endpoints.</t>
      <t>The registrar-agent may provide additional data to the pledge in the context of the voucher triggering request, to make itself visible to the domain registrar.</t>
      <t>Order of exchanges in the call flow may be different as the registrar-agent collects both, PVR and PER, at once and provides them to the registrar.
This approach is used in order to allow for bulk bootstrapping of several devices in a single pass through a new site by the commissioning personnel.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges and performs a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the session establishment and also to verify that the registrar-agent is authorized to perform the bootstrapping of the distinct pledge.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
The registrar detects if the bootstrapping is performed by the pledge directly or by the registrar-agent.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
For issuing a voucher, the MASA may perform additional checks on a voucher-request, to issue a voucher indicating agent-proximity instead of (registrar-)proximity.</t>
</list></t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement, that the proximity registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is a weaker assertion then "proximity".
It is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.
Note that at the time of creating the voucher-request, the pledge cannot verify the registrar's registrar EE  certificate and has no proof-of-possession of the corresponding private key for the certificate.
The pledge therefore accepts the registrar EE certificate provisionally until it receives the voucher as described in  <xref target="exchanges_uc2_3"/>.
See also <xref target="RFC8995"/> "PROVISIONAL accept of server cert".</t>

<t>Trust handover to the domain is established via the "pinned-domain-certificate" in the voucher.</t>

<t>In contrast to the above, "proximity" provides a statement, that the pledge was in direct contact with the registrar and was able to verify proof-of-possession of the private key in the context of the TLS handshake.
The provisionally accepted registrar EE certificate can be verified after the voucher has been processed by the pledge.
As the returned voucher includes an additional signature by the registrar, the pledge can also verify that the registrar possesses the corresponding private key.</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>In contrast to BRSKI the pledge acts as server.</t>

<t>This is triggered by the registrar-agent to generate the PVR and PER as well as for the processing of the responses and the generation of status information.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The URI path begins with "http://www.example.com/.well-known/brski" followed by a path-suffix that indicates the intended operation.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Operation path</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge-voucher-request creation Returns PVR</c>
      <c>/pledge-voucher-request</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge-enrollment-request Returns PER</c>
      <c>/pledge-enrollment-request</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Provide voucher to pledge Returns pledge-voucher-status</c>
      <c>/pledge-voucher</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide enrollment response to pledge Returns pledge-enrollment-status</c>
      <c>/pledge-enrollment</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide CA certs to pledge</c>
      <c>/pledge-CACerts</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query bootstrapping status of pledge</c>
      <c>/pledge-bootstrap-status</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent is a new component in the BRSKI context.
It provides connectivity between the pledge and the domain registrar and reuses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/>.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher request/response, the enrollment request/response, as well as related telemetry and status information.
For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.
This new component changes the general interaction between the pledge and the domain registrar as shown in <xref target="uc2figure"/>.</t>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use this LDevID(RegAgt) when establishing the TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
(Note that <xref target="RFC8995"/> makes a similar requirement)
In BRSKI-PRM, the SKID is used in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-numbers of the pledges to be bootstrapped.
This is necessary to allow the discovery of pledges by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair.</t>
  <t>Registrar EE certificate: certificate of the domain registrar.</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped.</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge. The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufactuere may opt out of this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>To be able to detect the pledge using mDNS, network connectivity is required.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification descibes the usage of HTTP as in BRSKI <xref target="RFC8995"/>.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects which are not bound to specific transport security.
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain-registrar certificate (registrar EE certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the LDevID(RegAgt).
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate based on the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR.
The registrar includes the LDevID(RegAgt) certificate information into the RVR if the PVR asked for the assertion "agent-proximity".</t>

<t>The MASA in turn verifies the registrar EE certificate is included in the PVR ("prior-signed-voucher-request" of RVR) in the "agent-provided-proximity-registrar-certificate" leaf 
and may assert the PVR as "verified" or "logged" instead of "proximity", as there is no direct connection between the pledge and the registrar.</t>

<t>In addition, the MASA can state the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher. Otherwise, it may assert "verified" or "logged".
Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx status code as described in section 5.6 of <xref target="RFC8995"/>.
The voucher then can be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1056" width="576" viewBox="0 0 576 1056" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,256 L 32,320" fill="none" stroke="black"/>
<path d="M 32,384 L 32,576" fill="none" stroke="black"/>
<path d="M 32,624 L 32,688" fill="none" stroke="black"/>
<path d="M 32,720 L 32,736" fill="none" stroke="black"/>
<path d="M 32,800 L 32,864" fill="none" stroke="black"/>
<path d="M 32,928 L 32,1040" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 120,32 L 120,96" fill="none" stroke="black"/>
<path d="M 176,104 L 176,208" fill="none" stroke="black"/>
<path d="M 176,256 L 176,320" fill="none" stroke="black"/>
<path d="M 176,384 L 176,576" fill="none" stroke="black"/>
<path d="M 176,624 L 176,688" fill="none" stroke="black"/>
<path d="M 176,720 L 176,736" fill="none" stroke="black"/>
<path d="M 176,800 L 176,864" fill="none" stroke="black"/>
<path d="M 176,928 L 176,1040" fill="none" stroke="black"/>
<path d="M 216,32 L 216,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 328,104 L 328,208" fill="none" stroke="black"/>
<path d="M 328,256 L 328,320" fill="none" stroke="black"/>
<path d="M 328,496 L 328,576" fill="none" stroke="black"/>
<path d="M 328,624 L 328,688" fill="none" stroke="black"/>
<path d="M 328,720 L 328,736" fill="none" stroke="black"/>
<path d="M 328,800 L 328,864" fill="none" stroke="black"/>
<path d="M 328,928 L 328,976" fill="none" stroke="black"/>
<path d="M 328,1008 L 328,1040" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 392,32 L 392,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,208" fill="none" stroke="black"/>
<path d="M 448,256 L 448,320" fill="none" stroke="black"/>
<path d="M 448,384 L 448,480" fill="none" stroke="black"/>
<path d="M 448,560 L 448,576" fill="none" stroke="black"/>
<path d="M 448,624 L 448,688" fill="none" stroke="black"/>
<path d="M 448,720 L 448,736" fill="none" stroke="black"/>
<path d="M 448,800 L 448,864" fill="none" stroke="black"/>
<path d="M 448,928 L 448,944" fill="none" stroke="black"/>
<path d="M 448,1008 L 448,1040" fill="none" stroke="black"/>
<path d="M 464,32 L 464,96" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 552,104 L 552,208" fill="none" stroke="black"/>
<path d="M 552,256 L 552,320" fill="none" stroke="black"/>
<path d="M 552,384 L 552,496" fill="none" stroke="black"/>
<path d="M 552,544 L 552,576" fill="none" stroke="black"/>
<path d="M 552,624 L 552,688" fill="none" stroke="black"/>
<path d="M 552,720 L 552,736" fill="none" stroke="black"/>
<path d="M 552,800 L 552,864" fill="none" stroke="black"/>
<path d="M 552,928 L 552,976" fill="none" stroke="black"/>
<path d="M 552,1008 L 552,1040" fill="none" stroke="black"/>
<path d="M 568,32 L 568,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 216,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 392,32 L 464,32" fill="none" stroke="black"/>
<path d="M 488,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 120,96 L 216,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 392,96 L 464,96" fill="none" stroke="black"/>
<path d="M 488,96 L 568,96" fill="none" stroke="black"/>
<path d="M 40,176 L 168,176" fill="none" stroke="black"/>
<path d="M 40,192 L 168,192" fill="none" stroke="black"/>
<path d="M 40,256 L 80,256" fill="none" stroke="black"/>
<path d="M 136,256 L 168,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 128,272 L 168,272" fill="none" stroke="black"/>
<path d="M 40,304 L 80,304" fill="none" stroke="black"/>
<path d="M 136,304 L 168,304" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 128,320 L 168,320" fill="none" stroke="black"/>
<path d="M 184,384 L 232,384" fill="none" stroke="black"/>
<path d="M 280,384 L 320,384" fill="none" stroke="black"/>
<path d="M 184,432 L 224,432" fill="none" stroke="black"/>
<path d="M 272,432 L 320,432" fill="none" stroke="black"/>
<path d="M 336,496 L 424,496" fill="none" stroke="black"/>
<path d="M 472,496 L 544,496" fill="none" stroke="black"/>
<path d="M 336,544 L 408,544" fill="none" stroke="black"/>
<path d="M 488,544 L 544,544" fill="none" stroke="black"/>
<path d="M 184,560 L 216,560" fill="none" stroke="black"/>
<path d="M 296,560 L 320,560" fill="none" stroke="black"/>
<path d="M 184,624 L 232,624" fill="none" stroke="black"/>
<path d="M 280,624 L 320,624" fill="none" stroke="black"/>
<path d="M 336,640 L 360,640" fill="none" stroke="black"/>
<path d="M 408,640 L 440,640" fill="none" stroke="black"/>
<path d="M 336,656 L 360,656" fill="none" stroke="black"/>
<path d="M 416,656 L 440,656" fill="none" stroke="black"/>
<path d="M 184,672 L 200,672" fill="none" stroke="black"/>
<path d="M 304,672 L 320,672" fill="none" stroke="black"/>
<path d="M 184,720 L 200,720" fill="none" stroke="black"/>
<path d="M 304,720 L 320,720" fill="none" stroke="black"/>
<path d="M 184,736 L 200,736" fill="none" stroke="black"/>
<path d="M 304,736 L 320,736" fill="none" stroke="black"/>
<path d="M 40,800 L 64,800" fill="none" stroke="black"/>
<path d="M 144,800 L 168,800" fill="none" stroke="black"/>
<path d="M 40,816 L 64,816" fill="none" stroke="black"/>
<path d="M 144,816 L 168,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 168,832" fill="none" stroke="black"/>
<path d="M 40,848 L 56,848" fill="none" stroke="black"/>
<path d="M 152,848 L 168,848" fill="none" stroke="black"/>
<path d="M 40,864 L 56,864" fill="none" stroke="black"/>
<path d="M 136,864 L 168,864" fill="none" stroke="black"/>
<path d="M 184,928 L 232,928" fill="none" stroke="black"/>
<path d="M 280,928 L 320,928" fill="none" stroke="black"/>
<path d="M 184,944 L 208,944" fill="none" stroke="black"/>
<path d="M 296,944 L 320,944" fill="none" stroke="black"/>
<path d="M 336,960 L 352,960" fill="none" stroke="black"/>
<path d="M 528,960 L 544,960" fill="none" stroke="black"/>
<path d="M 336,976 L 368,976" fill="none" stroke="black"/>
<path d="M 520,976 L 544,976" fill="none" stroke="black"/>
<path d="M 184,1024 L 208,1024" fill="none" stroke="black"/>
<path d="M 296,1024 L 320,1024" fill="none" stroke="black"/>
<polygon class="arrowhead" points="552,960 540,954.4 540,965.6" fill="black" transform="rotate(0,544,960)"/>
<polygon class="arrowhead" points="552,496 540,490.4 540,501.6" fill="black" transform="rotate(0,544,496)"/>
<polygon class="arrowhead" points="448,640 436,634.4 436,645.6" fill="black" transform="rotate(0,440,640)"/>
<polygon class="arrowhead" points="344,976 332,970.4 332,981.6" fill="black" transform="rotate(180,336,976)"/>
<polygon class="arrowhead" points="344,656 332,650.4 332,661.6" fill="black" transform="rotate(180,336,656)"/>
<polygon class="arrowhead" points="344,544 332,538.4 332,549.6" fill="black" transform="rotate(180,336,544)"/>
<polygon class="arrowhead" points="328,1024 316,1018.4 316,1029.6" fill="black" transform="rotate(0,320,1024)"/>
<polygon class="arrowhead" points="328,944 316,938.4 316,949.6" fill="black" transform="rotate(0,320,944)"/>
<polygon class="arrowhead" points="328,928 316,922.4 316,933.6" fill="black" transform="rotate(0,320,928)"/>
<polygon class="arrowhead" points="328,720 316,714.4 316,725.6" fill="black" transform="rotate(0,320,720)"/>
<polygon class="arrowhead" points="328,624 316,618.4 316,629.6" fill="black" transform="rotate(0,320,624)"/>
<polygon class="arrowhead" points="328,432 316,426.4 316,437.6" fill="black" transform="rotate(0,320,432)"/>
<polygon class="arrowhead" points="328,384 316,378.4 316,389.6" fill="black" transform="rotate(0,320,384)"/>
<polygon class="arrowhead" points="192,928 180,922.4 180,933.6" fill="black" transform="rotate(180,184,928)"/>
<polygon class="arrowhead" points="192,736 180,730.4 180,741.6" fill="black" transform="rotate(180,184,736)"/>
<polygon class="arrowhead" points="192,672 180,666.4 180,677.6" fill="black" transform="rotate(180,184,672)"/>
<polygon class="arrowhead" points="192,560 180,554.4 180,565.6" fill="black" transform="rotate(180,184,560)"/>
<polygon class="arrowhead" points="192,384 180,378.4 180,389.6" fill="black" transform="rotate(180,184,384)"/>
<polygon class="arrowhead" points="176,864 164,858.4 164,869.6" fill="black" transform="rotate(0,168,864)"/>
<polygon class="arrowhead" points="176,816 164,810.4 164,821.6" fill="black" transform="rotate(0,168,816)"/>
<polygon class="arrowhead" points="176,320 164,314.4 164,325.6" fill="black" transform="rotate(0,168,320)"/>
<polygon class="arrowhead" points="176,272 164,266.4 164,277.6" fill="black" transform="rotate(0,168,272)"/>
<polygon class="arrowhead" points="176,192 164,186.4 164,197.6" fill="black" transform="rotate(0,168,192)"/>
<polygon class="arrowhead" points="48,848 36,842.4 36,853.6" fill="black" transform="rotate(180,40,848)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,800 36,794.4 36,805.6" fill="black" transform="rotate(180,40,800)"/>
<polygon class="arrowhead" points="48,304 36,298.4 36,309.6" fill="black" transform="rotate(180,40,304)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="168" y="52">Registrar</text>
<text x="292" y="52">Domain</text>
<text x="428" y="52">Domain</text>
<text x="524" y="52">Vendor</text>
<text x="152" y="68">Agent</text>
<text x="304" y="68">Registrar</text>
<text x="412" y="68">CA</text>
<text x="528" y="68">Service</text>
<text x="164" y="84">(RegAgt)</text>
<text x="296" y="84">(JRC)</text>
<text x="524" y="84">(MASA)</text>
<text x="508" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="56" y="244">trigger</text>
<text x="104" y="244">PVR</text>
<text x="148" y="244">(tPVR)</text>
<text x="192" y="244">and</text>
<text x="224" y="244">PER</text>
<text x="268" y="244">(tPER)</text>
<text x="340" y="244">generation</text>
<text x="396" y="244">on</text>
<text x="436" y="244">pledge</text>
<text x="108" y="260">tPVR</text>
<text x="104" y="276">PVR</text>
<text x="108" y="308">tPER</text>
<text x="104" y="324">PER</text>
<text x="32" y="340">~</text>
<text x="176" y="340">~</text>
<text x="328" y="340">~</text>
<text x="448" y="340">~</text>
<text x="552" y="340">~</text>
<text x="56" y="372">provide</text>
<text x="104" y="372">PVR</text>
<text x="132" y="372">to</text>
<text x="204" y="372">infrastructure</text>
<text x="256" y="388">TLS</text>
<text x="328" y="388">|</text>
<text x="292" y="404">[Reg-Agt</text>
<text x="384" y="404">authenticated</text>
<text x="280" y="420">and</text>
<text x="348" y="420">authorized?]</text>
<text x="248" y="436">PVR</text>
<text x="328" y="436">|</text>
<text x="292" y="452">[Reg-Agt</text>
<text x="380" y="452">authorized?]</text>
<text x="288" y="468">[accept</text>
<text x="356" y="468">device?]</text>
<text x="292" y="484">[contact</text>
<text x="360" y="484">vendor]</text>
<text x="448" y="500">RVR</text>
<text x="452" y="516">[extract</text>
<text x="528" y="516">DomainID]</text>
<text x="448" y="532">[update</text>
<text x="504" y="532">audit</text>
<text x="548" y="532">log]</text>
<text x="448" y="548">Voucher</text>
<text x="256" y="564">Voucher</text>
<text x="56" y="612">provide</text>
<text x="104" y="612">PER</text>
<text x="132" y="612">to</text>
<text x="204" y="612">infrastructure</text>
<text x="256" y="628">PER</text>
<text x="384" y="644">CSR</text>
<text x="388" y="660">Cert</text>
<text x="256" y="676">Enroll-Resp</text>
<text x="48" y="708">query</text>
<text x="104" y="708">cACerts</text>
<text x="156" y="708">from</text>
<text x="236" y="708">infrastructure</text>
<text x="252" y="724">cACert-Req</text>
<text x="256" y="740">cACert-Resp</text>
<text x="32" y="756">~</text>
<text x="176" y="756">~</text>
<text x="336" y="756">~</text>
<text x="456" y="756">~</text>
<text x="560" y="756">~</text>
<text x="56" y="788">provide</text>
<text x="120" y="788">voucher</text>
<text x="168" y="788">and</text>
<text x="232" y="788">certificate</text>
<text x="296" y="788">and</text>
<text x="344" y="788">collect</text>
<text x="404" y="788">status</text>
<text x="452" y="788">info</text>
<text x="104" y="804">Voucher</text>
<text x="104" y="820">vStatus</text>
<text x="104" y="836">cACerts</text>
<text x="104" y="852">Enroll-Resp</text>
<text x="96" y="868">eStatus</text>
<text x="32" y="884">~</text>
<text x="176" y="884">~</text>
<text x="328" y="884">~</text>
<text x="448" y="884">~</text>
<text x="552" y="884">~</text>
<text x="56" y="916">provide</text>
<text x="120" y="916">voucher</text>
<text x="180" y="916">status</text>
<text x="224" y="916">and</text>
<text x="268" y="916">enroll</text>
<text x="324" y="916">status</text>
<text x="364" y="916">to</text>
<text x="416" y="916">registrar</text>
<text x="256" y="932">TLS</text>
<text x="256" y="948">vStatus</text>
<text x="376" y="964">req</text>
<text x="420" y="964">device</text>
<text x="472" y="964">audit</text>
<text x="512" y="964">log</text>
<text x="404" y="980">device</text>
<text x="456" y="980">audit</text>
<text x="496" y="980">log</text>
<text x="296" y="996">[verify</text>
<text x="352" y="996">audit</text>
<text x="396" y="996">log]</text>
<text x="256" y="1028">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+    +-----------+    +-----------+    +--------+  +---------+
| Pledge |    | Registrar |    | Domain    |    | Domain |  | Vendor  |
|        |    | Agent     |    | Registrar |    | CA     |  | Service |
|        |    | (RegAgt)  |    |  (JRC)    |    |        |  | (MASA)  |
+--------+    +-----------+    +-----------+    +--------+  +---------+
   |                 |                  |              |   Internet |
   |   discover      |                  |              |            |
   |    pledge       |                  |              |            |
   | mDNS query      |                  |              |            |
   |<----------------|                  |              |            |
   |---------------->|                  |              |            |
   |                 |                  |              |            |

   trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<----- tPVR -----|                  |              |            |
   |------ PVR ----->|                  |              |            |
   |                 |                  |              |            |
   |<----- tPER -----|                  |              |            |
   |------ PER ----->|                  |              |            |
   ~                 ~                  ~              ~            ~

   provide PVR to infrastructure
   |                 |<------ TLS ----->|              |            |
   |                 |          [Reg-Agt authenticated |            |
   |                 |           and authorized?]      |            |
   |                 |------ PVR ------>|              |            |
   |                 |          [Reg-Agt authorized?]  |            |
   |                 |          [accept device?]       |            |
   |                 |          [contact vendor]       |            |
   |                 |                  |------------ RVR --------->|
   |                 |                  |           [extract DomainID]
   |                 |                  |           [update audit log]
   |                 |                  |<--------- Voucher --------|
   |                 |<---- Voucher ----|              |            |
   |                 |                  |              |            |

   provide PER to infrastructure
   |                 |------- PER ----->|              |            |
   |                 |                  |---- CSR ---->|            |
   |                 |                  |<--- Cert ----|            |
   |                 |<-- Enroll-Resp---|              |            |
   |                 |                  |              |            |
   query cACerts from infrastructure
   |                 |--- cACert-Req -->|              |            |
   |                 |<-- cACert-Resp---|              |            |
   ~                 ~                   ~              ~            ~

   provide voucher and certificate and collect status info
   |<--- Voucher ----|                  |              |            |
   |---- vStatus --->|                  |              |            |
   |<--- cACerts ----|                  |              |            |
   |<--Enroll-Resp---|                  |              |            |
   |--- eStatus ---->|                  |              |            |
   ~                 ~                  ~              ~            ~

   provide voucher status and enroll status to registrar
   |                 |<------ TLS ----->|              |            |
   |                 |----  vStatus --->|              |            |
   |                 |                  |--- req device audit log-->|
   |                 |                  |<---- device audit log ----|
   |                 |           [verify audit log]
   |                 |                  |              |            |
   |                 |----  eStatus --->|              |            |
   |                 |                  |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions between the different components into:<br />
TODO: final check and rework section overview</t>

<t><list style="symbols">
  <t><xref target="exchanges_uc2_1"/> describes data exchanged between the registrar-agent and the pledge. - TODO</t>
  <t><xref target="exchanges_uc2_2"/> describes data exchanged between the registrar-agent and the registrar and also the interaction of the registrar with the MASA and the domain CA. - TODO</t>
  <t><xref target="exchanges_uc2_3"/> describes data exchanged between the registrar-agent and the pledge including the status information. - TODO</t>
  <t><xref target="exchanges_uc2_4"/> describes the telemetry and status handling and addresses the exchanges between the registrar-agent and the registrar. - TODO</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses the exchanges between the registrar-agent and the registrar. - TODO</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition from Pledge by Registrar-Agent - Overview</name>

<t>The following description assumes that the registrar-agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> based on mDNS or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent: possesses/trusts IDevID CA certificate and has own LDevID(RegAgt) credentials for the registrar domain (site).
In addition, the registrar-agent <bcp14>MUST</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
  <list style="symbols">
      <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
      <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
      <t>discovered by using a vendor specific approach, e.g., RF beacons
The registrar-agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
    </list></t>
  <t>Registrar: possesses/trusts IDevID CA certificate and has own registrar EE credentials.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="520" viewBox="0 0 520 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,304" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,304" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 72,144" fill="none" stroke="black"/>
<path d="M 336,144 L 360,144" fill="none" stroke="black"/>
<path d="M 48,208 L 80,208" fill="none" stroke="black"/>
<path d="M 280,208 L 360,208" fill="none" stroke="black"/>
<path d="M 48,240 L 88,240" fill="none" stroke="black"/>
<path d="M 320,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,288 L 88,288" fill="none" stroke="black"/>
<path d="M 312,288 L 360,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,288 356,282.4 356,293.6" fill="black" transform="rotate(0,360,288)"/>
<polygon class="arrowhead" points="368,208 356,202.4 356,213.6" fill="black" transform="rotate(0,360,208)"/>
<polygon class="arrowhead" points="56,240 44,234.4 44,245.6" fill="black" transform="rotate(180,48,240)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="112" y="148">trigger</text>
<text x="236" y="148">pledge-voucher-request</text>
<text x="204" y="164">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="180">-agent-signed-data</text>
<text x="180" y="212">pledge-voucher-request</text>
<text x="396" y="212">-store</text>
<text x="440" y="212">PVR</text>
<text x="128" y="244">trigger</text>
<text x="204" y="244">enrollment</text>
<text x="280" y="244">request</text>
<text x="128" y="260">(empty)</text>
<text x="200" y="292">pledge-enrollment-request</text>
<text x="396" y="292">-store</text>
<text x="448" y="292">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<--- trigger pledge-voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge-voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge-enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>Note: The registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

</section>
<section anchor="pledge-voucher-request-pvr-trigger-and-response"><name>Pledge Voucher Request (PVR) - Trigger and Response</name>

<section anchor="voucher-request-trigger-pvr"><name>Voucher Request Trigger (PVR)</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/pledge-voucher-request"</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>The pledge provisionally accepts the agent-provided-proximity-registrar-cert, it <bcp14>SHOULD</bcp14> verify it after a voucher is received.
The pledge will be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
It <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value), excluding the ASN.1 encoding of "OCTET STRING" of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request-prm:agent-signed-data" element (defined in <xref target="voucher-request-prm-yang"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:agent-signed-data"
  representation in JSON syntax

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="voucher-request-response-pvr"><name>Voucher Request Response (PVR)</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or it's not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized the time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity".</t>
</list></t>

<t>The ietf-voucher-request:voucher is enhanced with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar EE certificate (provided as trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as trigger parameter.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leafs are defined in <xref target="voucher-request-prm-yang"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-voucher-request-prm:voucher" Representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON syntax
{
    "alg": "ES256",
    "kid": "base64encodedvalue==",
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Content-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>SHOULD</bcp14> include this Content-Type header field indicating the included media type for the voucher response.
Note that this is also an indication regarding the acceptable format of the voucher response.
This format is included by the registrar as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="plegde-enrollment-request-per-trigger-and-response"><name>Plegde Enrollment Request (PER) - Trigger and Response</name>

<section anchor="enrollment-request-trigger-per"><name>Enrollment Request Trigger (PER)</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/pledge-enrollment-request"</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "reenroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

</section>
<section anchor="enrollment-request-response-per"><name>Enrollment Request Response (PER)</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the enrollment-trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures proof of possession of the private key corresponding to the contained public key.
In addition, based on the additional signature using the IDevID, proof of identity is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the enrollment request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats such as CMP or CMC.</t>

<t>The pledge <bcp14>SHOULD</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format. Note that the wrapping signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-ztp-types" Representation in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue==",
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
  ]
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent to Registrar</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses it's own LDevID(RegAgt) credentials of the site domain.
In addition, it may possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar: possesses the IDevID CA certificate of the pledge vendor/manufacturer and it's own registrar EE credentials of the site domain.</t>
  <t>MASA: possesses it's own vendor/manufacturer credentials (voucher signing key, TLS server certificate) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.
The latter is only necessary if the MASA needs to verify that the domain of the Registrar is a-priori authorized to enroll a particular pledge, or a particular type of pledge.
In such case, how the MASA will obtain the domain CA certificate is out of scope in this document.
In other cases, a MASA may allow the pledge to enroll into an anonymous and/or yet-unknown domain and then the a-priori possession of the domain CA certificate is not needed.</t>
</list></t>

<figure title="Request processing between registrar-agent bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="todo-pvr-"><name>TODO - PVR ...</name>

<t>In contrast to <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection form registrar-agent to registrar is established, the authorization <bcp14>SHALL</bcp14> be verified again based on the agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>The registrar can receive request objects in different formats as defined in <xref target="RFC8995"/>.
Specifically, the registrar will receive JSON-in-JWS objects generated by the pledge for voucher-request and enrollment-request (instead of BRSKI voucher-request as CMS-signed JSON and enrollment-request as PKCS#10).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PVR by HTTP POST to the registrar endpoint: "/.well-known/brski/requestvoucher"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent <bcp14>SHOULD</bcp14> set the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>After receiving  the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar shall verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar EE certificate to ensure the registrar in proximity of the registrar-agent is the destination for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credential indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, used to sign the data, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the kid header of the agent-signed-data, and perform this verification.
This requires, that the registrar can fetch the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.</t>
</list></t>

<t>If the validation fails the registrar <bcp14>SHOULD</bcp14> respond with HTTP 404 Not Found status code to the registrar-agent.
HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used if the Content-Type indicated by the Accept header is unknown or unsupported.</t>

<t>If the validation succeeds, the registrar <bcp14>SHOULD</bcp14> accept the PVR to join the domain as defined in section 5.3 of <xref target="RFC8995"/>.
The registrar then establishes a TLS connection to MASA as described in section 5.4 of <xref target="RFC8995"/> to obtain a voucher for the pledge.</t>

</section>
<section anchor="tdod-rvr-"><name>TDOD - RVR ...</name>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature.</t>
  <t>x5c: contains the base64-encoded registrar LDevID certificate(s).
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: contains the current date and time in yang:date-and-time format for the RVR creation time.</t>
  <t>nonce: copied form the PVR</t>
  <t>serial-number: contains the pledge product-serial-number.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: contains the voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: contains the PVR provided by the registrar-agent.</t>
</list></t>

<t>The RVR can be enhanced optionally with the following parameter as defined in <xref target="voucher-request-prm-yang"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: contains the LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including the certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.</t>
</list></t>

<t>If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar registrar EE credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:voucher" representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR data contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar EE certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar EE certificate used to sign the RVR.
Note: Correspond here relates to the case that a single registrar EE certificate is used or that different registrar EE certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this field to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate used to generate the signature is identified by the "kid" parameter of the JOSE header (agent-signed-data).
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar EE certificate.
If the "agent-sign-cert" field is not provided, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in section 5.6 of <xref target="RFC8995"/>, <!-- XXX -->and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="todo-masa-issued-voucher"><name>TODO: MASA Issued Voucher</name>

<t>The expected voucher-response format for the pledge-responder-mode the <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> is applied.
If the MASA detects that the Accept header of the PVR does not match the <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code 406 Not Acceptable as the pledge will not be able to parse the response.
The voucher syntax is described in detail by <xref target="RFC8366"/>. <xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="todo-masa-issued-voucher-with-additional-registrar-signature"><name>TODO: MASA Issued Voucher with Additional Registrar Signature</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher, by signing it using its registrar credentials).
The signature is created by signing the original "payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credential (see<xref target="RFC7515"/>, section 5.2 point 8. The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain registrar EE certificate as well as potential intermediate CA certificates up to the pinned domain certificate. The pinned domain certificate is already contained in the payload.</t>

<t>This signature provides a proof of possession of the private key corresponding to the registrar EE certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).
The registrar <bcp14>MUST</bcp14> use the same registrar EE credential used for authentication in the TLS handshake to authenticate towards the registrar-agent. 
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher request as also transferred in the PVR in the agent-provided-proximity-registrar-cert component. 
<xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header (MASA)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Decoded "JWS Protected Header (Reg)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

</section>
<section anchor="todo-per-to-registrar-"><name>TODO: PER To Registrar ...</name>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar.
Deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t><xref target="RFC7030"/> EST standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to the /simpleenroll endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate in the TLS establishment and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment request with the corresponding domain CA.
It creates a registrar-enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="todo-signature-wrapped-ca-certificates-"><name>TODO: signature wrapped CA certificates ....</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST using the /cacerts endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate response, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The additional signature of the registrar will allow the pledge to verify the authorization to install CA certificates.
As the CA certificates are provided to the pledge after the voucher, the pledge has the necessary information to validate the provisioning object.</t>

<t>To allow the registrar-agent to request signature wrapped CA certificates, a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) with an HTTPS GET message.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is the signature of the CA certificate information using the registrar EE credential resulting in a signed JSON object. The CA certificates are provided as base64 encoded x5b.</t>

<figure title="Representation of CA certificates data with additional registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with additional registrar signaturer in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ] TODO: check rename "x5b" to more explanatory e.g. "ca-certs-x5b"?
}


# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>The registrar-agent has now finished the exchanges with the domain registrar and can supply the voucher-response (from MASA via Registrar), the CA certificates, and the enrollment-response (LDevID certificate, from CA via Registrar) to the pledge.
It can close the TLS connection to the domain registrar and can provide the responses to the pledge(s).
The content of the responses are defined by the voucher <xref target="RFC8366"/> and the certificate <xref target="RFC5280"/>.</t>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Object Supply by Registrar-Agent to Pledge</name>

<t>The following description assumes that the registrar-agent has obtained the voucher and enrollment responses from the domain registrar.
It will re-start the interaction with the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher and LDevID certificate and optionally CA certificates.</t>
</list></t>

<figure title="Responses and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 104,160" fill="none" stroke="black"/>
<path d="M 240,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 112,192" fill="none" stroke="black"/>
<path d="M 248,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 88,224" fill="none" stroke="black"/>
<path d="M 296,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 304,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 112,288" fill="none" stroke="black"/>
<path d="M 240,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 72,320" fill="none" stroke="black"/>
<path d="M 296,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(0,320,288)"/>
<polygon class="arrowhead" points="328,192 316,186.4 316,197.6" fill="black" transform="rotate(0,320,192)"/>
<polygon class="arrowhead" points="56,320 44,314.4 44,325.6" fill="black" transform="rotate(180,48,320)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,224 44,218.4 44,229.6" fill="black" transform="rotate(180,48,224)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="140" y="164">supply</text>
<text x="200" y="164">voucher</text>
<text x="152" y="196">voucher</text>
<text x="212" y="196">status</text>
<text x="344" y="196">-</text>
<text x="376" y="196">store</text>
<text x="380" y="212">pledge</text>
<text x="440" y="212">voucher</text>
<text x="500" y="212">status</text>
<text x="124" y="228">supply</text>
<text x="164" y="228">CA</text>
<text x="228" y="228">certificates</text>
<text x="108" y="260">supply</text>
<text x="180" y="260">enrollment</text>
<text x="260" y="260">response</text>
<text x="148" y="292">enroll</text>
<text x="204" y="292">status</text>
<text x="344" y="292">-</text>
<text x="376" y="292">store</text>
<text x="380" y="308">pledge</text>
<text x="436" y="308">enroll</text>
<text x="492" y="308">status</text>
<text x="108" y="324">supply</text>
<text x="168" y="324">CAcerts</text>
<text x="244" y="324">(optional)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<----- supply CA certificates  ----|
    |                                   |
    |<--- supply enrollment response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status
    |<--- supply CAcerts (optional) ----|
    |                                   |

]]></artwork></artset></figure>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-voucher".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example if given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufactures pledge implementation.</t>

<t>To perform the validation of multiple signatures in the voucher, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Validate MASA signature as described in section 5.6.1 in <xref target="RFC8995"/> successfully.</t>
  <t>Install contained trust anchor provisionally.</t>
  <t>Verify registrar signature as described in section 5.6.1 in <xref target="RFC8995"/> successfully, but take the registrar certificate instead of the MASA certificate for verification.</t>
  <t>Validate the registrar certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert") successfully, including validity and authorization to bootstrap the particular pledge.</t>
</list></t>

<t>If all verification steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar EE certificate.</t>

<t>If an error occurs during the verification it <bcp14>SHALL</bcp14> be signaled in the reason field of the pledge voucher status.</t>

<section anchor="todo-pledge-voucher-status-telemetry-"><name>TODO: pledge voucher status telemetry ...</name>

<t>After voucher verification the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher status and provides it as JOSE object with the wrapping signature in the response message to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-voucher-status" representation in JSON
  syntax
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="todo-provide-ca-certificates-"><name>TODO: Provide CA certificates ...</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-CAcerts".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHALL</bcp14> only be done, if the voucher-response has been successfully provided to the pledge.</t>

<t>The supply CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar pledge as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded x5b.
The pledge <bcp14>SHALL</bcp14> install the received CA certificates in its trust anchor database after successful verification of the registrar's signature.</t>

<t>If validation of the wrapping signature or another security check fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is in an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the pledge detects errors in the encoding of the payload.</t>

</section>
<section anchor="todo-supply-enroll-response-and-generate-enroll-status-"><name>TODO: Supply enroll-response AND generate enroll status ...</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-enrollment".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure, is <spanx style="verb">application/pkcs7-mime</spanx>. Note that it only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response message to the registrar-agent. If the verification of the LDevID certificate succeeds, the status <bcp14>SHALL</bcp14> be set to true, otherwise to FALSE.</t>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll status is provided with an additional signature using JOSE.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using the LDevID of the pledge as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IdevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-enroll-status" representation in
  JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar-agent to provide the status responses to the registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Telemetry Status: Pledge Status by Registrar-Agent - Trigger and Response</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="todo-registrar-agent-requests-the-pledge-status-trigger"><name>TODO: registrar-agent requests the pledge-status - Trigger</name>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/pledge-status"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and the enrollment of the pledge into the new domain).
As pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-request" representation in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="todo-pledge-status-response"><name>TODO: pledge-status response</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in section <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is :</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context" : { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in section <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize the bootstrapped credential information in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulativ in the sense that connect-success implies enroll-success implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-response" representation in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.
In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>

</section>
</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Status: Handling Registrar-Agent to Domain Registrar</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>If the TLS connection to the registrar was closed, the registrar-agent establishes a TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device in his domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge belongs to an accepted device in his domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the verification of a signature of the status information is an addition to the described handling in section 5.9.4 of <xref target="RFC8995"/>.</t>

<t>According to <xref target="RFC8995"/> section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher Request Artifact</name>

<t>The following enhancement extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.</t>

<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>The following tree diagram is mostly a duplicate of the contents of <xref target="RFC8995"/>, with the addition of the fields agent-signed-data, the registrar-proximity-certificate, and agent-signing certificate.
The tree diagram is described in <xref target="RFC8340"/>.
Each node in the diagram is fully described by the YANG module in Section <xref target="voucher-request-prm-yang-module"/>.</t>

<figure><artwork align="left"><![CDATA[
module: ietf-voucher-request-prm

 grouping voucher-request-prm-grouping
  +-- voucher
     +-- created-on?                               yang:date-and-time
     +-- expires-on?                               yang:date-and-time
     +-- assertion?                                enumeration
     +-- serial-number                             string
     +-- idevid-issuer?                            binary
     +-- pinned-domain-cert?                       binary
     +-- domain-cert-revocation-checks?            boolean
     +-- nonce?                                    binary
     +-- last-renewal-date?                        yang:date-and-time
     +-- prior-signed-voucher-request?             binary
     +-- proximity-registrar-cert?                 binary
     +-- agent-signed-data?                        binary
     +-- agent-provided-proximity-registrar-cert?  binary
     +-- agent-sign-cert?                          binary
]]></artwork></figure>

</section>
<section anchor="voucher-request-prm-yang-module"><name>YANG Module</name>

<t>The following YANG module extends the <xref target="RFC8995"/> Voucher Request to include a signed artifact from the registrar-agent (agent-signed-data) as well as the registrar-proximity-certificate and the
agent-signing certificate.</t>

<figure><artwork align="left"><![CDATA[
<CODE BEGINS> file "ietf-voucher-request-prm@2022-07-05.yang"

module ietf-voucher-request-prm {
  yang-version 1.1;

  namespace "urn:ietf:params:xml:ns:yang:ietf-voucher-request-prm";
  prefix vrprm;

  import ietf-restconf {
    prefix rc;
    description
      "This import statement is only present to access
       the yang-data extension defined in RFC 8040.";
    reference "RFC 8040: RESTCONF Protocol";
  }

  import ietf-voucher-request {
    prefix vcr;
    description
      "This module defines the format for a voucher request,
          which is produced by a pledge as part of the RFC8995
          onboarding process.";
    reference
      "RFC 8995: Bootstrapping Remote Secure Key Infrastructure";
  }

  organization
   "IETF ANIMA Working Group";

  contact
   "WG Web:   <http://tools.ietf.org/wg/anima/>
    WG List:  <mailto:anima@ietf.org>
    Author:   Steffen Fries
              <mailto:steffen.fries@siemens.com>
    Author:   Eliot Lear
              <mailto: lear@cisco.com>
    Author:   Thomas Werner
              <mailto: thomas-werner@siemens.com>
    Author:   Michael Richardson
              <mailto: mcr+ietf@sandelman.ca>";

  description
   "This module defines the format for a voucher-request form the
    pledge in responder mode. It bases on the voucher-request
    defined in RFC 8995, which is a superset of the voucher itself.
    It provides content to the MASA for consideration
    during a voucher-request.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.

    Copyright (c) 2021 IETF Trust and the persons identified as
    authors of the code. All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Simplified BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC xxxx; see the
    RFC itself for full legal notices.";


  revision 2022-07-05 {
    description
     "Initial version";
    reference
     "RFC XXXX: BRSKI for Pledge in Responder Mode";
  }

  // Top-level statement
  rc:yang-data voucher-request-prm-artifact {
    // YANG data template for a voucher-request.
    uses voucher-request-prm-grouping;
  }
  // Grouping defined for future usage
  grouping voucher-request-prm-grouping {
    description
      "Grouping to allow reuse/extensions in future work.";
    uses vcr:voucher-request-grouping {

      augment voucher {
        description "Base the voucher-request-prm upon the
          regular one";

        leaf agent-signed-data {
          type binary;
          description
            "The agent-signed-data field contains a JOSE [RFC7515]
             object provided by the Registrar-Agent to the Pledge.

             This artifact is signed by the Registrar-Agent
             and contains a copy of the pledge's serial-number.";
        }

        leaf agent-provided-proximity-registrar-cert {
          type binary;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             The first certificate in the registrar TLS server
             certificate_list sequence (the end-entity TLS
             certificate; see RFC 8446) presented by the
             registrar to the registrar-agent and provided to
             the pledge.
             This MUST be populated in a pledge's voucher-request
             when an agent-proximity assertion is requested.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile
             RFC 8446: The Transport Layer Security (TLS)
             Protocol Version 1.3";
        }

        leaf-list agent-sign-cert{
          type binary;
          min-elements 1;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             This certificate can be used by the pledge,
             the registrar, and the MASA to verify the signature
             of agent-signed-data. It is an optional component
             for the pledge-voucher request.
             This MUST be populated in a registrar's
             voucher-request when an agent-proximity assertion
             is requested.
             It is defined as list to enable inclusion of further
             certificates along the certificate chain if different
             issuing CAs have been used for the registrar-agent
             and the registrar.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile";
        }
      }
    }
  }
}

<CODE ENDS>
]]></artwork></figure>

<t>Examples for the PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                        Description                       Reference
 pledge-voucher-request     create pledge-voucher-request     [THISRFC]
 pledge-enrollment-request  create pledge-enrollment-request  [THISRFC]
 pledge-voucher             supply voucher response           [THISRFC]
 pledge-enrollment          supply enrollment response        [THISRFC]
 pledge-cacerts             supply CA certificates to pledge  [THISRFC]
 pledge-status              query pledge status               [THISRFC]
 requestenroll              supply PER to registrar           [THISRFC]
 wrappedcacerts             request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>The credential used by the registrar-agent to sign the data for the pledge should not contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (a "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could be easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>TODO: other threads?</t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due to state creation on the pledge (the pledge may produce a voucher, and refuse to produce another one).
One mitigation may be that the pledge does does not limited the number of voucher requests it creates until at least one has finished, or a single onboarding state may expire after a certain time.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration)
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns on misusage of an registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rouge pledge at a later point in time.
As "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agents signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this his product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain may be returned if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the comissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in section <xref target="voucher-request-prm-yang"/> is bases on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
Therefore similar considerations as described in <xref target="RFC8995"/> section 11.7 (Security Considerations) apply.
The YANG module specified in this document defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.
The use of YANG to define data structures via the "yang-data" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason these guidelines do not follow the template described by <xref target="RFC8407"/> section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, and Hendrik Brockhaus for their input and discussion on use cases and call flows.
Special thanks to Esko Dijk for the in deep review and the improving proposals.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC5280' target='https://www.rfc-editor.org/info/rfc5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author fullname='D. Cooper' initials='D.' surname='Cooper'><organization/></author>
<author fullname='S. Santesson' initials='S.' surname='Santesson'><organization/></author>
<author fullname='S. Farrell' initials='S.' surname='Farrell'><organization/></author>
<author fullname='S. Boeyen' initials='S.' surname='Boeyen'><organization/></author>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<author fullname='W. Polk' initials='W.' surname='Polk'><organization/></author>
<date month='May' year='2008'/>
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC7030' target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference anchor='RFC7515' target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8366' target='https://www.rfc-editor.org/info/rfc8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<date month='May' year='2018'/>
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor='RFC8610' target='https://www.rfc-editor.org/info/rfc8610'>
<front>
<title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
<author fullname='H. Birkholz' initials='H.' surname='Birkholz'><organization/></author>
<author fullname='C. Vigano' initials='C.' surname='Vigano'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2019'/>
<abstract><t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8610'/>
<seriesInfo name='DOI' value='10.17487/RFC8610'/>
</reference>



<reference anchor='RFC8995' target='https://www.rfc-editor.org/info/rfc8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>


<reference anchor='I-D.ietf-anima-jws-voucher'>
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname='Thomas Werner' initials='T.' surname='Werner'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='11' month='July' year='2022'/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that has been signed using a Cryptographic Message
   Syntax (CMS) structure.  This memo introduces a variant of the
   voucher structure in which CMS is replaced by the JSON Object Signing
   and Encryption (JOSE) mechanism described in RFC7515 to better
   support use-cases in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, MIME types are
   registered and examples are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-jws-voucher-04'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-jws-voucher-04.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-netconf-sztp-csr'>
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Sean Turner' initials='S.' surname='Turner'>
         <organization>sn3rd</organization>
      </author>
      <date day='2' month='March' year='2022'/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netconf-sztp-csr-14'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-netconf-sztp-csr-14.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-anima-rfc8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin' initials='M.' surname='Pritikin'>
         <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert' initials='T. T.' surname='Eckert'>
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma' initials='Q.' surname='Ma'>
         <organization>Huawei</organization>
      </author>
      <date day='31' month='January' year='2022'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON
   document that has been signed using a Cryptographic Message Syntax
   (CMS) structure.  Other YANG-derived formats are possible.  The
   voucher artifact is normally generated by the pledge&#39;s manufacturer
   (i.e., the Manufacturer Authorized Signing Authority (MASA)).

   This document only defines the voucher artifact, leaving it to other
   documents to describe specialized protocols for accessing it.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-00'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-rfc8366bis-00.txt' type='TXT'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2986' target='https://www.rfc-editor.org/info/rfc2986'>
<front>
<title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
<author fullname='M. Nystrom' initials='M.' surname='Nystrom'><organization/></author>
<author fullname='B. Kaliski' initials='B.' surname='Kaliski'><organization/></author>
<date month='November' year='2000'/>
<abstract><t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process.  The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2986'/>
<seriesInfo name='DOI' value='10.17487/RFC2986'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC7252' target='https://www.rfc-editor.org/info/rfc7252'>
<front>
<title>The Constrained Application Protocol (CoAP)</title>
<author fullname='Z. Shelby' initials='Z.' surname='Shelby'><organization/></author>
<author fullname='K. Hartke' initials='K.' surname='Hartke'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2014'/>
<abstract><t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t><t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t></abstract>
</front>
<seriesInfo name='RFC' value='7252'/>
<seriesInfo name='DOI' value='10.17487/RFC7252'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC8407' target='https://www.rfc-editor.org/info/rfc8407'>
<front>
<title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<date month='October' year='2018'/>
<abstract><t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t></abstract>
</front>
<seriesInfo name='BCP' value='216'/>
<seriesInfo name='RFC' value='8407'/>
<seriesInfo name='DOI' value='10.17487/RFC8407'/>
</reference>



<reference anchor='RFC8792' target='https://www.rfc-editor.org/info/rfc8792'>
<front>
<title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='E. Auerswald' initials='E.' surname='Auerswald'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the &quot;single backslash&quot; strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the &quot;double backslash&quot; strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t></abstract>
</front>
<seriesInfo name='RFC' value='8792'/>
<seriesInfo name='DOI' value='10.17487/RFC8792'/>
</reference>



<reference anchor='RFC9052' target='https://www.rfc-editor.org/info/rfc9052'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need to be able to define basic security services for this data format.  This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  </t><t>This document, along with RFC 9053, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='STD' value='96'/>
<seriesInfo name='RFC' value='9052'/>
<seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>



<reference anchor='RFC9110' target='https://www.rfc-editor.org/info/rfc9110'>
<front>
<title>HTTP Semantics</title>
<author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'><organization/></author>
<author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'><organization/></author>
<author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'><organization/></author>
<date month='June' year='2022'/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name='STD' value='97'/>
<seriesInfo name='RFC' value='9110'/>
<seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>



<reference anchor='RFC9238' target='https://www.rfc-editor.org/info/rfc9238'>
<front>
<title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='J. Latour' initials='J.' surname='Latour'><organization/></author>
<author fullname='H. Habibi Gharakheili' initials='H.' surname='Habibi Gharakheili'><organization/></author>
<date month='May' year='2022'/>
<abstract><t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t><t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t></abstract>
</front>
<seriesInfo name='RFC' value='9238'/>
<seriesInfo name='DOI' value='10.17487/RFC9238'/>
</reference>


<reference anchor='I-D.ietf-anima-brski-ae'>
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname='David von Oheimb' initials='D.' surname='von Oheimb'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Steffen Fries' initials='S.' surname='Fries'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Hendrik Brockhaus' initials='H.' surname='Brockhaus'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Eliot Lear' initials='E.' surname='Lear'>
         <organization>Cisco Systems</organization>
      </author>
      <date day='3' month='June' year='2022'/>
      <abstract>
	 <t>   This document enhances Bootstrapping Remote Secure Key Infrastructure
   (BRSKI, RFC 8995) to allow employing alternative enrollment
   protocols, such as CMP.

   Using self-contained signed objects, the origin of enrollment
   requests and responses can be authenticated independently of message
   transfer.  This supports end-to-end security and asynchronous
   operation of certificate enrollment and provides flexibility where to
   authenticate and authorize certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-brski-ae-02'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-brski-ae-02.txt' type='TXT'/>
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="April"/>
  </front>
  <format type="PNG" target="https://raw.githubusercontent.com/anima-wg/anima-brski-prm/main/pics/brski_prm_overview.png"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC6125' target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<author fullname='J. Hodges' initials='J.' surname='Hodges'><organization/></author>
<date month='March' year='2011'/>
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".</t>

<figure title="Example Pledge Voucher Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiNW9Cb3UvUndqNCtkTUo3QlErVWp0Zz09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDctMTJUMDQ6NDg6NTYuNTYzWiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
  "signatures":
    [{ "protected":
         "eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVNU1Bb0dDQ3\
FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEthVzVuU2\
1sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ0FYRFRJeE\
1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q1FZRFZRUU\
dFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZRFZRUUZFd2\
93TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtbGpaVEJaTU\
JNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjRUVYdzdyVW\
VhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2TXgyWStTTW\
dROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxaGMyRXRkR1\
Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CYUFGRlFMak\
56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd0\
1DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCdT\
N3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnWENtSkxUek\
VsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sInR5cCI6InZvdW\
NoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
      "signature":
        "n1rKu3odtbq-rIPHlE08BU-gSf0vKFDtiUL5Q2j8y1BmDXvj4SPUYscjdiu\
BxYF7SzsdECCfpPiL_jLbwQiG1Q"
    }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".</t>

<figure title="Example Registrar Voucher Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsImlkZXZpZC1pc3N1ZXIiOiJCQmd3Rm9BVVZBdU0zTS85TCtTaTZORENPRGtUbC\
svQnhocz0iLCJub25jZSI6IjVvQm91L1J3ajQrZE1KN0JRK1VqdGc9PSIsInByaW9yLX\
NpZ25lZC12b3VjaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbT\
FNV0ZwMlpGZE9iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYV\
VrMlpYbEthR016VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1\
pFaHJhVXhEU25wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFVMUVSWGxOZWxFeFRtcG\
pORTlUU1hOSmJUVjJZbTFPYkVscWIybE9WemxEWWpOVmRsVnVaSEZPUTNSclZGVnZNMU\
ZzUlhKV1YzQXdXbm93T1VscGQybFpNMHBzV1ZoU2JGcERNWFppYVVrMlNXcEpkMDFxU1\
hSTlJHTjBUVlJLVlUxRVVUWk9SR2MyVGxSWmRVNVVXWHBYYVVselNXMUdibHBYTlRCTV\
dFSjVZak5hY0ZwSFZtdE1XRUo1WWpOb2NHSlhiREJsVXpGNVdsZGtjR016VW5sWldFbD\
BXVEpXZVdSRFNUWkphekZLVTFWSk1HRnJUa1JSVm14d1dqQkdNMU5WU2tKYU1HeElVVl\
pvV2s1NlNtbFpiSEJPVVZjNVNGRXdUbmhTTVU1T1RrUnNRMUZWTVVSVVZWSldaVVZXTm\
xGV1NrTmFNRFZYVVd0R2RsUlZUbkpOVkZaU1lteGFObGxXWXpGaVIwMTZWRmhvUlZaRl\
JrMVJiV1JQVm10S1Fsa3dNVU5TYXpWM1drVmtWbVZGVWpaUlZUVkRXakExVjFGclJrNV\
VWVXB6VlcxNGFrMHhTa1ZWVmxKQ1dsVmFNMDFJYkU1U1JWWTFWRlZTYW1Rd05YRlNWRk\
pPVmtWd2FGSnVZM2RsYXpGRlVsaHNUbEpIVGpOVWJYQkdUa1V4VlZOdFJrNVNSRkkwVW\
xod1FsVnJTbTVVYkZwRFVWYzVUbEV5YzNoT1ZrWjFWbTV3YUZaNlZuTlplazVPWlVWU1\
ZWRlZlRU5hTURWWFVXdEdhbFJWU2tkVWJrSnJVakZXTkZJd1VrSldNRXB1Vkd4YVExRl\
ZNVTVTUkVKVFpHMUtXRkp1UW1saVJYQnpWMnBLYzJWdFVrbFRiV2hxWVd0S1lWUlZTaz\
VTTUVvMVkxVmtWRlJVVVRWUlYyUkdVakJPUkdOVlpGUlVWRkUxVVZoa1JsTkZSWGRUVl\
VaRFVXMXplRTVyYzNaaFZHTTFZakZLY2xONlZscFpiVlpSV25wb1ZsVXhTVFJNTTFaNl\
RWZFNVVlpYYkdGVFJURXdZakowVkZwSVJreFdlbFp0WW14a2VsRnRVWEpqVmtwTlRqRm\
tVMXB0V214V01uUTFXakpXYVdJd2NHMVRWM2h6WkZoS2FtRlVTVEZrTWpWdllWVTVWMU\
V3WkhGYVdIQkRUbFV4UTAxRlpFSk5WbFpyVTJ4R1VsWXdNVU5WVldSRVVUTk9TRkZXUm\
xaU2Ewb3pWRlZLUTFveVpIbFJiV1JHVW10S1Vsa3dVa2xTUlVaUVVXMWtUMVpyYUZKUF\
JVcENXbXBvUmxGclJrNVJNRWt3VVZoa1ZGRldiRVZXYkVsM1ZXdEtSbEpZWkZGT1JXeH\
JXVEl4VjJKdFJsbFVha0pxWWxWYU5WUkdhRk5pUjAxNlZWaFdhazF0ZUhOWmJHUlhaRm\
RPTlUxWGJHdFJlbFl4VjJ4b1ZGRXdhSFZUYlhoaFRXMTRObHBGYUV0aFIwNXdUVlJDWV\
ZkRk5IZFViV3N4WlcxR1dGWnVVbUZXZWxZMlZFWmtTMDFGZUhST1YzaHJVa1ZHVEZGdF\
pHNWpWMmh5WVdzNVVWVldSa1ZSVjJSUFUxVkdSVkZyV2tKaFZVbzBZa2RTUTJGR2NIaE\
5SVll5VGxWd1RVMXNRbmxXTUU0d1pWWk5NbUZGVWxwV2VrWTFVVEE0ZGxWdFJqRlpia0\
pFVGpBeGFGTlZVbTVUVjJoQ1ZFWk9TMWx0WkUxaWJXUnZXVzFLUWxwNlFtdFpNV1JIVm\
xaYWRrd3laRWhVYWtGMllXNWtObE5zYjNkVk1uZDVZVVJTTkZOV2FISk5VMGx6U1cxR2\
JscFhOVEJNV0U1d1dqSTFiRnBETVd0WldGSm9TV3B2YVZwWWJFdGtNV3haWWtoT2FVMX\
JXbkpUVjNCMllWWndXV0pGZEdwU2JrSmFWbGN3ZUZSV1pFZGpSRXBoVW0xU1VGbHFSbm\
RYVms1WlZXMXdhVlpzYnpCWGExcHJWakpXZEZWclVrNVhSMUp4V1d4U1FrMXNaRmRhUj\
NScFVqQndNVlpXYUZOaGF6RjBaVWhXV21KVVJsaFpWRUkwVjBaV2RHRkhkRk5OUmxwM1\
ZrUkpNV1Z0UmxkaE0zQlVZbGhvWVZZd1drdGpNV1J5VkZob2EySlZjSGRWTVZKaFUyMU\
djbUpFVGxWV00wSkxXa1ZWZUZKV1ZsbFZhelZvWWtoQ1YxWkdWbE5XYXpWeVRWVldXbV\
ZzY0ZCVmExWlhUVlpTY2xWc1NrOVNiVkozVlRGb1QxTnRTbkpPV0U1YVRXcEdlbGxWWk\
V0U1JURlpWbTEwVjJWclduZFdNbmh2VTIxR1ZrOVlRbFJYUjFKUFZtdFdjMDVzVW5KVm\
JGcE9ZWHBWTWxkdWNGZFRiVXB4VWxSV1NtRllaSEJaZWtwelltMUtkRkpxUW10WFJYQn\
pXVE5zU2s1c1kzcGpNbXhxVTBWd01scEZaRmRoYlZKSVZtMTBTbUZ0T1hCWGJHaHpVek\
pPZEZKc2FGWldNbmhSV1ZaV2QxZHNhM2RoU0dScVRWWktWMXBGVWxOaFZrNUdVMnRPVl\
dKWVFuWlpWM2hoVmxaYWNscEdXbGRXUlZwaFZtMTRiMWxYVWxkVWJHUldWa1Z3VjFZd1\
pFNU9WazVZWWtST2FGWnRlRmxhVldNeFUyMUdkRTlZUWxaaVJuQlBXbFpWTVZaV1pGaG\
lSekZXVlRCc2VsTlhOVTlqUm05NVRsZG9hMU5HV2pWWGJFNUtUbXRzY2xremNGZE5NbW\
hJVlRCa1YwMUdaRWRSVkZKcFVqTm9WRlp0YTNkT1YxSllVMjVzVlZKdGVIaFZNalZoVl\
d4c1ZWZHRXbXhWZWtaU1dWZDRSMWRyTlVaT1YyaHJUVmM0TVZrd1drdGhSMGw1WlVVNV\
ZHSlViRVpVYlRGVFlrWndXR1JJVmxSV2FteEhWakJrWVdWdFZsZFhiRkphWW0xTk1GWl\
VRazlPYkZKWFkwVXhhV0ZyU205VlZtaFhZakpHVmxwR2NGVmhhMHBUVTFjMGVGcEhXbE\
pRVkRCcFRFTkthRm95Vm5Wa1F6RjZZVmRrZFV4WFRteGpibEZwVDJ4emFWUlZiRXBSYW\
taRlVUQk9RbGRJUm01UldHUktVV3RHYmxOVlZscGlWMUV3VkRGU1FsTXdTbTVhTTBadl\
lUSndVRlZHUmxKU1JVWnhVVk4wVGxWck1UTlNWa1phVWtaYVVsVlZkRVZSV0VKUFdsWl\
dTMDFYVFhsaVNGWmhWMFUxTmxSV1JYZGtNRTR6VjFWU1YxVldSa2xTUlVaVFZrZEdXVl\
Z0ZUU1VmJXUXpVbTFrV2xKR1dsSlZWVkpGVVZSc1ZsZHNhRTlOUmxaSlZtNXdhRkpVUm\
pKWGEyUlhZekZGZDFKWVpFbGhSMDVQVkZkd1NtUXdOVVZUVkVwT1VrWkZkMVJYY0U1bG\
JHUnZXVEExVG1WcmJETlVhMUpLVFdzeFJWVlVRazVoYXpFMlZqSndRazlWTVZOVVdHUk\
dWVlpzUlZac1JsSlRNRkpDWTBVMWJGWlZiM2haZWtwelpGWndXVlJ1Y0U1VlZFSXpVVE\
5rV2xKR1dsSlZWV2hGVVZaS1ZWbFdhRk5pUlRGVFdUTmtSMVZXYkVWV2JFWlNVa1ZTUW\
s1V1RtRldNbEozV1hwT1UyVldiRmxUYTBwaFRXeGFNVnBGVWtOWGF6RkRWRlZrUTJWWV\
JraFZNREF3VDFWR2JsSlZaRVJSTTBaSVZUQXdNRTlWUmpOU1ZXaENUVVZzUWxGclpEUm\
lTRXBQV20xdmVtRldTbWxPZVRsRFZWYzVhMVo1Y3pGWFYyeDJWRE53YjBzeWNFcGtTR3\
g0WkZaS1NsUjVPVmhsYW1SYVlqRmplbUZZWkVWWmVrNUhaVWRXTTFSR1dtMWxhMDU1VG\
xVMU1sSkVSWHBYYlVaSFdXcGtiV050Um5WTE0xRTFZak5TV2s1V1pFMWhSVzh5WVd4d0\
5sRnRlRTVSVkZKSVVWUkdWbHBGVWpOU1ZVbDJaREZHUmxGWVpFcFRSMlJGVVZkYVExb3\
dOVmRUUms1T1VsVmtSVkZXWkc1UmJFb3lZakZSZUdSWFVteE5iVmt5VkVWV1VtRkdWVE\
5UUldoeFN6TmFTMHd5VVROVFdIQkNXa1ZLYmxSc1drbFZWRkpHVW0xa1VsWldhSGRsYl\
hoT1V6Tm9jMk5GUlRKUFIwNVdUbFZhVWxSV2FGWmtiVFZLVmtSYVVtUXpaRVprTVd4Rl\
ZteEpkMkpGU2tKa00yUkVXakZzU2xNelpGcFJhMHBTVmxWb1FtUXdiRE5STW1SYVUxVj\
BkbGRyYkRaaGFrSkdVVmhrU2xKR1RrSlJXR1JUVlZWc2JsbDZTalZPYm1oMlZETlNkbF\
ZWU25OVGJrNXVZa1U1VFUxV1dqUlRSV1IyWXpGU05XTkZWbmhWYlZvMlRVWkdNazVHY0\
VaVlNGa3daREJPU2xWVlRsZGxWMGw1VW1wc05sWnFUblZQVkZWeVlqSjRibHByV2t0YU\
1YQlZWakJXTms1SFVsUlpWVmw2WVVod1UxVlhTWHBYYmxaRFRXcHNVbEJVTUdsTVEwcE\
9VMVZzUTJWclVrUlJNRVpaVWpKa1FtUXdiRU5SVjJSS1VsWm9XV0ZyYUhkU1JVWk1VVz\
FrYm1OWGFISmhhemxSVlZaR1JWRlhjRUpOVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW\
1ORk5XeFdWVzk0V1hwS2MyUldjRmxVYm5CT1ZWUkNNMUV6WkZwU1JscFNWVlZvUlZGV1\
NsVlpWbWhUWWtVeFVrOUlaRVZWVm14RlZteEdVbEpGVWtKWGJGWmhWMFUwZDFWVVFrWm\
tNR2h2V1RBMVRsWkhkRE5VTVZKR1pVVXhWVkZZWkZCU1JUQjVWakpvYWxSck1YRmhNMl\
JRVmtWV05GUldVa0prTURsRlZGUktXR0ZyUlhKVVZrcE9aREJXVWxkVlVsZFZWa1pNVW\
tWR2QxUnRWbFpUYWtacVRXMTRNVmRzYUU5bGF6RlNUVWhrUkdReGJFVldiRVpTVTBWU1\
FsVnNVbWhYUmtwelZGWktibVF3V201WFZWSlhWVlpHUlZKRlJUVldWbkJaVkdwQ1ZsTk\
dXalpaVlZWNFpHeHdTRlp1VGxKTlJWWXpWakZTUWxaRlNtNVpNMFp2WVRKd1VGVkdSa3\
BSYTBwdVdqTkdiMkV5Y0ZCVlJrWk9VV3RLTTFSclRrSlJWbEp6VW5wQ2JXUXhVWHBOTW\
psc1pXeHZlR1J0ZEVsVlYwcHNaRWRXYVdKWGIzSlJiVGxYU3pGd1IyTXljR3BhYkVZel\
RXeFNVR0V3Y0ZGaFJUbHlWREphUWxsdVZUVlpiRTE0WTFad2NFOUliR2hTVmxrMFlqSl\
dlVk15ZDNaT2JIQlpXVzFhTkZReU1VTmhia3BUWTIxT1dXSjZTbHBrTVhCRlVWWk9RMW\
93TlZkVFJrcE9VV3RHYlU5RlZrUlNSVVpJVVZaR1NVd3dSbTVTVlVaT1VWUlNTRkZVUm\
xaYVJWSXpVbFZKZG1ReFJrWlJXR1JLVVRCS1JWRlhXa05hTURWWFUwWk9UbEpWWkVWUl\
ZtUnVVV3hTZGxkcmJFNWxiRVpyWXpCUmRtRnBPSEphTVdkMlRqSk9RMU51Vm1wVFF6bF\
pZbGR3UWxwRlNtNVViRnBKVlZSU1JsSnRaRkpXVjBreVVsUnNhV0pzYURCaWFYUndaVV\
ZXU2xack9UUmxSRkYyWTI1c2JVMHlWalZVV0dSRVdqRnNTbE15T1dGVFdIQnhUVVZXUW\
1Rd2JFVlZNVVpDWkRGS2JsTlhhRUpWUnpWRFRVaGplRlJyVGpGamJXaE9aVVZ3TTJReV\
duRmxhbVJ1VWtkc2NHVkhkRlpYVlhoUlZURnZOVnBWTkRWaE1qbHZWR3hHVm1GclJuQl\
NWVVl6VGtack0ySklValJXTW14UlpEQjBNRTFWYnpWaWJYQTFXbXRTVDJKRVZrNWtWVl\
pGVVcxc2RHVkdTWHBSTVdoMlYydDBTRlZZU2xaUVUwcGtabGd3SWl3aWMybG5ibUYwZF\
hKbGN5STZXM3NpY0hKdmRHVmpkR1ZrSWpvaVpYbEtORTVYVFdsUGJITnBWRlZzU2xGcG\
RGVlJNRTVDV1ZWT2JsRllaRXBSYTBadVUxVmtRbGRITlZkaGJrNVdUbFV4UW1Jd1pFUl\
JNMFpJVlRBd01FOVZTa0pVVlU1T1VrUkNORkV6Y0VKVGEwcHVWR3hhUTFGV2JGVlJWM1\
JIVldzeFUxWllaRVprTVd4RlZteEdVbE13VWtKbFJYUm9WbnBXZFZVeU1YTmtWbTkzVk\
c1YWFtSnJSalJTYm5CQ1ZtdEtibFJzV2tOUlZURk9Va2QwZDJOSFNuUmFSWFJvVm5wV2\
RWWnJaRmRsYlZKR1ZHdEtUbEV3UmxsU1JsSktaVVV4UlZkWVpFOVNSVVY0Vkd0U1dtVk\
ZOVWRpTVd4RlpXMXpNVlF4VW5KbFJURnhWRmhvVG1Gck1IaFVNVkpXVGxaa2NWRnNUaz\
VWV0U0elVURkdXbEpHV2xKVlZXUkdaREJ3UTFaV1VrWldhekZEVkZWa1FrMVdWa1pSTW\
1RelZGWk9kR0pJVm1GTlNFSjNXVzB4YTFKSFNYcFRibVJPVldzeE0xSldSbHBTUmxwU1\
ZWVmFSbVF5T1ROVVZsSktaV3MxUlZaVVNrOWxiV014VkZaS2FtUXdXbEpYVlZKWFZWWk\
dSVkpGUlRGVE1rWllUbGMxVkdKWGVERlhha0pUWWtkU2RHSkhjR0ZXUlVwaFZGVktUbE\
l3U2pWalZXUlVWRlJSTlZGWFpFWlNNRTVFWTFWa1ZGUlVVVFZSV0dSR1UwVkZkMU5WUm\
tOUmVtTTFZa2RzYUZWdFRrTmhiSEJxVWxWV1dXUjZaSGxXVjFab1pHNVNTRk5yUmpGVF\
JGSjNZWHBTU2s1RVNqSlpWVXBPWXpGVmVFMVhiRTFTUlU1RVZFZDBWMkZJVWxaV2FrbD\
RZbGhhYUZNd1RqSlVXR2Q1VjFOMFZGUlhaRkpQUjFwdFpEQjNlVTB6YjNwV1JXeFhVV3\
hrY1ZwR1VrTmxhekZFWXpCa1JGRXpUa2hSVmtaV1VtdEtNMUpYWkVOUmFtaFlVMFpqZU\
dGSFRYbFNXRkpyVWpGYU5scEZUVEZsYlVaWVZtNVNZVlo2VmpaVVJtUkxUVVY0ZEU1WG\
VHdFNSemd4Vkd0U1VtVnJNVU5QUldSQ1RWWldhMU5ZWkZKWFZURkRXVlZHUjFKc1JrMW\
hhelUyVlVaM2RsVXhkM1poTWpreFlXeEdNMkZ0WXpGU1ZGWnRaRzVrYWxkWFNrNVJhek\
ZJVVZSR1ZscEZjRkpWVlRGT1VWYzVTRkV3VG5wU01FWlNWbFZhUTJRd01VUlVWVVV3VW\
pCRmVGWlhVa1ZrTUZaRFdFTTVNMVZWVmtKa01HeEpXakJTUWxNd1NtNWFNMFp2WVRKd1\
VGVkdSbEpTUlVadVZHdG9RbEpGU2taUlYyeERaRlJPTTFWclNrMWpNSEJPVlVSV2VsUl\
VRVE5OUldkeVZsVmFlV1ZWTlZaT2JXUk1aV3Q0VUZWdFRrZGxWa3BUVkRKNGVHTlZhSE\
JhTUd4dVYwVk9kRk5yZUZWbGExWnpaR3RSZVdOSE9VeE9iVkkwVG0xM2VGaERPVEZsVn\
pGVlltMUtVbEpGVW0xVGJYaG9aRWhXV1Uxc1NuWlVNRlU1U1d3d2MwbHVValZqUTBrMl\
NXNWFkbVJYVG05YVdFbDBZVzVrZWtzeWNIcGlNalJwVEVOS2FHSkhZMmxQYVVwR1ZYcE\
pNVTVwU2praUxDSnphV2R1WVhSMWNtVWlPaUp1TVhKTGRUTnZaSFJpY1MxeVNWQkliRV\
V3T0VKVkxXZFRaakIyUzBaRWRHbFZURFZSTW1vNGVURkNiVVJZZG1vMFUxQlZXWE5qYW\
1ScGRVSjRXVVkzVTNwelpFVkRRMlp3VUdsTVgycE1ZbmRSYVVjeFVTSjlYWDA9IiwiY3\
JlYXRlZC1vbiI6IjIwMjItMDctMTJUMDQ6NDk6MDcuMTM0WiIsImFnZW50LXNpZ24tY2\
VydCI6WyJNSUlCMURDQ0FYcWdBd0lCQWdJRVltZDRPVEFLQmdncWhrak9QUVFEQWpBK0\
1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1SZ3\
dGZ1lEVlFRRERBOVVaWE4wVUhWemFFMXZaR1ZzUTBFd0hoY05Nakl3TkRJMk1EUTBNak\
16V2hjTk16SXdOREkyTURRME1qTXpXakE5TVJNd0VRWURWUVFLREFwTmVVSjFjMmx1Wl\
hOek1RMHdDd1lEVlFRSERBUlRhWFJsTVJjd0ZRWURWUVFEREE1U1pXZHBjM1J5WVhKQl\
oyVnVkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCR3hsck5majNpUm\
I3L0JRb2RXKzVZaW9Pemgrakl0eXF1UklPL1d6N1lvVzNpd0RjM0Z4ZXdMVmZ6Q3I1Tn\
ZEMTNaYUZiN2ZyYW4rdDlvdFk1V0xoSjZqWnpCbE1BNEdBMVVkRHdFQi93UUVBd0lIZ0\
RBZkJnTlZIU01FR0RBV2dCUnZvVDF1ZGUyZjZMRVFoVTdISGordkovZDdJekFkQmdOVk\
hRNEVGZ1FVWHB6bE1LeGxwQTY4Y1U1RlFNWFV2bklUNlF3d0V3WURWUjBsQkF3d0NnWU\
lLd1lCQlFVSEF3SXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWdjMnk2eG9PdG9RQmxKc2\
dsT0wxVnhIR29zVHlwRXFSZnowUXY0WkVQdjR3Q0lRQ1Z5YjJGOXpWM245NStvbGdmRk\
pnWlRXRXo0ZFNhRjNoelJRYjNadUIyOVE9PSIsIk1JSUJ6RENDQVhHZ0F3SUJBZ0lFWF\
hqSHBEQUtCZ2dxaGtqT1BRUURBakExTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek\
1RMHdDd1lEVlFRSERBUlRhWFJsTVE4d0RRWURWUVFEREFaVVpYTjBRMEV3SGhjTk1Ua3\
dPVEV4TVRBd09ETTJXaGNOTWprd09URXhNVEF3T0RNMldqQStNUk13RVFZRFZRUUtEQX\
BOZVVKMWMybHVaWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWl\
hOMFVIVnphRTF2WkdWc1EwRXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0\
FBVGxHMGZ3VDMzb2V6WjF2a0hRYmV0ZWJtaitCb1YrWkZzamNmUXcyVE9rSlBoT2tPZk\
FidTliUzFxWmk4eWFFVjhvZXJLbC82WlhiZnhPbUJqclJyY1hvMll3WkRBU0JnTlZIUk\
1CQWY4RUNEQUdBUUgvQWdFQU1BNEdBMVVkRHdFQi93UUVBd0lDQkRBZkJnTlZIU01FR0\
RBV2dCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFkQmdOVkhRNEVGZ1FVYjZFOW\
JuWHRuK2l4RUlWT3h4NC9yeWYzZXlNd0NnWUlLb1pJemowRUF3SURTUUF3UmdJaEFQbk\
IwdzFOQ3VyaE14Snd3Zmp6N2dEaWl4a1VZTFBTWjllTjlrb2hOUVVqQWlFQXc0WTdsdH\
hXaVB3S3QxSjluanlmRE5sNU11RURCaW14UjNDWG9aS0dRclU9Il19fQ",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQm96Q0NBVXFnQXdJQkFnSUdBVzBlTHVJRk\
1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQU\
xCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweE9UQTVNVE\
V3TWpNM016SmFGdzB5T1RBNU1URXdNak0zTXpKYU1GUXhFekFSQmdOVkJBb01DazE1UW\
5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhMakFzQmdOVkJBTU1KVkpsWjJsem\
RISmhjaUJXYjNWamFHVnlJRkpsY1hWbGMzUWdVMmxuYm1sdVp5QkxaWGt3V1RBVEJnY3\
Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVQ2eFZ2QXZxVHoxWlVpdU5XaFhwUXNrYV\
B5N0FISFFMd1hpSjBpRUx0NnVOUGFuQU4wUW5XTVlPXC8wQ0RFaklrQlFvYnc4WUtxan\
R4SkhWU0dUajlLT295Y3dKVEFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNESERBT0JnTl\
ZIUThCQWY4RUJBTUNCNEF3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnWXIyTGZxb2FDS0\
RGNFJBY01tSmkrTkNacWRTaXVWdWdJU0E3T2hLUnEzWUNJRHhuUE1NbnBYQU1UclBKdV\
BXeWNlRVIxMVB4SE9uKzBDcFNIaTJxZ3BXWCIsIk1JSUJwRENDQVVtZ0F3SUJBZ0lHQV\
cwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bG\
MzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MH\
hPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXpBUkJnTlZCQW\
9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQm\
xSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCT2t2a1RIdT\
hRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDZcL1NjWTVQSmlidm\
dIVEIrRlwvUVRqZ2VsSEd5MVlLcHdjTk1jc1N5YWpSVEJETUJJR0ExVWRFd0VCXC93UU\
lNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSFwvQkFRREFnSUVNQjBHQTFVZERnUVdCQlRvWk\
lNelFkc0RcL2pcLytnWFwvN2NCSnVjSFwvWG1qQUtCZ2dxaGtqT1BRUURBZ05KQURCR0\
FpRUF0eFEzK0lMR0JQSXRTaDRiOVdYaFhOdWhxU1A2SCtiXC9MQ1wvZlZZRGpRNm9DSV\
FERzJ1UkNIbFZxM3loQjU4VFhNVWJ6SDgrT2xoV1V2T2xSRDNWRXFEZGNRdz09Il0sIn\
R5cCI6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
    "signature": "ZUUUwtjvbYfIteRb_9OUuh4WibxwpZLAHAlVAXNMSY1De6ub2U\
aOJrCam-OIrZ7-QguUJwm5VEHJ14NEdAWGOQ"
    }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".</t>

<figure title="Example Voucher Response" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2\
VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIj\
oiNW9Cb3UvUndqNCtkTUo3QlErVWp0Zz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDctMT\
JUMDQ6NDk6MDcuNjAyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0\
F3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMT\
VRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1\
JEUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RX\
pBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTk\
JnTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSU\
FCT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2\
NZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRX\
dFQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0\
JCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQk\
dBaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUU\
RHMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU\
1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeE\
thVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQj\
RYRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQT\
FVRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRU\
F3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQV\
RCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOF\
IwWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0\
dCSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSX\
pqMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU\
5FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2\
FFS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In\
0",
    "signature": "HFqpWjVKYn_cSLleTohzSygHbv_dYxz6opknJK5w_ZaLGroGym\
zBs2Ofk8DrX9zYiWZrVR7Y6HDcxY-aErEbiA"
    }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar EE certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Included examples for several objects in section <xref target="examples"/></t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar EE certificate domain CA</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge-voucher request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="voucher-request-prm-yang-module"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="uc2"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/> .</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="uc2"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="uc2"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="uc2"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="uc2"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y9+1obV7Yv+r+eojbZ32eUSDLgS2xW0t0YcELaNjRgO5fV
J6uQCqhYUqmrSmBiez3LfpbzZGfc5pxjzpolCcfpTu91+LpjkKrmfY77+I1+
v9+p83qcbSdPjk/+epBc5/VlcjTORhdZkk+T46yaFdNRVibPi1GWrNND/aPj
591OenZWZlfyHn7UGRXDaTqBpkZlel7386w+76fTfJL2z8rqTd6flZP+xoNO
WmbpdnI4y8q0zotplaTTUfI8naYX2SSb1p3ri+1k58XB853k9TedUVpDg1sb
W1udqoYHf07HxRQ+qct51slnJf1W1VsbG483tjrDtN5OqnrUmeXbnSSpi+F2
cucmq+7AH8NiMkuHtfugupmU2XmlPijK2v8EOpgWdX6eZyP4cFrQU3WZu2bS
eX1ZlNudPqwWvHgySJ6WeVbBc7wUJ3V2fp5N7adFCbM7yXGmVbLzDXxi1lE+
5B6yDHo4rOui/216Oe0f59OL5CFOIq9vtpPn82k+vKQ5jaCPO482v7z3mOc4
n9YlPPFNVk7S6Q18lE3SfIyLQuMYnOM4/lJxXwNYE3hkXubbyWVdz6rtu3ev
r68H6uu7Zmang+R1Vk6z0k7t9LKYpJX79F81tZrG0b+mcXzM1PYHybMsdRPb
H+dFbT6iWe3m1bBITm5gFSd6Gscw1jqHv9KqypIv7Sxep+NxXmXjcTa1U9n9
tv/o3sZ9PZUTuG2/ZuUYzjV8PLukk732xf3N5P795NGXj5LHcK7X3EzHMKS/
DHEsND0Z/vMBjSMtR1UxtZN4jh9l42Q3+JZ3CXrMxrCMyUlxXl/DjUxeF+Wb
ynU1GZZf4AX+S2UeHQxTvaBmPdXXdzvDAiaWn81rdSVgdffyX9641a3eFOYT
GsxBcQrvVfMx3O/hzWA6dqPI4NnBCJ79C+xI8NBVNp1neMsvymI+E5KBhw4p
TsLvv6M//oITGUBfH/BpIHDzs21+rH99cTegUJ1pAeerzq+o7eOnuw+2Hm3I
rw+/fLjlfr0nv365cc888OWDzQfy66ON++bTR/cePjS/Pty0nz5+TM8e9PcG
ilT+cl31r4r58DIrvW+nGS7Aeb/6tZ71h1UZebU8H2JXZ3m13cmn58E8th4/
MqN4uHV/04x468GWHaYb8f2NL82vXz42DzzesM8+3rTzeLx171FkMLygKfV+
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
KZ1uOvSOvvXHAU/qgnbRQiRIJ4hnx+tF5u7omowR4PSs1PZGI6nfgW6Na6kf
ORCLLw9a9ORqDkcQctnSy/yi8jGzudepntKJ94ynguBWkGCYI8s3nCOcvhJw
lIm/m6fDYkdh7Rwk9a9px13HS4+CEyW6N9GBQowI3AU3iMBpb/KxofW1kgvx
EC7/MfUfi1mwyo7+4csweflHGu6PN6sqXzoPvd0/ovjRXq/sA4j2sb8xRp/z
3+/Wk9tjOJfRWrDfwpvh3XQffojNtZnM//gBHzvRsJq2vM3DXnOo7xMvuktz
CEazWqvaTYO6RqOqZv7eTOf4/X/QdcdUop1uSN3O/vf7//wbeMo/svpLeMbT
eoVv0pfpev5qi3/T2flW4nfvLGJW92ZgvU/X8efte637/sP/vPpFTxW+QWvb
e1PT8yWyYGOqAGl8vhW1vS+0vSSzKbJO12oqkkbXd6tiY/SDus5/VhdFOBfV
+VVVOJ29/9tvBt78R0oHob9X0YBeU9efUldv//nLottX9PCKQRE314JfFxo8
19xSpYGey+f6NtjztztqaMrVi7qN9qqQcXPYuqnuRZfLnr+m0UvVdKbqOPq8
qaBKvTlfhX59D/pVVcLroiCqgvB8ey4Yc1G071Q87vT2m5vTqNKdtufrdLNZ
nNLt9vE6Lmd0Wf3P9X3v6YfV8hci001xxPbW588Yn2xJN8qru9Djq7m76Zze
MttXRbw83Y2teHxdQUDVu6tv6G7qJF7e2tz72Puo13Zy8Rvj9IrOzcXon6rW
UgsHf/TfW6v1c0kD0w5IUx73XA6qNZFY3QHftpsMwmxvl56t1yu6rzmtbxS/
atm5Hbe/4nvdy+99z1zr0ux1hcXrP52e1rtVvSJEeGUdGLufLupu1p7106/v
fzqbghri0++vinTWWu/0x9l2+vH0TuO3y3fSNbhtNbr1rClG33SALkwgmKov
lz9V+v1v7++p8nE92xc1ZzdU7IqKSDXVF67u5D7dfftf+P5dU1OZTLIt2Koe
0VZEuSrP0DjofElWdJ68Tu/1Gy4L26obIFSt2Tdm5fyl+oX/mFWqXU+rp7oZ
NGtbVcvt2hWvSl20gwCzK/FUqpDXtm6D5hnqVX/r0hTfN9OtXdc6UXa8bu76
JQCti5/M0suSq+1N0efHdH+r/aoucHCurvyqsELzzA1VC/gempw98vz4Dqx9
ekJJdflDXWnghJl1QSYgPbo+LeZo5d+bmnU0ek0p7Pc/r2e/nPtx0Xzjm+ef
tf1b9Yy+Qei6qIwq06OKQ7YXVBzq0kp1EaRnRM338KVXmYXzBRiqUtdujj/M
t817qWTg6zqF69nLKp+9LpNx0Z3ON925eMImIw9TVcKy2ammBtUCubhS/Loo
ZFOvQH0oazBNXTGyOSyn2Xq1JAv59f1htv34RkzvvI7pXRXT75v7q1l9fzWM
73zHdUG1R6lMUmO6hvHhbzcwgvo6FAqHdFUJpmFW1cPV1GqapXiwP4df131X
F6GrW9Dr+jF0cfyzuhe8rRb3qoxZPQYqxXJ727ssg0oViOg5lC7afnwzuijS
cYGYP7VI8tNFGZGLW/BPwKGfY2Izb40Lqbl7qwgHvK8gYkPXnuCtFBqp1B1V
HZkvVcG19fM5Guq/nZ4fn6+Yr5++JGqm6kq2Q3Gq5kOUTZWWbJ7y+/XgnijZ
NeohPn+YLV8I7dov3l5ESrBrdTXN/lBfyw9orJlqc7l8fDWsRD63s/15qAzt
1JX0olb2qcrJh8EfdVXkE4pXBV3G3iDAif/RF1SZi7q2xKt6yWfXbjGrcZ4f
4Hvnv/7rv9e1ZeITuzlVKjqj3aldP3/vQUYzEm/Eil++reXU1Pqjgh0/6sd5
AHUM4AnV0ybuxUlCN+k0EelULaQh2qoRVLh6e0FVDOOaKeyp0N+pnMzh+tr4
9jsdVcdH2fjhPT5Zza5o+QXhriP3lTtszlUvmkvv67LHdMn/N6hjvEadjkId
XtX1kE484VR48Sd6+E1XkYpZCk75PPsf/+MnNeD73vT9alqXGZ3ONme+oQrA
0iN8Yb8HAFXAJwpBTclQVS2WGnolYRrzO7E5dZVUQdUEl++zOb63nmaHSzrX
WJHqqRqucnUqqap8CB/4sFkVijH4zcjNlESjIgJ1RYDm698fwW+HUH89hEYN
3I1X9y4Ix7kA6VVlphZSFKpe1JD7vhe1xn/+e/xl+49qvUfnqIji7BuOAVm0
nZO0PSe4VG3ktyuxfOOz7y7Z4zXfVHP/4wy++khrS1ePqrn7q7rJLYp8biqZ
USBV9Xku6oi1QPY6MlFVueX7N0j1D/qn1/1rsRfutmxcEZPRFN28hMTTWA58
dll2sHlf25e0NuJv65rGbTmiuaqIvo3XX2Zb6mtTB+plflEsKK7dBB7zbX3x
j2qqW3Q6YeZ1TVTF+Qhwk6ZOF03GRUUTvKPF/ctSXB/fsnXtta3rr2y9pSR1
/zDJm8b+VDWhky3Ey+84w6saVG1XzrPc3Ox2RQnRM1W6p7mS7YKXv1VgvhHG
rx3kafT0zes3V4riT/jjG56jio73WzxpYz1YWnwto3aqFk89k2+Gr9lS+QDV
iVGRo2lsG8veMPlXRcjf/6xqjy3xwI0airqc+9PDwP+brqnuzVX2q37UL6rl
d5DfbSWWpvG/t5WlTgH1e7NZT965ZR9OfKHJODVX7p0rObaVyN9wKKgHKjq0
VFcHLutCt/jkj72D6nCeqmK+T57nRVq/gBD+SvXgmYphNQbxvN2oOlwXfnpu
0/dG5rfXNbeukeJ7gKBSQ1eFSr/fqdeeXTfquifXXkyps9XmGtf+1ruAttee
oMo/HbeVKhFFleNJ3FAxvaYuHyIMretSBc3V6vMH/GfaJC4vPeRvrzFWNWW4
AgTlEDR48X+cs3IFlbQ+XIjsc1s3NfE4lResgaeuvU3ltL6hV/OmguZVCXBy
/KZlTeCozQqcUdWuosdY8z2e8dNVDvKncy0xchXB/s4Ee3ciYD+6LPF8uWKb
qntFxfFHDOUZot74/hs4o3qsrnesCfTbn6LguXlOwPPrvCgB/68nkYvXgnU2
I1D37Vzlbr5pspKnAnfXF1w20bsFdlX3uv5mO8I/txq6wETXAfKUHsBzd1Qy
F014rj62+wRoawH9WpVze6MssGIAbUL8l/c/twFHq0HqD9jMml7dVDUr1ITU
6YY2dGCc6I7Rzs1NQpU162R82taOR3MuTO7j6Q3dX67oylZBsGIzDW5v6gm4
yEepPyez7VbFqziNkzkVJvz4ikKdNkU01U3rIURTp3XxqtejUIMHsbur+pr/
JCoBUCn0nyrx1SIST7n4LH53MptTOcrrZlEKgbCJ3l2AOheqNyfq/cqw/3Ln
0J4r+PumUumf6iWe8qqf/0IvyRCWr8jlySPPXW8XBq5aqnLjlHxFPFyv40Od
iKVFlTo52QrpBqjJC6/ykmcfrGuwUeyBGdJX2sx7ywyuU4bfPEkVTHtd0LUp
ffbasNTi0Kl2Ih51fufmFbpcjuHPLZUx4INN4XZFM09qvvlSi4OXNQ/nPyr3
+KH+UE3K/ziFBPV98DtFjE9v/+UbQLrKbcenLN33tUPbAPRCpVaW14xF/e3b
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

-->

</rfc>

