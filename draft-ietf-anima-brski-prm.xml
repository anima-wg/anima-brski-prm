<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-06" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2022"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<t>This document defines enhancements to bootstrapping a remote secure key infrastructure (BRSKI, RFC8995) to facilitate bootstrapping in domains featuring no or only time limited connectivity between a pledge and the domain registrar.
It specifically targets situations, in which the interaction model changes from a pledge-initiated-mode, as used in BRSKI, to a pledge-responding-mode as described in this document.
To support the pledge-responding mode, BRSKI-PRM introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establishment the trust relation between pledge and domain registrar, BRSKI-PRM relies on object security rather than transport security.</t>

<t>The approach defined here is agnostic with respect to the underlying enrollment protocol which connects the pledge and the domain registrar to the Domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of network elements in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate, is exchanged utilizing voucher request objects and voucher response objects as defined in <xref target="RFC8995"/>.
Voucher objects are specified in <xref target="RFC8366"/>. Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA).
The MASA issues the voucher object and provides it via the domain registrar to the pledge.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies on a binding of the certification request to an underlying TLS connection between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as a client (this document refers to this approach as pledge-initiator-mode).
In industrial environments the pledge may behave as a server and thus does not initiate the bootstrapping with the domain registrar.
In this scenarios it is expected that the pledge will be triggered to generate bootstrapping requests in the customer site/domain.
This document refers to this approach as pledge-responder-mode and</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the registrar, as the pledge is in responder mode, and acts as server.
For the interaction with the domain registrar the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server and a registrar-agent and the domain registrar.
The security is addressed on application layer only to enable usage of arbitrary transport means between the pledge and the domain registrar via the registrar-agent.
Connectivity between the pledge and the registrar-agent may be via IP-based networks (wired or wireless) but also via Bluetooth or NFC.</t>
  <t>allows the application of registrar-agent credentials to establish TLS connections to the domain registrar. These registrar-agent credentials are different from the pledge's IDevID.</t>
</list></t>

<t>The term endpoint used in the context of this document is similar to resources in CoAP <xref target="RFC7252"/> and also in HTTP <xref target="RFC9110"/>.
It is not used to describe a device.
Endpoints are accessible via .well-known URIs.</t>

<t>To utilize the EST server endpoints on the domain registrar, the registrar-agent will act as client towards the domain registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is not directly applicable, as the pledge only possesses an IDevID certificate.
The IDevID does not contain any anchor for which any kind of <xref target="RFC6125"/> validation can be done.
Second, the registrar-agent may not be aware of manufacturer trust anchors to validate the IDevIDs.
Finally, IDevID do not typically set Extended Key Usage (EKU) for TLS WWW Server authentication.</t>

<t>The inability to effectively do TLS in responder mode is one reason for relying on object security.
Another reason is the application on different transports channels, for which TLS may not be available, such as Bluetooth and NFC.</t>

<t>Therefore, BRSKI-PRM relies on an additional signature wrapping of the exchanged data objects .
For EST <xref target="RFC7030"/> the registrar then needs to do some pre-processing to verify this signature, which is not present in EST.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the EE certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End entity</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>Mutual authenticated Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available within the customer site/domain.
It may be at a central site or an internet resident "cloud" service.
The connection may also be a temporary and, e.g., only available at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge-enrollment-request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof of possession (of a private key)</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof of identity (see <xref target="req-sol"/>)</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge-Voucher-Request is a request for a voucher signed by the Pledge to the Registrar.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar-enrollment-request is the CSR of PER send to the CA by the registrar (RA/LRA)</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar-Voucher-Request is a request for a voucher signed by the Registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehensible to a human reader.
In order to keep them readable the examples use the token "base64encodedvalue==" whenever such a thing occurs.
This token is in fact valid base64.
The full examples are in appendix.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The later is indicated by a string like "BASE64URL(THING)"</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to environments where pledges may have different behavior: pledge-responder-mode, or pledges may have no direct connection to the domain registrar.
Either way pledges are expected to be managed by the same registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a construction site where a building is going up.</t>

<t>Another environment relates to the assembly of cabinets, which are prepared in advance to be installed on a customer site/domain.</t>

<t>As there is no direct connection to the registrar available in these environments the solution specified allows the pledges to act in a server role so they can be triggered for bootstrapping e.g., by a commissioning tool.</t>

<t>As BRSKI focuses on the pledge in a client role, initiating the bootstrapping (pledge-initiated-mode), BRSKI-PRM defines pledges acting as a server (pledge-responder-mode) responding to PVR and PER and consumption of the results.</t>

<t>The following examples motivate support of BRSKI-PRM to support pledges acting as server as well as pledges with limited connectivity to the registrar.</t>

<t>While BRSKI-PRM defines support for pledges in responder mode, there may be pledges, which can act as both initiator or responder.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

<t>A pledge which can initiate, <bcp14>SHOULD</bcp14> listen for BRSKI messages as describe in <xref section="4.1" sectionFormat="comma" target="RFC8995"/>.  Upon discovery of a potential Registrar, it <bcp14>SHOULD</bcp14> initiate to that Registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the pledge-responder-mode connections described in this document.</t>

<t>Once a pledge with such combined functionality has been bootstrapped, it may act as client for enrollment or re-enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined endpoints can be used to trigger a Pledge-Enrollment-Request (PER) for further certificates.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building (or a cabinet) or the basement of a building is equipped with sensors, actuators and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, in the basement, a service technician collects the device specific information from the basement network and provides them to the central building management system.  This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may visit every new house in a subdivision collecting device specific information before connecting to the Registrar.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement.
This operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presume the availability of the pledge to communicate with the registrar-agent.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/> the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server).</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment. These requests are than provided by the  registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The communication between the registrar-agent and the pledge <bcp14>MUST NOT</bcp14> rely on transport layer security (TLS) because the pledge does not have certificate a that can easily be verified by <xref target="RFC6125"/> methods.
It is also more difficult to use TLS over other technology stacks (e.g., BTLE).</t>
  <t>The use of authenticated self-contained objects provides a work around for both the TLS challenges, and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher request and voucher response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>Proof of Identity (POI): provides data-origin authentication of a data object, e.g., a voucher request or an enrollment request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>Proof of Possession (POP): proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher requests and responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and proof of possession of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate the new use cases in which the pledge acts as server.
The pledge-responder-mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.</t>

<t>For the authenticated self-contained objects used for the certification request, BRSKI-PRM relies on the defined message wrapping mechanisms of the enrollment protocols stated in <xref target="req-sol"/> above.</t>

<t>The security used within the document for bootstrapping objects produced or consumed by the pledge bases on JOSE <xref target="RFC7515"/>. In constraint environments it may provided based on COSE <xref target="RFC9052"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found in  <xref target="BRSKI-PRM-abstract"/>.</t>

<section anchor="uc2"><name>Pledge-Responder-Mode (PRM): Registrar-Agent Communication with Pledges</name>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects (the voucher request/response as known from BRSKI and the enrollment request/response as introduced by BRSKI-PRM) with the help of a registrar-agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.
Note that the Join Proxy is neglected in the figure as not needed by the registrar-agent.
The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar as described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints were the required functionality is provided</t>
  <t>enhances existing with new supported media types, e.g., for JWS voucher</t>
  <t>defines new endpoints were additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="Architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="448" viewBox="0 0 448 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 32,48 L 32,232" fill="none" stroke="black"/>
<path d="M 72,240 L 72,384" fill="none" stroke="black"/>
<path d="M 144,240 L 144,336" fill="none" stroke="black"/>
<path d="M 200,368 L 200,432" fill="none" stroke="black"/>
<path d="M 240,32 L 240,144" fill="none" stroke="black"/>
<path d="M 240,240 L 240,336" fill="none" stroke="black"/>
<path d="M 304,240 L 304,336" fill="none" stroke="black"/>
<path d="M 352,152 L 352,232" fill="none" stroke="black"/>
<path d="M 352,336 L 352,368" fill="none" stroke="black"/>
<path d="M 360,72 L 360,144" fill="none" stroke="black"/>
<path d="M 400,240 L 400,336" fill="none" stroke="black"/>
<path d="M 400,368 L 400,432" fill="none" stroke="black"/>
<path d="M 440,32 L 440,144" fill="none" stroke="black"/>
<path d="M 240,32 L 440,32" fill="none" stroke="black"/>
<path d="M 32,48 L 64,48" fill="none" stroke="black"/>
<path d="M 160,48 L 232,48" fill="none" stroke="black"/>
<path d="M 240,64 L 440,64" fill="none" stroke="black"/>
<path d="M 240,144 L 440,144" fill="none" stroke="black"/>
<path d="M 8,240 L 72,240" fill="none" stroke="black"/>
<path d="M 144,240 L 240,240" fill="none" stroke="black"/>
<path d="M 304,240 L 400,240" fill="none" stroke="black"/>
<path d="M 80,304 L 136,304" fill="none" stroke="black"/>
<path d="M 248,304 L 296,304" fill="none" stroke="black"/>
<path d="M 144,336 L 240,336" fill="none" stroke="black"/>
<path d="M 304,336 L 400,336" fill="none" stroke="black"/>
<path d="M 200,368 L 400,368" fill="none" stroke="black"/>
<path d="M 8,384 L 72,384" fill="none" stroke="black"/>
<path d="M 200,432 L 400,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="360,232 348,226.4 348,237.6" fill="black" transform="rotate(90,352,232)"/>
<polygon class="arrowhead" points="360,152 348,146.4 348,157.6" fill="black" transform="rotate(270,352,152)"/>
<polygon class="arrowhead" points="304,304 292,298.4 292,309.6" fill="black" transform="rotate(0,296,304)"/>
<polygon class="arrowhead" points="256,304 244,298.4 244,309.6" fill="black" transform="rotate(180,248,304)"/>
<polygon class="arrowhead" points="144,304 132,298.4 132,309.6" fill="black" transform="rotate(0,136,304)"/>
<polygon class="arrowhead" points="88,304 76,298.4 76,309.6" fill="black" transform="rotate(180,80,304)"/>
<polygon class="arrowhead" points="40,232 28,226.4 28,237.6" fill="black" transform="rotate(90,32,232)"/>
<g class="text">
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="276" y="52">Vendor</text>
<text x="336" y="52">Service</text>
<text x="256" y="84">M</text>
<text x="312" y="84">anufacturer</text>
<text x="256" y="100">A</text>
<text x="304" y="100">uthorized</text>
<text x="400" y="100">Ownership</text>
<text x="256" y="116">S</text>
<text x="292" y="116">igning</text>
<text x="392" y="116">Tracker</text>
<text x="256" y="132">A</text>
<text x="300" y="132">uthority</text>
<text x="396" y="180">BRSKI-</text>
<text x="104" y="196">BRSKI-PRM</text>
<text x="396" y="196">MASA</text>
<text x="232" y="212">.............................</text>
<text x="392" y="212">.........</text>
<text x="120" y="228">.</text>
<text x="424" y="228">.</text>
<text x="120" y="244">.</text>
<text x="424" y="244">.</text>
<text x="120" y="260">.</text>
<text x="424" y="260">.</text>
<text x="36" y="276">Pledge</text>
<text x="120" y="276">.</text>
<text x="192" y="276">Registrar</text>
<text x="272" y="276">BRSKI</text>
<text x="340" y="276">Domain</text>
<text x="424" y="276">.</text>
<text x="120" y="292">.</text>
<text x="176" y="292">Agent</text>
<text x="272" y="292">EST</text>
<text x="352" y="292">Registrar</text>
<text x="424" y="292">.</text>
<text x="332" y="308">(PKI</text>
<text x="368" y="308">RA)</text>
<text x="424" y="308">.</text>
<text x="120" y="324">.</text>
<text x="212" y="324">LDevID</text>
<text x="424" y="324">.</text>
<text x="120" y="340">.</text>
<text x="424" y="340">.</text>
<text x="36" y="356">IDevID</text>
<text x="120" y="356">.</text>
<text x="424" y="356">.</text>
<text x="120" y="372">.</text>
<text x="424" y="372">.</text>
<text x="120" y="388">.</text>
<text x="224" y="388">Key</text>
<text x="300" y="388">Infrastructure</text>
<text x="424" y="388">.</text>
<text x="120" y="404">.</text>
<text x="236" y="404">(e.g.,</text>
<text x="280" y="404">PKI</text>
<text x="344" y="404">Certificate</text>
<text x="424" y="404">.</text>
<text x="120" y="420">.</text>
<text x="300" y="420">Authority)</text>
<text x="424" y="420">.</text>
<text x="120" y="436">.</text>
<text x="424" y="436">.</text>
<text x="272" y="452">.......................................</text>
<text x="220" y="468">&quot;Domain&quot;</text>
<text x="300" y="468">components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                             +------------------------+
   +---- Drop Ship ----------| Vendor Service         |
   |                         +------------------------+
   |                         | M anufacturer|         |
   |                         | A uthorized  |Ownership|
   |                         | S igning     |Tracker  |
   |                         | A uthority   |         |
   |                         +--------------+---------+
   |                                       ^
   |                                       |  BRSKI-
   |    BRSKI-PRM                          |   MASA
   |          .............................|.........
   V          .                            v        .
+-------+     .  +-----------+       +-----------+  .
|       |     .  |           |       |           |  .
|Pledge |     .  | Registrar | BRSKI | Domain    |  .
|       |     .  | Agent     |  EST  | Registrar |  .
|       |<------>|           |<----->| (PKI RA)  |  .
|       |     .  |     LDevID|       |           |  .
|       |     .  +-----------+       +-----+-----+  .
|IDevID |     .                            |        .
|       |     .         +------------------+-----+  .
+-------+     .         | Key Infrastructure     |  .
              .         | (e.g., PKI Certificate |  .
              .         |       Authority)       |  .
              .         +------------------------+  .
              .......................................
                       "Domain" components
]]></artwork></artset></figure>

<t>The following list describes the components in a (customer) site domain:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Other protocols may be used like CoAP, Bluetooth, or NFC, but are out of scope of this document.
A pledge acting as a server during bootstrapping leads to some differences to BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent must be possible.</t>
      <t>As the registrar-agent must be able to request data objects for bootstrapping of the pledge, the pledge must offer corresponding endpoints.</t>
      <t>The registrar-agent may provide additional data to the pledge in the context of the voucher triggering request, to make itself visible to the domain registrar.</t>
      <t>Order of exchanges in the call flow may be different as the registrar-agent collects both, PVR and PER, at once and provides them to the registrar.
This approach is used in order to allow for bulk bootstrapping of several devices in a single pass through a new site by the commissioning personnel.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges and performs a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the TLS session establishment and also to verify that the registrar-agent is authorized to perform the bootstrapping of the distinct pledge.
The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
The registrar detects if the bootstrapping is performed by the pledge directly or by the registrar-agent.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
For issuing a voucher, the MASA may perform additional checks on a voucher-request, to issue a voucher indicating agent-proximity instead of (registrar-)proximity.</t>
</list></t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement, that the proximity registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is therefore a weaker assertion then "proximity".
It is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.
Note that at the time of creating the voucher-request, the pledge cannot verify the registrar's registrar EE  certificate and has no proof-of-possession of the corresponding private key for the certificate.
The pledge therefore accepts the registrar EE certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.
See also <xref target="RFC8995"/> "PROVISIONAL accept of server cert".</t>

<t>Trust handover to the domain is established via the "pinned-domain-certificate" in the voucher.</t>

<t>In contrast to the above, "proximity" provides a statement, that the pledge was in direct contact with the registrar and was able to verify proof-of-possession of the private key in the context of the TLS handshake.
The provisionally accepted registrar EE certificate can be verified after the voucher has been processed by the pledge.
As the returned voucher includes an additional signature by the registrar as defined in <xref target="exchanges_uc2_2_vs"/>, the pledge can also verify that the registrar possesses the corresponding private key.</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>The pledge is triggered by the registrar-agent to generate the PVR and PER as well as for the processing of the responses and the generation of status information.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The endpoints are defined with short names to also accommodate for the constraint case.
The URI path begins with "http://www.example.com/.well-known/brski" followed by a path-suffix that indicates the intended operation.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure1">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Operation path</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge-voucher-request creation - Returns PVR</c>
      <c>/tv</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge-enrollment-request - Returns PER</c>
      <c>/te</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Provide voucher to pledge - Returns pledge-voucher-status</c>
      <c>/sv</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide enrollment response to pledge - Returns pledge-enrollment-status</c>
      <c>/se</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide CA certs to pledge</c>
      <c>/cc</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query bootstrapping status of pledge - Returns pledge-status</c>
      <c>/ps</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent as a new component provides connectivity between the pledge and the domain registrar. 
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher request/response, the enrollment request/response, as well as related telemetry and status information.</t>

<t>For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.
This new component changes the general interaction between the pledge and the domain registrar as shown in <xref target="uc2figure"/>.</t>

<t>For the communication with the registrar, the registrar-agent uses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/> if suitable.
The EST <xref target="RFC7030"/> standard endpoints used by BRSKI do not expect signature wrapped-objects, which are used b BRSKI-PRM.
This specifically applies for the enrollment request and the provisioning of CA certificates. 
To accommodate the use of signature-wrapped object, the following additional endpoints are defined for the <em>registrar</em>.
Operations and their corresponding URIs:</t>

<texttable title="Additional endpoints on the registrar" anchor="eppfigure2">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Operation path</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Supply PER to registrar</c>
      <c>/requestenroll</c>
      <c><xref target="exchanges_uc2_2_per"/></c>
      <c>Request (wrapped) CA certificates - Returns wrapped CA Certificates</c>
      <c>/wrappedcacerts</c>
      <c><xref target="exchanges_uc2_2_wca"/></c>
</texttable>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use its LDevID(RegAgt) when establishing a TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> makes a similar requirement.
In BRSKI-PRM, the SKID is used in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and to adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair.</t>
  <t>Registrar EE certificate: certificate of the domain registrar.</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped.</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge. The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer may opt out of this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>To be able to detect the pledge using mDNS, network connectivity is required.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification descibes the usage of HTTP as in BRSKI <xref target="RFC8995"/>.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects which are not bound to specific transport security.
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain registrar certificate (registrar EE certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the LDevID(RegAgt).
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate based on the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR.
The registrar includes the LDevID(RegAgt) certificate information into the RVR if the PVR asked for the assertion "agent-proximity".</t>

<t>The MASA in turn verifies the registrar EE certificate is included in the PVR ("prior-signed-voucher-request" of RVR) in the "agent-provided-proximity-registrar-certificate" leaf
and may assert the PVR as "verified" or "logged" instead of "proximity", as there is no direct connection between the pledge and the registrar.</t>

<t>In addition, the MASA can state the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx status code as described in section 5.6 of <xref target="RFC8995"/>.
The voucher then can be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1056" width="576" viewBox="0 0 576 1056" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,256 L 32,320" fill="none" stroke="black"/>
<path d="M 32,384 L 32,576" fill="none" stroke="black"/>
<path d="M 32,624 L 32,688" fill="none" stroke="black"/>
<path d="M 32,720 L 32,736" fill="none" stroke="black"/>
<path d="M 32,800 L 32,864" fill="none" stroke="black"/>
<path d="M 32,928 L 32,1040" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 120,32 L 120,96" fill="none" stroke="black"/>
<path d="M 176,104 L 176,208" fill="none" stroke="black"/>
<path d="M 176,256 L 176,320" fill="none" stroke="black"/>
<path d="M 176,384 L 176,576" fill="none" stroke="black"/>
<path d="M 176,624 L 176,688" fill="none" stroke="black"/>
<path d="M 176,720 L 176,736" fill="none" stroke="black"/>
<path d="M 176,800 L 176,864" fill="none" stroke="black"/>
<path d="M 176,928 L 176,1040" fill="none" stroke="black"/>
<path d="M 216,32 L 216,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 328,104 L 328,208" fill="none" stroke="black"/>
<path d="M 328,256 L 328,320" fill="none" stroke="black"/>
<path d="M 328,496 L 328,576" fill="none" stroke="black"/>
<path d="M 328,624 L 328,688" fill="none" stroke="black"/>
<path d="M 328,720 L 328,736" fill="none" stroke="black"/>
<path d="M 328,800 L 328,864" fill="none" stroke="black"/>
<path d="M 328,928 L 328,976" fill="none" stroke="black"/>
<path d="M 328,1008 L 328,1040" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 392,32 L 392,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,208" fill="none" stroke="black"/>
<path d="M 448,256 L 448,320" fill="none" stroke="black"/>
<path d="M 448,384 L 448,480" fill="none" stroke="black"/>
<path d="M 448,560 L 448,576" fill="none" stroke="black"/>
<path d="M 448,624 L 448,688" fill="none" stroke="black"/>
<path d="M 448,720 L 448,736" fill="none" stroke="black"/>
<path d="M 448,800 L 448,864" fill="none" stroke="black"/>
<path d="M 448,928 L 448,944" fill="none" stroke="black"/>
<path d="M 448,1008 L 448,1040" fill="none" stroke="black"/>
<path d="M 464,32 L 464,96" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 552,104 L 552,208" fill="none" stroke="black"/>
<path d="M 552,256 L 552,320" fill="none" stroke="black"/>
<path d="M 552,384 L 552,496" fill="none" stroke="black"/>
<path d="M 552,544 L 552,576" fill="none" stroke="black"/>
<path d="M 552,624 L 552,688" fill="none" stroke="black"/>
<path d="M 552,720 L 552,736" fill="none" stroke="black"/>
<path d="M 552,800 L 552,864" fill="none" stroke="black"/>
<path d="M 552,928 L 552,976" fill="none" stroke="black"/>
<path d="M 552,1008 L 552,1040" fill="none" stroke="black"/>
<path d="M 568,32 L 568,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 216,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 392,32 L 464,32" fill="none" stroke="black"/>
<path d="M 488,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 120,96 L 216,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 392,96 L 464,96" fill="none" stroke="black"/>
<path d="M 488,96 L 568,96" fill="none" stroke="black"/>
<path d="M 40,176 L 168,176" fill="none" stroke="black"/>
<path d="M 40,192 L 168,192" fill="none" stroke="black"/>
<path d="M 40,256 L 80,256" fill="none" stroke="black"/>
<path d="M 136,256 L 168,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 128,272 L 168,272" fill="none" stroke="black"/>
<path d="M 40,304 L 80,304" fill="none" stroke="black"/>
<path d="M 136,304 L 168,304" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 128,320 L 168,320" fill="none" stroke="black"/>
<path d="M 184,384 L 232,384" fill="none" stroke="black"/>
<path d="M 280,384 L 320,384" fill="none" stroke="black"/>
<path d="M 184,432 L 224,432" fill="none" stroke="black"/>
<path d="M 272,432 L 320,432" fill="none" stroke="black"/>
<path d="M 336,496 L 424,496" fill="none" stroke="black"/>
<path d="M 472,496 L 544,496" fill="none" stroke="black"/>
<path d="M 336,544 L 408,544" fill="none" stroke="black"/>
<path d="M 488,544 L 544,544" fill="none" stroke="black"/>
<path d="M 184,560 L 216,560" fill="none" stroke="black"/>
<path d="M 296,560 L 320,560" fill="none" stroke="black"/>
<path d="M 184,624 L 232,624" fill="none" stroke="black"/>
<path d="M 280,624 L 320,624" fill="none" stroke="black"/>
<path d="M 336,640 L 360,640" fill="none" stroke="black"/>
<path d="M 408,640 L 440,640" fill="none" stroke="black"/>
<path d="M 336,656 L 360,656" fill="none" stroke="black"/>
<path d="M 416,656 L 440,656" fill="none" stroke="black"/>
<path d="M 184,672 L 200,672" fill="none" stroke="black"/>
<path d="M 304,672 L 320,672" fill="none" stroke="black"/>
<path d="M 184,720 L 200,720" fill="none" stroke="black"/>
<path d="M 304,720 L 320,720" fill="none" stroke="black"/>
<path d="M 184,736 L 200,736" fill="none" stroke="black"/>
<path d="M 304,736 L 320,736" fill="none" stroke="black"/>
<path d="M 40,800 L 64,800" fill="none" stroke="black"/>
<path d="M 144,800 L 168,800" fill="none" stroke="black"/>
<path d="M 40,816 L 64,816" fill="none" stroke="black"/>
<path d="M 144,816 L 168,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 168,832" fill="none" stroke="black"/>
<path d="M 40,848 L 56,848" fill="none" stroke="black"/>
<path d="M 152,848 L 168,848" fill="none" stroke="black"/>
<path d="M 40,864 L 56,864" fill="none" stroke="black"/>
<path d="M 136,864 L 168,864" fill="none" stroke="black"/>
<path d="M 184,928 L 232,928" fill="none" stroke="black"/>
<path d="M 280,928 L 320,928" fill="none" stroke="black"/>
<path d="M 184,944 L 208,944" fill="none" stroke="black"/>
<path d="M 296,944 L 320,944" fill="none" stroke="black"/>
<path d="M 336,960 L 352,960" fill="none" stroke="black"/>
<path d="M 528,960 L 544,960" fill="none" stroke="black"/>
<path d="M 336,976 L 368,976" fill="none" stroke="black"/>
<path d="M 520,976 L 544,976" fill="none" stroke="black"/>
<path d="M 184,1024 L 208,1024" fill="none" stroke="black"/>
<path d="M 296,1024 L 320,1024" fill="none" stroke="black"/>
<polygon class="arrowhead" points="552,960 540,954.4 540,965.6" fill="black" transform="rotate(0,544,960)"/>
<polygon class="arrowhead" points="552,496 540,490.4 540,501.6" fill="black" transform="rotate(0,544,496)"/>
<polygon class="arrowhead" points="448,640 436,634.4 436,645.6" fill="black" transform="rotate(0,440,640)"/>
<polygon class="arrowhead" points="344,976 332,970.4 332,981.6" fill="black" transform="rotate(180,336,976)"/>
<polygon class="arrowhead" points="344,656 332,650.4 332,661.6" fill="black" transform="rotate(180,336,656)"/>
<polygon class="arrowhead" points="344,544 332,538.4 332,549.6" fill="black" transform="rotate(180,336,544)"/>
<polygon class="arrowhead" points="328,1024 316,1018.4 316,1029.6" fill="black" transform="rotate(0,320,1024)"/>
<polygon class="arrowhead" points="328,944 316,938.4 316,949.6" fill="black" transform="rotate(0,320,944)"/>
<polygon class="arrowhead" points="328,928 316,922.4 316,933.6" fill="black" transform="rotate(0,320,928)"/>
<polygon class="arrowhead" points="328,720 316,714.4 316,725.6" fill="black" transform="rotate(0,320,720)"/>
<polygon class="arrowhead" points="328,624 316,618.4 316,629.6" fill="black" transform="rotate(0,320,624)"/>
<polygon class="arrowhead" points="328,432 316,426.4 316,437.6" fill="black" transform="rotate(0,320,432)"/>
<polygon class="arrowhead" points="328,384 316,378.4 316,389.6" fill="black" transform="rotate(0,320,384)"/>
<polygon class="arrowhead" points="192,928 180,922.4 180,933.6" fill="black" transform="rotate(180,184,928)"/>
<polygon class="arrowhead" points="192,736 180,730.4 180,741.6" fill="black" transform="rotate(180,184,736)"/>
<polygon class="arrowhead" points="192,672 180,666.4 180,677.6" fill="black" transform="rotate(180,184,672)"/>
<polygon class="arrowhead" points="192,560 180,554.4 180,565.6" fill="black" transform="rotate(180,184,560)"/>
<polygon class="arrowhead" points="192,384 180,378.4 180,389.6" fill="black" transform="rotate(180,184,384)"/>
<polygon class="arrowhead" points="176,864 164,858.4 164,869.6" fill="black" transform="rotate(0,168,864)"/>
<polygon class="arrowhead" points="176,816 164,810.4 164,821.6" fill="black" transform="rotate(0,168,816)"/>
<polygon class="arrowhead" points="176,320 164,314.4 164,325.6" fill="black" transform="rotate(0,168,320)"/>
<polygon class="arrowhead" points="176,272 164,266.4 164,277.6" fill="black" transform="rotate(0,168,272)"/>
<polygon class="arrowhead" points="176,192 164,186.4 164,197.6" fill="black" transform="rotate(0,168,192)"/>
<polygon class="arrowhead" points="48,848 36,842.4 36,853.6" fill="black" transform="rotate(180,40,848)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,800 36,794.4 36,805.6" fill="black" transform="rotate(180,40,800)"/>
<polygon class="arrowhead" points="48,304 36,298.4 36,309.6" fill="black" transform="rotate(180,40,304)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="168" y="52">Registrar</text>
<text x="292" y="52">Domain</text>
<text x="428" y="52">Domain</text>
<text x="524" y="52">Vendor</text>
<text x="152" y="68">Agent</text>
<text x="304" y="68">Registrar</text>
<text x="412" y="68">CA</text>
<text x="528" y="68">Service</text>
<text x="164" y="84">(RegAgt)</text>
<text x="296" y="84">(JRC)</text>
<text x="524" y="84">(MASA)</text>
<text x="508" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="56" y="244">trigger</text>
<text x="104" y="244">PVR</text>
<text x="148" y="244">(tPVR)</text>
<text x="192" y="244">and</text>
<text x="224" y="244">PER</text>
<text x="268" y="244">(tPER)</text>
<text x="340" y="244">generation</text>
<text x="396" y="244">on</text>
<text x="436" y="244">pledge</text>
<text x="108" y="260">tPVR</text>
<text x="104" y="276">PVR</text>
<text x="108" y="308">tPER</text>
<text x="104" y="324">PER</text>
<text x="32" y="340">~</text>
<text x="176" y="340">~</text>
<text x="328" y="340">~</text>
<text x="448" y="340">~</text>
<text x="552" y="340">~</text>
<text x="56" y="372">provide</text>
<text x="104" y="372">PVR</text>
<text x="132" y="372">to</text>
<text x="204" y="372">infrastructure</text>
<text x="256" y="388">TLS</text>
<text x="328" y="388">|</text>
<text x="292" y="404">[Reg-Agt</text>
<text x="384" y="404">authenticated</text>
<text x="280" y="420">and</text>
<text x="348" y="420">authorized?]</text>
<text x="248" y="436">PVR</text>
<text x="328" y="436">|</text>
<text x="292" y="452">[Reg-Agt</text>
<text x="380" y="452">authorized?]</text>
<text x="288" y="468">[accept</text>
<text x="356" y="468">device?]</text>
<text x="292" y="484">[contact</text>
<text x="360" y="484">vendor]</text>
<text x="448" y="500">RVR</text>
<text x="452" y="516">[extract</text>
<text x="528" y="516">DomainID]</text>
<text x="448" y="532">[update</text>
<text x="504" y="532">audit</text>
<text x="548" y="532">log]</text>
<text x="448" y="548">Voucher</text>
<text x="256" y="564">Voucher</text>
<text x="56" y="612">provide</text>
<text x="104" y="612">PER</text>
<text x="132" y="612">to</text>
<text x="204" y="612">infrastructure</text>
<text x="256" y="628">PER</text>
<text x="384" y="644">CSR</text>
<text x="388" y="660">Cert</text>
<text x="256" y="676">Enroll-Resp</text>
<text x="48" y="708">query</text>
<text x="104" y="708">cACerts</text>
<text x="156" y="708">from</text>
<text x="236" y="708">infrastructure</text>
<text x="252" y="724">cACert-Req</text>
<text x="256" y="740">cACert-Resp</text>
<text x="32" y="756">~</text>
<text x="176" y="756">~</text>
<text x="336" y="756">~</text>
<text x="456" y="756">~</text>
<text x="560" y="756">~</text>
<text x="56" y="788">provide</text>
<text x="120" y="788">voucher</text>
<text x="168" y="788">and</text>
<text x="232" y="788">certificate</text>
<text x="296" y="788">and</text>
<text x="344" y="788">collect</text>
<text x="404" y="788">status</text>
<text x="452" y="788">info</text>
<text x="104" y="804">Voucher</text>
<text x="104" y="820">vStatus</text>
<text x="104" y="836">cACerts</text>
<text x="104" y="852">Enroll-Resp</text>
<text x="96" y="868">eStatus</text>
<text x="32" y="884">~</text>
<text x="176" y="884">~</text>
<text x="328" y="884">~</text>
<text x="448" y="884">~</text>
<text x="552" y="884">~</text>
<text x="56" y="916">provide</text>
<text x="120" y="916">voucher</text>
<text x="180" y="916">status</text>
<text x="224" y="916">and</text>
<text x="268" y="916">enroll</text>
<text x="324" y="916">status</text>
<text x="364" y="916">to</text>
<text x="416" y="916">registrar</text>
<text x="256" y="932">TLS</text>
<text x="256" y="948">vStatus</text>
<text x="376" y="964">req</text>
<text x="420" y="964">device</text>
<text x="472" y="964">audit</text>
<text x="512" y="964">log</text>
<text x="404" y="980">device</text>
<text x="456" y="980">audit</text>
<text x="496" y="980">log</text>
<text x="296" y="996">[verify</text>
<text x="352" y="996">audit</text>
<text x="396" y="996">log]</text>
<text x="256" y="1028">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+    +-----------+    +-----------+    +--------+  +---------+
| Pledge |    | Registrar |    | Domain    |    | Domain |  | Vendor  |
|        |    | Agent     |    | Registrar |    | CA     |  | Service |
|        |    | (RegAgt)  |    |  (JRC)    |    |        |  | (MASA)  |
+--------+    +-----------+    +-----------+    +--------+  +---------+
   |                 |                  |              |   Internet |
   |   discover      |                  |              |            |
   |    pledge       |                  |              |            |
   | mDNS query      |                  |              |            |
   |<----------------|                  |              |            |
   |---------------->|                  |              |            |
   |                 |                  |              |            |

   trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<----- tPVR -----|                  |              |            |
   |------ PVR ----->|                  |              |            |
   |                 |                  |              |            |
   |<----- tPER -----|                  |              |            |
   |------ PER ----->|                  |              |            |
   ~                 ~                  ~              ~            ~

   provide PVR to infrastructure
   |                 |<------ TLS ----->|              |            |
   |                 |          [Reg-Agt authenticated |            |
   |                 |           and authorized?]      |            |
   |                 |------ PVR ------>|              |            |
   |                 |          [Reg-Agt authorized?]  |            |
   |                 |          [accept device?]       |            |
   |                 |          [contact vendor]       |            |
   |                 |                  |------------ RVR --------->|
   |                 |                  |           [extract DomainID]
   |                 |                  |           [update audit log]
   |                 |                  |<--------- Voucher --------|
   |                 |<---- Voucher ----|              |            |
   |                 |                  |              |            |

   provide PER to infrastructure
   |                 |------- PER ----->|              |            |
   |                 |                  |---- CSR ---->|            |
   |                 |                  |<--- Cert ----|            |
   |                 |<-- Enroll-Resp---|              |            |
   |                 |                  |              |            |
   query cACerts from infrastructure
   |                 |--- cACert-Req -->|              |            |
   |                 |<-- cACert-Resp---|              |            |
   ~                 ~                   ~              ~            ~

   provide voucher and certificate and collect status info
   |<--- Voucher ----|                  |              |            |
   |---- vStatus --->|                  |              |            |
   |<--- cACerts ----|                  |              |            |
   |<--Enroll-Resp---|                  |              |            |
   |--- eStatus ---->|                  |              |            |
   ~                 ~                  ~              ~            ~

   provide voucher status and enroll status to registrar
   |                 |<------ TLS ----->|              |            |
   |                 |----  vStatus --->|              |            |
   |                 |                  |--- req device audit log-->|
   |                 |                  |<---- device audit log ----|
   |                 |           [verify audit log]
   |                 |                  |              |            |
   |                 |----  eStatus --->|              |            |
   |                 |                  |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions between the different components into:</t>

<t><list style="symbols">
  <t><xref target="exchanges_uc2_1"/> describes the request object acquisition by the registrar-agent from pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes the request object processing initiated by the registrar-agent to the registrar and also the interaction of the registrar with the MASA and the domain CA including the response object processing by these entities.</t>
  <t><xref target="exchanges_uc2_3"/> describes the supply of response objects between the registrar-agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses corresponding exchanges between the registrar-agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the registrar-agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> based on mDNS or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent: possesses/trusts IDevID CA certificate and has own LDevID(RegAgt) credentials for the registrar domain (site).
In addition, the registrar-agent <bcp14>MUST</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
  <list style="symbols">
      <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
      <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
      <t>discovered by using a vendor specific approach, e.g., RF beacons
The registrar-agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
    </list></t>
  <t>Registrar: possesses/trusts IDevID CA certificate and has own registrar EE credentials.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="520" viewBox="0 0 520 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,304" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,304" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 72,144" fill="none" stroke="black"/>
<path d="M 336,144 L 360,144" fill="none" stroke="black"/>
<path d="M 48,208 L 80,208" fill="none" stroke="black"/>
<path d="M 280,208 L 360,208" fill="none" stroke="black"/>
<path d="M 48,240 L 88,240" fill="none" stroke="black"/>
<path d="M 320,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,288 L 88,288" fill="none" stroke="black"/>
<path d="M 312,288 L 360,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,288 356,282.4 356,293.6" fill="black" transform="rotate(0,360,288)"/>
<polygon class="arrowhead" points="368,208 356,202.4 356,213.6" fill="black" transform="rotate(0,360,208)"/>
<polygon class="arrowhead" points="56,240 44,234.4 44,245.6" fill="black" transform="rotate(180,48,240)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="112" y="148">trigger</text>
<text x="236" y="148">pledge-voucher-request</text>
<text x="204" y="164">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="180">-agent-signed-data</text>
<text x="180" y="212">pledge-voucher-request</text>
<text x="396" y="212">-store</text>
<text x="440" y="212">PVR</text>
<text x="128" y="244">trigger</text>
<text x="204" y="244">enrollment</text>
<text x="280" y="244">request</text>
<text x="128" y="260">(empty)</text>
<text x="200" y="292">pledge-enrollment-request</text>
<text x="396" y="292">-store</text>
<text x="448" y="292">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<--- trigger pledge-voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge-voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge-enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>Note: The registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="pledge-voucher-request-pvr-trigger"><name>Pledge-Voucher-Request (PVR) - Trigger</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tv"</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>The pledge provisionally accepts the agent-provided-proximity-registrar-cert, it <bcp14>SHOULD</bcp14> verify it after a voucher is received.
The pledge will be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
It <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value), excluding the ASN.1 encoding of "OCTET STRING" of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request-prm:agent-signed-data" element (defined in <xref target="voucher-request-prm-yang"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:agent-signed-data"
  representation in JSON syntax

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="pledge-voucher-request-pvr-response"><name>Pledge-Voucher-Request (PVR) - Response</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or it's not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized the time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity".</t>
</list></t>

<t>The ietf-voucher-request:voucher is enhanced with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar EE certificate (provided as trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as trigger parameter.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="voucher-request-prm-yang"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-voucher-request-prm:voucher" Representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON syntax
{
    "alg": "ES256",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ],
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Content-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>SHOULD</bcp14> include this Content-Type header field indicating the included media type for the PVR.
Note that this is also an indication regarding the acceptable format of the voucher response.
This format is included by the registrar as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="pledge-enrollment-request-per-trigger"><name>Pledge-Enrollment-Request (PER) - Trigger</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/te"</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "re-enroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

</section>
<section anchor="pledge-enrollment-request-per-response"><name>Pledge-Enrollment-Request (PER) - Response</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the enrollment-trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures proof of possession of the private key corresponding to the contained public key.
In addition, based on the additional signature using the IDevID, proof of identity is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the enrollment request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>SHOULD</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format. Note that the wrapping signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a signature-wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-ztp-types" Representation in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent on Registrar, MASA and Domain CA</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses it's own LDevID(RegAgt) credentials of the site domain.
In addition, it may possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar: possesses the IDevID CA certificate of the pledge vendor/manufacturer and it's own registrar EE credentials of the site domain.</t>
  <t>MASA: possesses it's own vendor/manufacturer credentials (voucher signing key, TLS server certificate) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.
The latter is only necessary if the MASA needs to verify that the domain of the Registrar is a-priori authorized to enroll a particular pledge, or a particular type of pledge.
In such case is out of scope of this document how the MASA will obtain the domain CA certificate.
In other cases, a MASA may allow the pledge to enroll into an anonymous and/or yet-unknown domain and then the a-priori possession of the domain CA certificate is not needed.</t>
</list></t>

<figure title="Request processing between registrar-agent and bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="connection-establishment-registrar-agent-to-registrar"><name>Connection Establishment (Registrar-Agent to Registrar)</name>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection from registrar-agent to registrar is established, the authorization <bcp14>SHALL</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>The registrar can receive request objects in different formats as defined in <xref target="RFC8995"/>.
Specifically, the registrar will receive JSON-in-JWS objects generated by the pledge for voucher-request and enrollment-request (instead of BRSKI voucher-request as CMS-signed JSON and enrollment-request as PKCS#10).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PVR by HTTP POST to the registrar endpoint: "/.well-known/brski/requestvoucher"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent <bcp14>SHOULD</bcp14> set the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="pledge-voucher-request-rvr-processing-by-registrar"><name>Pledge-Voucher-Request (RVR) Processing by Registrar</name>

<t>After receiving the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar EE certificate to ensure the registrar in proximity of the registrar-agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credentials indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar can fetch the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.</t>
</list></t>

<t>If the validation fails the registrar <bcp14>SHOULD</bcp14> respond with HTTP 404 Not Found status code to the registrar-agent.
HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used if the Content-Type indicated by the Accept header is unknown or unsupported.</t>

<t>If the validation succeeds, the registrar <bcp14>SHOULD</bcp14> accept the PVR to join the domain as defined in section 5.3 of <xref target="RFC8995"/>.
The registrar then establishes a TLS connection to MASA as described in section 5.4 of <xref target="RFC8995"/> to obtain a voucher for the pledge.</t>

</section>
<section anchor="registrar-voucher-request-rvr-processing-registrar-to-masa"><name>Registrar-Voucher-Request (RVR) Processing (Registrar to MASA)</name>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied form the PVR</t>
  <t>serial-number: product-serial-number of pledge
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as in <xref target="RFC8995"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be enhanced with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="voucher-request-prm-yang"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.</t>
</list></t>

<t>If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar EE credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:voucher" representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar EE certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar EE credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar EE certificate is used or that different registrar EE certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar EE certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in section 5.6 of <xref target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="voucher-issuance-by-masa"><name>Voucher Issuance by MASA</name>

<t>The expected voucher-response format for BRSKI-PRM (pledge-responder-mode) <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> <bcp14>SHOULD</bcp14> be applied.
If the MASA detects that the Accept header of the PVR does not match the <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code 406 Not Acceptable as the pledge will not be able to parse the response.
The voucher syntax is described in detail by <xref target="RFC8366"/>. <xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>MASA issued Voucher Processing by Registrar</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar credentials.
The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credentials (see<xref target="RFC7515"/>, section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain registrar EE certificate as well as potential intermediate CA certificates up to the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>This signature provides a proof of possession of the private key corresponding to the registrar EE certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).
The registrar <bcp14>MUST</bcp14> use the same registrar EE credentials used for authentication in the TLS handshake to authenticate towards the registrar-agent.
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".
<xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header (MASA)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Decoded "JWS Protected Header (Reg)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge as explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

</section>
<section anchor="exchanges_uc2_2_per"><name>Pledge-Enrollment-Request (PER) Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar.
Deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment request with the corresponding domain CA.
It creates a registrar-enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="exchanges_uc2_2_wca"><name>Request Wrapped-CA-certificate(s) (Registrar-Agent to Registrar)</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t>To support registrar-agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar EE credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64 encoded "x5b" in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with additional registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Object Supply by Registrar-Agent to Pledge</name>

<t>It is assumed that the registrar-agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:
* voucher-response - Voucher (from MASA via Registrar)
* wrapped-CA-certificate(s)-response - CA certificates
* enrollment-response - LDevID(Pledge) certificate (from CA via Registrar)</t>

<t>The registrar-agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher and LDevID certificate and optionally CA certificates.</t>
</list></t>

<figure title="Responses and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 104,160" fill="none" stroke="black"/>
<path d="M 240,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 112,192" fill="none" stroke="black"/>
<path d="M 248,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 88,224" fill="none" stroke="black"/>
<path d="M 296,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 304,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 112,288" fill="none" stroke="black"/>
<path d="M 240,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 72,320" fill="none" stroke="black"/>
<path d="M 296,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(0,320,288)"/>
<polygon class="arrowhead" points="328,192 316,186.4 316,197.6" fill="black" transform="rotate(0,320,192)"/>
<polygon class="arrowhead" points="56,320 44,314.4 44,325.6" fill="black" transform="rotate(180,48,320)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,224 44,218.4 44,229.6" fill="black" transform="rotate(180,48,224)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="140" y="164">supply</text>
<text x="200" y="164">voucher</text>
<text x="152" y="196">voucher</text>
<text x="212" y="196">status</text>
<text x="344" y="196">-</text>
<text x="376" y="196">store</text>
<text x="380" y="212">pledge</text>
<text x="440" y="212">voucher</text>
<text x="500" y="212">status</text>
<text x="124" y="228">supply</text>
<text x="164" y="228">CA</text>
<text x="228" y="228">certificates</text>
<text x="108" y="260">supply</text>
<text x="180" y="260">enrollment</text>
<text x="260" y="260">response</text>
<text x="148" y="292">enroll</text>
<text x="204" y="292">status</text>
<text x="344" y="292">-</text>
<text x="376" y="292">store</text>
<text x="380" y="308">pledge</text>
<text x="436" y="308">enroll</text>
<text x="492" y="308">status</text>
<text x="108" y="324">supply</text>
<text x="168" y="324">CAcerts</text>
<text x="244" y="324">(optional)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<----- supply CA certificates  ----|
    |                                   |
    |<--- supply enrollment response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status
    |<--- supply CAcerts (optional) ----|
    |                                   |

]]></artwork></artset></figure>
<t>The content of the response objects is defined by the voucher <xref target="RFC8366"/> and the certificate <xref target="RFC5280"/>.</t>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<section anchor="pledge-voucher-response-processing"><name>Pledge: Voucher Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/sv".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example if given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufactures pledge implementation.</t>

<t>To perform the validation of multiple signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in section 5.6.1 in <xref target="RFC8995"/></t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Verify registrar signature as described in section 5.6.1 in <xref target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
  <t>Validate the registrar certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert").</t>
</list></t>

<t>If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar EE certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="pledge-voucher-status-telemetry"><name>Pledge: Voucher Status Telemetry</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-voucher-status" representation in JSON
  syntax
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-wrapped-ca-certificates-processing"><name>Pledge: Wrapped-CA-Certificate(s) Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/cc".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHALL</bcp14> only be done, if the voucher-response has been successfully processed by pledge.</t>

<t>The supply CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar pledge as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded "x5b".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

<t>If validation of the wrapping signature or another security check fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is in an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the pledge detects errors in the encoding of the payload.</t>

</section>
<section anchor="pledge-enrollment-response-processing"><name>Pledge: Enrollment Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/se".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure is: <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the registrar-agent.
If the verification of the LDevID certificate succeeds, the status <bcp14>SHALL</bcp14> be set to true, otherwise to FALSE.</t>

</section>
<section anchor="pledge-enrollment-status-telemetry"><name>Pledge: Enrollment Status Telemetry</name>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll-status is signed and results in a JSON-in-JWS object.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using its new LDevID credentials as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IDevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-enroll-status" representation in
  JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar-agent to provide the status responses to the registrar.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Voucher Status and Enroll Status Handling (Registrar-Agent to Domain Registrar)</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>If the TLS connection to the registrar was closed, the registrar-agent establishes a TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device in his domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device in his domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the verification of a signature of the status information is an addition to the described handling in section 5.9.4 of <xref target="RFC8995"/>.</t>

<t>According to <xref target="RFC8995"/> section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge-Status by Registrar-Agent from Pledge</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures performed with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="pledge-status-trigger-registrar-agent-to-pledge"><name>Pledge-Status - Trigger (Registrar-Agent to Pledge)</name>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/ps"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).
As the pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-request" representation in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-status-response-pledge-registrar-agent"><name>Pledge-Status - Response (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in section <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is :</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context" : { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in section <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize the bootstrapped credential information in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-response" representation in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.
In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>

</section>
</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher Request Artifact</name>

<t>The following enhancement extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.</t>

<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>The following tree diagram is mostly a duplicate of the contents of <xref target="RFC8995"/>, with the addition of the fields agent-signed-data, the registrar-proximity-certificate, and agent-signing certificate.
The tree diagram is described in <xref target="RFC8340"/>.
Each node in the diagram is fully described by the YANG module in Section <xref target="voucher-request-prm-yang-module"/>.</t>

<figure><artwork align="left"><![CDATA[
module: ietf-voucher-request-prm

 grouping voucher-request-prm-grouping
  +-- voucher
     +-- created-on?                               yang:date-and-time
     +-- expires-on?                               yang:date-and-time
     +-- assertion?                                enumeration
     +-- serial-number                             string
     +-- idevid-issuer?                            binary
     +-- pinned-domain-cert?                       binary
     +-- domain-cert-revocation-checks?            boolean
     +-- nonce?                                    binary
     +-- last-renewal-date?                        yang:date-and-time
     +-- prior-signed-voucher-request?             binary
     +-- proximity-registrar-cert?                 binary
     +-- agent-signed-data?                        binary
     +-- agent-provided-proximity-registrar-cert?  binary
     +-- agent-sign-cert?                          binary
]]></artwork></figure>

</section>
<section anchor="voucher-request-prm-yang-module"><name>YANG Module</name>

<t>The following YANG module extends the <xref target="RFC8995"/> Voucher Request to include a signed artifact from the registrar-agent (agent-signed-data) as well as the registrar-proximity-certificate and the
agent-signing certificate.</t>

<figure><artwork align="left"><![CDATA[
<CODE BEGINS> file "ietf-voucher-request-prm@2022-07-05.yang"

module ietf-voucher-request-prm {
  yang-version 1.1;

  namespace "urn:ietf:params:xml:ns:yang:ietf-voucher-request-prm";
  prefix vrprm;

  import ietf-restconf {
    prefix rc;
    description
      "This import statement is only present to access
       the yang-data extension defined in RFC 8040.";
    reference "RFC 8040: RESTCONF Protocol";
  }

  import ietf-voucher-request {
    prefix vcr;
    description
      "This module defines the format for a voucher request,
          which is produced by a pledge as part of the RFC8995
          onboarding process.";
    reference
      "RFC 8995: Bootstrapping Remote Secure Key Infrastructure";
  }

  organization
   "IETF ANIMA Working Group";

  contact
   "WG Web:   <http://tools.ietf.org/wg/anima/>
    WG List:  <mailto:anima@ietf.org>
    Author:   Steffen Fries
              <mailto:steffen.fries@siemens.com>
    Author:   Eliot Lear
              <mailto: lear@cisco.com>
    Author:   Thomas Werner
              <mailto: thomas-werner@siemens.com>
    Author:   Michael Richardson
              <mailto: mcr+ietf@sandelman.ca>";

  description
   "This module defines the format for a voucher-request form the
    pledge in responder mode. It bases on the voucher-request
    defined in RFC 8995, which is a superset of the voucher itself.
    It provides content to the MASA for consideration
    during a voucher-request.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.

    Copyright (c) 2021 IETF Trust and the persons identified as
    authors of the code. All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Simplified BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC xxxx; see the
    RFC itself for full legal notices.";


  revision 2022-07-05 {
    description
     "Initial version";
    reference
     "RFC XXXX: BRSKI for Pledge in Responder Mode";
  }

  // Top-level statement
  rc:yang-data voucher-request-prm-artifact {
    // YANG data template for a voucher-request.
    uses voucher-request-prm-grouping;
  }
  // Grouping defined for future usage
  grouping voucher-request-prm-grouping {
    description
      "Grouping to allow reuse/extensions in future work.";
    uses vcr:voucher-request-grouping {

      augment voucher {
        description "Base the voucher-request-prm upon the
          regular one";

        leaf agent-signed-data {
          type binary;
          description
            "The agent-signed-data field contains a JOSE [RFC7515]
             object provided by the Registrar-Agent to the Pledge.

             This artifact is signed by the Registrar-Agent
             and contains a copy of the pledge's serial-number.";
        }

        leaf agent-provided-proximity-registrar-cert {
          type binary;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             The first certificate in the registrar TLS server
             certificate_list sequence (the end-entity TLS
             certificate; see RFC 8446) presented by the
             registrar to the registrar-agent and provided to
             the pledge.
             This MUST be populated in a pledge's voucher-request
             when an agent-proximity assertion is requested.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile
             RFC 8446: The Transport Layer Security (TLS)
             Protocol Version 1.3";
        }

        leaf-list agent-sign-cert{
          type binary;
          min-elements 1;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             This certificate can be used by the pledge,
             the registrar, and the MASA to verify the signature
             of agent-signed-data. It is an optional component
             for the pledge-voucher request.
             This MUST be populated in a registrar's
             voucher-request when an agent-proximity assertion
             is requested.
             It is defined as list to enable inclusion of further
             certificates along the certificate chain if different
             issuing CAs have been used for the registrar-agent
             and the registrar.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile";
        }
      }
    }
  }
}

<CODE ENDS>
]]></artwork></figure>

<t>Examples for the PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                        Description                       Reference
 tv                         create pledge-voucher-request     [THISRFC]
 te                         create pledge-enrollment-request  [THISRFC]
 sv                         supply voucher response           [THISRFC]
 se                         supply enrollment response        [THISRFC]
 cc                         supply CA certificates to pledge  [THISRFC]
 ps                         query pledge status               [THISRFC]
 requestenroll              supply PER to registrar           [THISRFC]
 wrappedcacerts             request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>The credential used by the registrar-agent to sign the data for the pledge should not contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (a "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could be easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due to state creation on the pledge (the pledge may produce a voucher, and refuse to produce another one).
One mitigation may be that the pledge does does not limited the number of voucher requests it creates until at least one has finished, or a single onboarding state may expire after a certain time.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration)
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns on misusage of an registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rouge pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if his product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in section <xref target="voucher-request-prm-yang"/> is bases on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
Therefore similar considerations as described in <xref target="RFC8995"/> section 11.7 (Security Considerations) apply.
The YANG module specified in this document defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.
The use of YANG to define data structures via the "yang-data" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason these guidelines do not follow the template described by <xref target="RFC8407"/> section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows. 
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC5280' target='https://www.rfc-editor.org/info/rfc5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author fullname='D. Cooper' initials='D.' surname='Cooper'><organization/></author>
<author fullname='S. Santesson' initials='S.' surname='Santesson'><organization/></author>
<author fullname='S. Farrell' initials='S.' surname='Farrell'><organization/></author>
<author fullname='S. Boeyen' initials='S.' surname='Boeyen'><organization/></author>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<author fullname='W. Polk' initials='W.' surname='Polk'><organization/></author>
<date month='May' year='2008'/>
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC7030' target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference anchor='RFC7515' target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8366' target='https://www.rfc-editor.org/info/rfc8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<date month='May' year='2018'/>
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor='RFC8610' target='https://www.rfc-editor.org/info/rfc8610'>
<front>
<title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
<author fullname='H. Birkholz' initials='H.' surname='Birkholz'><organization/></author>
<author fullname='C. Vigano' initials='C.' surname='Vigano'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2019'/>
<abstract><t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8610'/>
<seriesInfo name='DOI' value='10.17487/RFC8610'/>
</reference>



<reference anchor='RFC8995' target='https://www.rfc-editor.org/info/rfc8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>


<reference anchor='I-D.ietf-anima-jws-voucher'>
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname='Thomas Werner' initials='T.' surname='Werner'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='24' month='October' year='2022'/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that has been signed using a Cryptographic Message
   Syntax (CMS) structure.  This memo introduces a variant of the
   voucher structure in which CMS is replaced by the JSON Object Signing
   and Encryption (JOSE) mechanism described in [RFC7515] to support
   deployments in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, MIME types are
   registered and examples are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-jws-voucher-05'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-jws-voucher-05.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-netconf-sztp-csr'>
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Sean Turner' initials='S.' surname='Turner'>
         <organization>sn3rd</organization>
      </author>
      <date day='2' month='March' year='2022'/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netconf-sztp-csr-14'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-netconf-sztp-csr-14.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-anima-rfc8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin' initials='M.' surname='Pritikin'>
         <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert' initials='T. T.' surname='Eckert'>
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma' initials='Q.' surname='Ma'>
         <organization>Huawei</organization>
      </author>
      <date day='31' month='January' year='2022'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON
   document that has been signed using a Cryptographic Message Syntax
   (CMS) structure.  Other YANG-derived formats are possible.  The
   voucher artifact is normally generated by the pledge&#39;s manufacturer
   (i.e., the Manufacturer Authorized Signing Authority (MASA)).

   This document only defines the voucher artifact, leaving it to other
   documents to describe specialized protocols for accessing it.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-00'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-rfc8366bis-00.txt' type='TXT'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2986' target='https://www.rfc-editor.org/info/rfc2986'>
<front>
<title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
<author fullname='M. Nystrom' initials='M.' surname='Nystrom'><organization/></author>
<author fullname='B. Kaliski' initials='B.' surname='Kaliski'><organization/></author>
<date month='November' year='2000'/>
<abstract><t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process.  The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2986'/>
<seriesInfo name='DOI' value='10.17487/RFC2986'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC7252' target='https://www.rfc-editor.org/info/rfc7252'>
<front>
<title>The Constrained Application Protocol (CoAP)</title>
<author fullname='Z. Shelby' initials='Z.' surname='Shelby'><organization/></author>
<author fullname='K. Hartke' initials='K.' surname='Hartke'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2014'/>
<abstract><t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t><t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t></abstract>
</front>
<seriesInfo name='RFC' value='7252'/>
<seriesInfo name='DOI' value='10.17487/RFC7252'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC8407' target='https://www.rfc-editor.org/info/rfc8407'>
<front>
<title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<date month='October' year='2018'/>
<abstract><t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t></abstract>
</front>
<seriesInfo name='BCP' value='216'/>
<seriesInfo name='RFC' value='8407'/>
<seriesInfo name='DOI' value='10.17487/RFC8407'/>
</reference>



<reference anchor='RFC8792' target='https://www.rfc-editor.org/info/rfc8792'>
<front>
<title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='E. Auerswald' initials='E.' surname='Auerswald'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the &quot;single backslash&quot; strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the &quot;double backslash&quot; strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t></abstract>
</front>
<seriesInfo name='RFC' value='8792'/>
<seriesInfo name='DOI' value='10.17487/RFC8792'/>
</reference>



<reference anchor='RFC9052' target='https://www.rfc-editor.org/info/rfc9052'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need to be able to define basic security services for this data format.  This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  </t><t>This document, along with RFC 9053, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='STD' value='96'/>
<seriesInfo name='RFC' value='9052'/>
<seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>



<reference anchor='RFC9110' target='https://www.rfc-editor.org/info/rfc9110'>
<front>
<title>HTTP Semantics</title>
<author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'><organization/></author>
<author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'><organization/></author>
<author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'><organization/></author>
<date month='June' year='2022'/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name='STD' value='97'/>
<seriesInfo name='RFC' value='9110'/>
<seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>



<reference anchor='RFC9238' target='https://www.rfc-editor.org/info/rfc9238'>
<front>
<title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='J. Latour' initials='J.' surname='Latour'><organization/></author>
<author fullname='H. Habibi Gharakheili' initials='H.' surname='Habibi Gharakheili'><organization/></author>
<date month='May' year='2022'/>
<abstract><t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t><t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t></abstract>
</front>
<seriesInfo name='RFC' value='9238'/>
<seriesInfo name='DOI' value='10.17487/RFC9238'/>
</reference>


<reference anchor='I-D.ietf-anima-brski-ae'>
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname='David von Oheimb' initials='D.' surname='von Oheimb'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Steffen Fries' initials='S.' surname='Fries'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Hendrik Brockhaus' initials='H.' surname='Brockhaus'>
         <organization>Siemens AG</organization>
      </author>
      <date day='24' month='October' year='2022'/>
      <abstract>
	 <t>   This document enhances Bootstrapping Remote Secure Key Infrastructure
   (BRSKI, RFC 8995) to allow employing alternative enrollment
   protocols, such as CMP.

   Using self-contained signed objects, the origin of enrollment
   requests and responses can be authenticated independently of message
   transfer.  This supports end-to-end security and asynchronous
   operation of certificate enrollment and provides flexibility where to
   authenticate and authorize certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-brski-ae-03'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-brski-ae-03.txt' type='TXT'/>
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="April"/>
  </front>
  <format type="PNG" target="https://raw.githubusercontent.com/anima-wg/anima-brski-prm/main/pics/brski_prm_overview.png"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC6125' target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<author fullname='J. Hodges' initials='J.' surname='Hodges'><organization/></author>
<date month='March' year='2011'/>
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".<br />
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge Voucher Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar Voucher Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher Response, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the registrar-agent</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar EE certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar EE certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge-voucher request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="voucher-request-prm-yang-module"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="uc2"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/> .</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="uc2"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="uc2"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="uc2"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="uc2"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y9+XrbRrYv+j+fApc532cpIWlJHhJrpwdZUhKlPaglJe50
dt9siIQkxCTADYCSFdv7We6z3Ce7a6qqVYUCSTlOd/qcq687lkig5lrz+q3h
cNhr8maa7SZPT07/cpTc5M1VcjzNJpdZkhfJSVbPy2KSVcnzcpIlG/TQ8Pjk
+WYvPT+vsmt5Dz/qTcpxkc6gqUmVXjTDPGsuhmmRz9LheVW/zofzajbcetxL
qyzdTV7Osypt8rKok7SYJM/TIr3MZlnR9G4ud5O9F0fP95JXX/cmaQMN7mzt
7PTqBh78KZ2WBXzSVIusl88r+q1udra2nmzBI4vzWV7X0OrZ7RyeOjo8++pu
/Y3TZjepm0lvnu/2kqQpx7vJvdusvgd/jMvZPB037oP6dlZlF7X6oKwa/xMY
YlE2+UWeTeDDoqSnmip3zaSL5qqsdntDWG948XSUfFXlWQ3P8WKeNtnFRVbY
T8sKxnua49jrZO9r+MTshHzIPWQZ9PCyacrhN+lVMTzJi8vkMU4ib253k+eL
Ih9f0Zwm0Me9L7Y/f/CE57gomgqe+DqrZmlxCx9lszSf4qLQOEYXOI4/19zX
CNYEHllU+W5y1TTzevf+/Zubm5H6+r6Z2dkoeZVVRVbZqZ1dlbO0dp/+q6bW
0DiGNzSOD5na4Sh5lqVuYofTvGzMRzSr/bwel8npLaziTE/jBMba5PBXWtdZ
8rmdxat0Os3rbDrNCjuV/W+GXzzYeqincgr39ZesmsKRho/nV3Q3+p893E4e
Pky++PyL5AncjL6b6RSG9OcxjoWmJ8N/PqJxpNWkLgs7ief4UTZN9oNveZeg
x2wKy5iclhfNDdyx5FVZva5dV7Nx9RmSgD/X5tHRONULatZTfX2/Ny5hYvn5
olFXAlb3IP/5tVvd+nVpPqHBHJVn8F69mAKFGN+OiqkbRQbPjibw7J9hR4KH
rrNikeEtv6zKxVyIAB46pFkJv/+W/vgzTmQEfb3Hp4FELs53+bHhzeX9gMb1
ihLOV5NfU9snX+0/2vliS359/PnjHffrA/n1860H5oHPH20/kl+/2HpoPv3i
wePH5tfH2/bTJ0/o2aPhwUgR259v6uF1uRhfZZX3bZHhAlwM61+a+XBcV5FX
q4sxdnWe17u9vLgI5rHz5Aszisc7D7fNiHce7dhhuhE/3Prc/Pr5E/PAky37
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
9gsFt47I/tIKohdZw+U54pqglUioYqIxwrlQdSEnTvVQO6iU47ic6SLfWvbV
AIjOxea0Oa6tE2lJW9viv8aO4BEEerUCQ7QDPFSkGG7KDBrOUGu3SKWiNV9h
d/J1uCXWbHNir6gsoC0s21pRq77SsPxR2QC6FWPSkiiwGKl7AVdF4sIptqx+
rfx1Lha3hT0qa0NhtDiHRVWY8MAVQaRkBW3f140+HVEz60Dh7ZNa9/2JXbC7
3myiBz08JiQ00sTUrJO+iW3s4/Xqw1m6xN9VqLeK+jRYr0vKtK1JJlu3zMdk
XbULHPtHMuqu2w98XYUat+sWd11YtyPL9mIQWCiMBLf06OlNw2Zpc3hXzLBO
8GgfSfHIMOK0XlCFCSoaEayUbGZ7cVohvQfEhwW62LbBfZj0VCmFkavYCS9j
P7UxAcnDN2/wsDyCfyRQZEyQeEHks7MbPcap+vBBVyoki1QpnjcayokDt8L4
O1EAepFwSlBfQLF1lLpo4Zk5xj4hT7kCl7JWpXpxbiZRB8g7FhfisxAlYsUH
n+kvP8M4LQVKEsCIJCEaifrgHf4uQD3oyHae/6QFURJteH/PfP3Omg/a7dhT
bT5INr492d9UT7jn33GOCz770dZHd6GiG1Z9hH/aoi8Wn8dqrXdoxf1hxyJk
7de0Qvr5f1Mw3Ye38mUrXuNDWgkb+eMHr8uyV1a3gs2YwgLEF5tjZHsm6Bv+
xDJwOoi7kJ1Qi5HgS8mvXYzENvKvWoxEz+jwY8zo8NfM6H9ar7Q/CT/y/vwf
2l6DxYHLi5lnHu5Px8rJIScJPjqBO67/j0DQhkDRAq3xrrtIKrTNMv7TP+4w
lvCMfdQZufHctRVJOGIbrpnQnVsxmsY1caYPbMV+pOkSSeyKSn3QTfsxe9NQ
iilz0aODf3xYMwx6DysOIizqX3doxlFtC+pu6feyO+A9/c8iyPbGHq5/Y83s
OknOrzkNyf4pt/rHD23lS2oFBefWQi5Z/4QLk1KO0z9p/eE/LCGM9/YpkJF0
4XW3QN7CKqrJB27Bl7qV9aa9FqO4A6fQFTbC/FDBXNGx6pZvLrssrZF38s3k
+pTb/mBJ4Eu3E/WHjwVaWXr81p5RkrkJ/S4kAbO/soeukIr5REca/6YSAjWx
bMN/BdVCK6hxjlqWcTcexiwgbCNZxjXU7z8aa+EH8Kslfy5fy+zjr+XSVixW
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
+4edq+k4P3oMz1+NH7yYjouT+fnOw//s5S/zb6/+vvP9gp9+8jB9tT2ffPM6
f7b/7S9//9u38x9e3TTnxffND7Pvb49+LvPnB4e3z3/56/aLn8cPX54e1Uez
R//Zuz6fvZjit2cHL749/fnv5fibk6O/bk1PzrcePfzh1Vf5y++u/vbXs60n
R/lN/sODb6c//O1k+vf97etzGNPRz0c3z38++v/ae9smR5FkTfR7/oqyni/d
17rqAEpld561vWYlCZDIBKUCIhBsrY0hUBcSIJESmXo5Nv/9Ph6AXrKyqnvO
2b1md++YzUxNZkIQ4eH++OMeL/7lprIHk8pehtwe8DvbC/Df+MU5fu76C/qO
sQr9rvI47R1mnbAMTZHV/z8tZ36uzF31EPrJl5sy7rBDADkEmjgkfbSfqZbL
R0qUOYOJyMtQMTout3qhkg8nIg2do7UI8tKZ+PfDieLsmep8uXGcQd6fcHXg
cSbmuribCKsfKl1/khmvHnc2tifYLA/vAhGrM9M+etNUF7phT4pkLDKrFyjq
l5s+y7q7UE/QArub8G7bguNxa8uL/dJWLZ0L1gt52LGHucN00cUXl4nSfWYe
c4RefrlJ2SrezTNVZ1M8YTodrygNR1e5WxgOG7BbNi17PLNWHmSKUTgTbbt3
hPEiVmUqjmIbHGlE6AOf8H3bhyX6YHqrXsZUccsU1hNK0wJX0WrPTQpryla9
xUwvt/7S2s4L9uVm5BbpMsqsCG87TLG6MU88z5t0J35iMMUZnH6eJoar6zuX
G/1Jgf5k29fIi7sz1fpys3GPIoRGTcJjKrg6un3siKPts4nw88jVVWWmVV44
NB7R+2KWJ8dJMdnEwrIdNXHDIsyFVn256UJvFzOlLFx/v02m1jLyRmqiddcR
v/cnSvIcTsu+w9W+rSc9W4jMzQ0mFLXPeTKYdBzMvvHlRrDM6mA0/VBLDpg9
Az+zQGEjphtP9WymbKxDX5apQXM3UUYKRudBl3SRj3aQ/Jcbg02TiaPnWaCp
/qwwAm/ZW8542PWM1CX94FOxtIv9NsgTH5batf08mxyF6uepN1HSF7fYf7mJ
8MRdqKcPkemUtteLfP125xWZOi+MqVixCPK484zkwdb3lePvM/TxEX1cxX66
ibL7CacR6ZiLMeSuT7KwF3HrdmayfmSUe1sXmsNL2857B6E4ylzYWqSzUByN
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
y1ZlT2QXwYtZ7WLTqsLmeQGnh+DF8DKozZcbgg2DWTBN3Z8mY5gIxM7Cud41
Z/jevNiqMN0N/v4MEgi3BxKqMgGYf57kjsOnTgetqK2zRi+Vsi8EM0TtpCjU
MAClHU84FZx3ZA97u6BQM2aOju4qOTt7QCO1EBqJdo+n0aesqwvPGs+LWIUp
IwwM2YUpq65mTB2/6818gMGyh8CCVTPQ4zKCEf9zIdkRoZiZp7xw+nBbS/SF
iyA5JgfhixRKN3QzQ3UHbBcdmeUMLC1A67HK9whcbKY7A8+s/GgID7Qc7WfT
MHUVR/O+3Ey/Hny38jw/YWMzLBJld7A766PQc3+SIyQzGMBbHcTKKQSTARjz
k/5kmU5dI95HGJF9YFOG0DREOGR/P/wxf1cxdwwt9sdtkDdNIDC1H2BEhsly
w46y7h03dq9c3b3CbNQIoBRBwvCRcBPJ0vcJTtTGZcOaoENNMuDISF/gIMN+
olAyQFeYou+Fz3QAdX/av+9wLs15FCrv0ruVl6U9tKJbxsTP+4nndBAw2rEC
NzMQR8/73LH1rxt84TDnXeEUyeM82z9hXsy5sFxP2+9jnpahkq98tOJUbrbn
cwQISTY5xOb9o1OwW6fY7dEXde6rHIEBuaUCAWUK2hvYufXqKfx+lCsUjG1B
Dg6UFBGeveTaaKW8e7/wT8Hf12lUrorX2W75+MIX8bj3m/O5QCj72+Jr74+S
59kDf3GdxPw4H4xuezCJw8s01KLdfecYjpLbLvttuv/88FHVgofR/u75cbl4
Wto7eefvVcmcJhtYZ+eaXGCTCvxj8VWunl1frvujtOEPCuSc047RZrZe0NLE
eWv8t42xUw7y/FS1lvvnm9wj3V1CKe+mMXkaT6aC/1ivk4tbqigpLrfqx+t1
Nk8+faCiwlcrVlXb2rmN6E2dhNNC2c8Y5S9N62m0vZnVG0SbQtZvbzM4nRpd
yV2F8uFzkYK3T3/4+ae6jz/9Ur8oqyTvms3mf6w3u2jTnJyomoOo3xTLuc7D
npv+ZhyMxnHOz1535OILfy0z+6bYdrtFUWZlmy0AWxp8e8tpcyE2ZPLTjy4y
bErIv5vwZU3CV+1o3d/+z834BppRhAWvxt7XjjPg9NyXm5eZ1l2GLoCksFWw
2aeZdu94ejd1dOf2UeUboe/Xk058/0Q54lXvEPn3h4sckDbrgC8uI1Pgt1Ye
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
U9dAO1vD6xEhjGkHQePI/x9abEAhJnMCAA==

-->

</rfc>

