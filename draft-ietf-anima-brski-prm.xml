<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.33 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-09" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2023"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<?line 116?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<?line 124?>

<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of the BRSKI registrar in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate, are exchanged and authenticated utilizing voucher-request and voucher-response artifacts as defined in <xref target="RFC8995"/>.
Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA).
The MASA issues the voucher and provides it via the domain registrar to the pledge.
<xref target="RFC8366"/> specifies the format of the voucher artifacts.
<xref target="I-D.ietf-anima-rfc8366bis"/> further enhances the format of the voucher artifacts and also the voucher-request.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with pledge in responder mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered to generate bootstrapping requests in the customer site/domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the domain registrar.
The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
BRSKI-PRM supports the identification of the registrar-agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the registrar-agent is a component used by an installer and not co-located with the registrar.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server, the registrar-agent acting as client, and the domain registrar.</t>
  <t>enables the usage of arbitrary transports between the pledge and the domain registrar via the registrar-agent; security is addressed at the application layer, and both IP-based and non-IP connectivity can be used between pledge and registrar-agent.</t>
  <t>allows the application of registrar-agent credentials to establish TLS connections to the domain registrar; these are different from the IDevID of the pledge.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.
For the interaction with the domain registrar, the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
To utilize the EST server endpoints on the domain registrar, the registrar-agent will act as client toward the registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is only optionally supported.
If TLS is optionally used between the registrar-agent and the pledge, the registrar-agent needs to identify the pledge based on its product serial number rather than the hostname as this is not set in an IDevID certificate.</t>

<t>BRSKI-PRM is designed to rely on object security to support also for alternative transports for which TLS may not be available, e.g., Bluetooth or NFC.
This is achieved through an additional signature wrapping of the exchanged data objects involving the registrar-agent for transport.</t>

<t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar must perform the pre-processing of this wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges which can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End Entity.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>.
Endpoints are accessible via .well-known URIs.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available on-site.
It may be at a central site or an internet resident "cloud" service.
The on-site to off-site connection may also be temporary and, e.g., only available at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge Enrollment-Request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge Voucher-Request is a request for a voucher sent to the domain registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar Enrollment-Request is the CSR of a PER sent to the CA by the domain registrar (RA).</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar Voucher-Request is a request for a voucher signed by the domain registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The latter is indicated by a string like "BASE64URL(content-name)".</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer site/domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The registrar-agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the availability of the pledge and the registrar-agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The security of communication between the registrar-agent and the pledge must not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the registrar-agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication. 
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC6125"/> methods.</t>
  <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher-request or an enrollment-request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-requests and -responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is based on JOSE <xref target="RFC7515"/> and further specified in <xref target="exchanges_uc2"/> to address the requirements stated in <xref target="req-sol"/> above.
In constrained environments it may be provided based on COSE <xref target="RFC9052"/> and <xref target="RFC9053"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects (the voucher-request/response as known from BRSKI and the enrollment-request/response as introduced by BRSKI-PRM) with the help of a registrar-agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.
Note that the Join Proxy is neglected in the figure.
It <bcp14>MAY</bcp14>  be used as specified in BRSKI <xref target="RFC8995"/> by the registrar-agent to connect to the registrar.
The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="456" viewBox="0 0 456 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 40,48 L 40,232" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,432" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,432" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 40,48 L 72,48" fill="none" stroke="black"/>
<path d="M 168,48 L 200,48" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,432 L 424,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<polygon class="arrowhead" points="48,232 36,226.4 36,237.6" fill="black" transform="rotate(90,40,232)"/>
<g class="text">
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="412" y="180">BRSKI-</text>
<text x="404" y="196">MASA</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">EST</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="356" y="308">(PKI</text>
<text x="392" y="308">RA)</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="220" y="324">LDevID</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="368" y="404">Certificate</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="332" y="420">Authority)</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="448" y="436">.</text>
<text x="288" y="452">.........................................</text>
<text x="236" y="468">&quot;Domain&quot;</text>
<text x="316" y="468">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    +---- Drop Ship -----| Vendor Service            |
    |                    +---------------+-----------+
    |                    | M anufacturer |           |
    |                    | A uthorized   | Ownership |
    |                    | S igning      | Tracker   |
    |                    | A uthority    |           |
    |                    +---------------+-----------+
    |                                         ^
    |                                         | BRSKI-
    |                                         | MASA
    |          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  EST   | Registrar |  .
|        |<------>|            |<------>| (PKI RA)  |  .
|        |     .  |     LDevID |        |           |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI Certificate |  .
               .           |        Authority)      |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Any other protocols can be used as long as they support the exchange of the necessary data objects.
This includes CoAP or protocol to be used over Bluetooth or NFC connections
A pledge acting as a server during bootstrapping leads to some differences for BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent <bcp14>MUST</bcp14> be possible.</t>
      <t>As the registrar-agent <bcp14>MUST</bcp14> be able to request data objects for bootstrapping of the pledge, the pledge <bcp14>MUST</bcp14> offer corresponding endpoints as defined in <xref target="pledge_ep"/>.</t>
      <t>The registrar-agent <bcp14>MUST</bcp14> provide additional data to the pledge in the context of the voucher-request trigger, which the pledge <bcp14>MUST</bcp14> include into the PVR as defined in <xref target="pvrt"/> and <xref target="pvrr"/>.
This allows the registrar to identify, with which registrar-agent the pledge was in contact.</t>
      <t>The order of exchanges in the BRSKI-PRM call flow is different those in BRSKI <xref target="RFC8995"/>, as the PVR and PER are collected at once and provided to the registrar.
This enables bulk bootstrapping of several devices.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges and performs a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar LDevID certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the TLS session establishment and also to verify that the registrar-agent is authorized to perform the bootstrapping of the distinct pledge.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general, the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
A registrar with combined functionality of BRSKI and BRSKI-PRM detects if the bootstrapping is performed by the pledge directly (BRSKI case) or by the registrar-agent (BRSKI-PRM case) based on the utilized credential for authentication (either pledgeâs IDevID or LDevID from registrar-agent), see also <xref target="exchanges_uc2_2"/>.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
A MASA is able to support enrollment via registrar-agent without changes unless it checks the vouchers proximity indication, in which case it would need to be enhanced to support BRSKI-PRM to also accept the agent-proximity.</t>
</list></t>

<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement in the PVR and in the voucher, that the registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is therefore a weaker assertion then "proximity", which is defined in section 4 of <xref target="RFC8366"/>.
It is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the LDevID by the registrar via the TLS handshake and includes that LDevID as the "proximity-registrar-cert" into the voucher request to allow for the MASA to decide whether or how to respond to the voucher-request. Until the pledge receives the voucher, the registrar certificate is accepted provisionally.
In contrast, in BRSKI-PRM, the pledge has no direct connection to the registrar and takes the LDevID provided by the registrar-agent from the PVR trigger message and includes it into his PVR.
This allows not only the MASA, but also the registrar to decide whether or how to proceed with the BRSKI-PRM PVR.
In a similar fashion, the pledge accepts the registrar certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.
See also Section 5 of <xref target="RFC8995"/> on "PROVISIONAL accept of server cert".</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>The pledge is triggered by the registrar-agent to generate the PVR and PER.
It will also be triggered for processing of the responses and the generation of status information one the registrar-agent has received the responses from the registrar later in the process.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction as responder with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The endpoints are defined with short names to also accommodate for the constraint case.
The URI path begins with "http://www.example.com/.well-known/brski" followed by a path-suffix that indicates the intended operation.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure1">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge voucher-request creation - Returns PVR</c>
      <c>/tpvr</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge enrollment-request - Returns PER</c>
      <c>/tper</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Supply voucher to pledge - Returns pledge voucher-status</c>
      <c>/svr</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply enrollment-response to pledge - Returns pledge enrollment-status</c>
      <c>/ser</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply CA certs to pledge</c>
      <c>/scac</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query status of pledge - Returns pledge-status</c>
      <c>/qps</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent as a new component provides a message passing service between the pledge and the domain registrar.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher-request/response, the enrollment-request/response, as well as related telemetry and status information.</t>

<t>For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.
The communication between the registrar-agent and the pledge <bcp14>MAY</bcp14> be protected using TLS as outlined in <xref target="exchanges_uc2_1"/>.
In this case the registrar-agent needs to the IDevID CA certificates to verify the IdevID certificate and also the proof of possession of the IDevID private key by the pledge.
This new component changes the general interaction between the pledge and the domain registrar as shown in <xref target="uc2figure"/>.</t>

<t>For the communication with the registrar, the registrar-agent uses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
These endpoints do not expect signature wrapped-objects, which are used b BRSKI-PRM.
This specifically applies for the enrollment-request and the provisioning of CA certificates.
To accommodate the use of signature-wrapped object, the following additional endpoints are defined for the <em>registrar</em>.
Operations and their corresponding URIs:</t>

<texttable title="Additional endpoints on the registrar" anchor="eppfigure2">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Supply PER to registrar</c>
      <c>/requestenroll</c>
      <c><xref target="exchanges_uc2_2_per"/></c>
      <c>Request (wrapped) CA certificates - Returns wrapped CA Certificates</c>
      <c>/wrappedcacerts</c>
      <c><xref target="exchanges_uc2_2_wca"/></c>
</texttable>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use its LDevID(RegAgt) when establishing a TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> makes a similar requirement.
In BRSKI-PRM, the SKID is used in favor of providing the complete LDEVID(RegAgt) certificate to accommodate also constraint environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SKID in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and to adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by prior administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.
This behavior is retained also in BRSKI-PRM.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair (to sign agent-signed-data).</t>
  <t>Registrar LDevID certificate: certificate of the domain registrar (to be provided to the pledge).</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped (to query discover specific pledges based on the serial number).</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> section 4 with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".
The product-serial-number composition is vendor dependent and may contain information regarding the vendor, the product type, and further information specific to the product instance. To allow distinction of pledges, the product-serial-number therfore needs to be sufficiently unique.</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

<t>As an alternative discovery mechanism GRASP M_DISCOVERY multicast with M_RESPONSE, based on <xref target="RFC8990"/>, may be used.
The specification of this approach to discover a pledge from the registrar-agent is left for further study.</t>

</section>
</section>
<section anchor="behavior-of-pledge-with-combined-functionality"><name>Behavior of Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator or responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a pledge enrollment-request (PER) or to provide an enrollment-response can be used for further certificates.</t>

</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification utilizes HTTP as transport.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects, which are not bound to specific transport security and stay the same across the communication from the pledge via the registrar-agent to the registrar..
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain registrar certificate (registrar LDevID certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the LDevID(RegAgt), as described in <xref target="exchanges_uc2_1"/>.
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> provide the LDevID(RegAgt) certificate identified by the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR in its RVR (see also <contact fullname="pvr-proc-reg"/>.</t>

<t>The MASA in turn verifies the registrar LDevID certificate is included in the PVR (contained in the "prior-signed-voucher-request" field of RVR) in the "agent-provided-proximity-registrar-certificate" leaf and may assert the PVR as "verified" or "logged".</t>

<t>In addition, the MASA can issue the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.
This agent-proximity is similar to the proximity assertion by the MASA when using BRSKI.
It is a stronger assertion than "logged", but it is weaker than the assertion "verified", which relies on ownership tracking.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx error status code as described in section 5.6 of <xref target="RFC8995"/>.
When successful, the voucher will then be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1088" width="560" viewBox="0 0 560 1088" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,248 L 32,336" fill="none" stroke="black"/>
<path d="M 32,392 L 32,592" fill="none" stroke="black"/>
<path d="M 32,632 L 32,712" fill="none" stroke="black"/>
<path d="M 32,728 L 32,752" fill="none" stroke="black"/>
<path d="M 32,808 L 32,896" fill="none" stroke="black"/>
<path d="M 32,952 L 32,1072" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 112,32 L 112,96" fill="none" stroke="black"/>
<path d="M 168,104 L 168,208" fill="none" stroke="black"/>
<path d="M 168,256 L 168,336" fill="none" stroke="black"/>
<path d="M 168,384 L 168,592" fill="none" stroke="black"/>
<path d="M 168,624 L 168,704" fill="none" stroke="black"/>
<path d="M 168,736 L 168,752" fill="none" stroke="black"/>
<path d="M 168,816 L 168,896" fill="none" stroke="black"/>
<path d="M 168,960 L 168,1072" fill="none" stroke="black"/>
<path d="M 208,32 L 208,96" fill="none" stroke="black"/>
<path d="M 240,32 L 240,96" fill="none" stroke="black"/>
<path d="M 312,104 L 312,208" fill="none" stroke="black"/>
<path d="M 312,256 L 312,336" fill="none" stroke="black"/>
<path d="M 312,512 L 312,592" fill="none" stroke="black"/>
<path d="M 312,640 L 312,704" fill="none" stroke="black"/>
<path d="M 312,736 L 312,752" fill="none" stroke="black"/>
<path d="M 312,816 L 312,896" fill="none" stroke="black"/>
<path d="M 312,960 L 312,1008" fill="none" stroke="black"/>
<path d="M 312,1040 L 312,1072" fill="none" stroke="black"/>
<path d="M 336,32 L 336,96" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 432,104 L 432,208" fill="none" stroke="black"/>
<path d="M 432,256 L 432,336" fill="none" stroke="black"/>
<path d="M 432,400 L 432,496" fill="none" stroke="black"/>
<path d="M 432,576 L 432,592" fill="none" stroke="black"/>
<path d="M 432,640 L 432,704" fill="none" stroke="black"/>
<path d="M 432,736 L 432,752" fill="none" stroke="black"/>
<path d="M 432,816 L 432,896" fill="none" stroke="black"/>
<path d="M 432,960 L 432,976" fill="none" stroke="black"/>
<path d="M 432,1040 L 432,1072" fill="none" stroke="black"/>
<path d="M 448,32 L 448,96" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 536,104 L 536,208" fill="none" stroke="black"/>
<path d="M 536,256 L 536,336" fill="none" stroke="black"/>
<path d="M 536,400 L 536,512" fill="none" stroke="black"/>
<path d="M 536,560 L 536,592" fill="none" stroke="black"/>
<path d="M 536,640 L 536,704" fill="none" stroke="black"/>
<path d="M 536,736 L 536,752" fill="none" stroke="black"/>
<path d="M 536,816 L 536,896" fill="none" stroke="black"/>
<path d="M 536,960 L 536,1008" fill="none" stroke="black"/>
<path d="M 536,1040 L 536,1072" fill="none" stroke="black"/>
<path d="M 552,32 L 552,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 112,32 L 208,32" fill="none" stroke="black"/>
<path d="M 240,32 L 336,32" fill="none" stroke="black"/>
<path d="M 376,32 L 448,32" fill="none" stroke="black"/>
<path d="M 472,32 L 552,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 112,96 L 208,96" fill="none" stroke="black"/>
<path d="M 240,96 L 336,96" fill="none" stroke="black"/>
<path d="M 376,96 L 448,96" fill="none" stroke="black"/>
<path d="M 472,96 L 552,96" fill="none" stroke="black"/>
<path d="M 40,176 L 160,176" fill="none" stroke="black"/>
<path d="M 40,192 L 160,192" fill="none" stroke="black"/>
<path d="M 40,256 L 56,256" fill="none" stroke="black"/>
<path d="M 136,256 L 160,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 136,272 L 160,272" fill="none" stroke="black"/>
<path d="M 40,288 L 80,288" fill="none" stroke="black"/>
<path d="M 128,288 L 160,288" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 136,320 L 160,320" fill="none" stroke="black"/>
<path d="M 40,336 L 80,336" fill="none" stroke="black"/>
<path d="M 128,336 L 160,336" fill="none" stroke="black"/>
<path d="M 176,400 L 216,400" fill="none" stroke="black"/>
<path d="M 264,400 L 304,400" fill="none" stroke="black"/>
<path d="M 176,448 L 208,448" fill="none" stroke="black"/>
<path d="M 256,448 L 304,448" fill="none" stroke="black"/>
<path d="M 320,512 L 408,512" fill="none" stroke="black"/>
<path d="M 456,512 L 528,512" fill="none" stroke="black"/>
<path d="M 320,560 L 392,560" fill="none" stroke="black"/>
<path d="M 472,560 L 528,560" fill="none" stroke="black"/>
<path d="M 176,576 L 200,576" fill="none" stroke="black"/>
<path d="M 280,576 L 304,576" fill="none" stroke="black"/>
<path d="M 176,640 L 216,640" fill="none" stroke="black"/>
<path d="M 264,640 L 304,640" fill="none" stroke="black"/>
<path d="M 320,656 L 344,656" fill="none" stroke="black"/>
<path d="M 392,656 L 424,656" fill="none" stroke="black"/>
<path d="M 320,672 L 344,672" fill="none" stroke="black"/>
<path d="M 400,672 L 424,672" fill="none" stroke="black"/>
<path d="M 176,688 L 192,688" fill="none" stroke="black"/>
<path d="M 288,688 L 304,688" fill="none" stroke="black"/>
<path d="M 288,736 L 304,736" fill="none" stroke="black"/>
<path d="M 176,752 L 192,752" fill="none" stroke="black"/>
<path d="M 40,816 L 56,816" fill="none" stroke="black"/>
<path d="M 136,816 L 160,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 160,832" fill="none" stroke="black"/>
<path d="M 40,848 L 64,848" fill="none" stroke="black"/>
<path d="M 144,848 L 160,848" fill="none" stroke="black"/>
<path d="M 40,864 L 64,864" fill="none" stroke="black"/>
<path d="M 144,864 L 160,864" fill="none" stroke="black"/>
<path d="M 40,880 L 56,880" fill="none" stroke="black"/>
<path d="M 40,896 L 56,896" fill="none" stroke="black"/>
<path d="M 136,896 L 160,896" fill="none" stroke="black"/>
<path d="M 176,960 L 224,960" fill="none" stroke="black"/>
<path d="M 272,960 L 304,960" fill="none" stroke="black"/>
<path d="M 176,976 L 200,976" fill="none" stroke="black"/>
<path d="M 288,976 L 304,976" fill="none" stroke="black"/>
<path d="M 320,992 L 336,992" fill="none" stroke="black"/>
<path d="M 512,992 L 528,992" fill="none" stroke="black"/>
<path d="M 320,1008 L 352,1008" fill="none" stroke="black"/>
<path d="M 504,1008 L 528,1008" fill="none" stroke="black"/>
<path d="M 176,1056 L 200,1056" fill="none" stroke="black"/>
<path d="M 280,1056 L 304,1056" fill="none" stroke="black"/>
<polygon class="arrowhead" points="536,992 524,986.4 524,997.6" fill="black" transform="rotate(0,528,992)"/>
<polygon class="arrowhead" points="536,512 524,506.4 524,517.6" fill="black" transform="rotate(0,528,512)"/>
<polygon class="arrowhead" points="432,656 420,650.4 420,661.6" fill="black" transform="rotate(0,424,656)"/>
<polygon class="arrowhead" points="328,1008 316,1002.4 316,1013.6" fill="black" transform="rotate(180,320,1008)"/>
<polygon class="arrowhead" points="328,672 316,666.4 316,677.6" fill="black" transform="rotate(180,320,672)"/>
<polygon class="arrowhead" points="328,560 316,554.4 316,565.6" fill="black" transform="rotate(180,320,560)"/>
<polygon class="arrowhead" points="312,1056 300,1050.4 300,1061.6" fill="black" transform="rotate(0,304,1056)"/>
<polygon class="arrowhead" points="312,976 300,970.4 300,981.6" fill="black" transform="rotate(0,304,976)"/>
<polygon class="arrowhead" points="312,960 300,954.4 300,965.6" fill="black" transform="rotate(0,304,960)"/>
<polygon class="arrowhead" points="312,736 300,730.4 300,741.6" fill="black" transform="rotate(0,304,736)"/>
<polygon class="arrowhead" points="312,640 300,634.4 300,645.6" fill="black" transform="rotate(0,304,640)"/>
<polygon class="arrowhead" points="312,448 300,442.4 300,453.6" fill="black" transform="rotate(0,304,448)"/>
<polygon class="arrowhead" points="312,400 300,394.4 300,405.6" fill="black" transform="rotate(0,304,400)"/>
<polygon class="arrowhead" points="184,960 172,954.4 172,965.6" fill="black" transform="rotate(180,176,960)"/>
<polygon class="arrowhead" points="184,752 172,746.4 172,757.6" fill="black" transform="rotate(180,176,752)"/>
<polygon class="arrowhead" points="184,688 172,682.4 172,693.6" fill="black" transform="rotate(180,176,688)"/>
<polygon class="arrowhead" points="184,576 172,570.4 172,581.6" fill="black" transform="rotate(180,176,576)"/>
<polygon class="arrowhead" points="184,400 172,394.4 172,405.6" fill="black" transform="rotate(180,176,400)"/>
<polygon class="arrowhead" points="168,896 156,890.4 156,901.6" fill="black" transform="rotate(0,160,896)"/>
<polygon class="arrowhead" points="168,848 156,842.4 156,853.6" fill="black" transform="rotate(0,160,848)"/>
<polygon class="arrowhead" points="168,816 156,810.4 156,821.6" fill="black" transform="rotate(0,160,816)"/>
<polygon class="arrowhead" points="168,336 156,330.4 156,341.6" fill="black" transform="rotate(0,160,336)"/>
<polygon class="arrowhead" points="168,288 156,282.4 156,293.6" fill="black" transform="rotate(0,160,288)"/>
<polygon class="arrowhead" points="168,256 156,250.4 156,261.6" fill="black" transform="rotate(0,160,256)"/>
<polygon class="arrowhead" points="168,192 156,186.4 156,197.6" fill="black" transform="rotate(0,160,192)"/>
<polygon class="arrowhead" points="48,880 36,874.4 36,885.6" fill="black" transform="rotate(180,40,880)"/>
<polygon class="arrowhead" points="48,864 36,858.4 36,869.6" fill="black" transform="rotate(180,40,864)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,816 36,810.4 36,821.6" fill="black" transform="rotate(180,40,816)"/>
<polygon class="arrowhead" points="48,320 36,314.4 36,325.6" fill="black" transform="rotate(180,40,320)"/>
<polygon class="arrowhead" points="48,272 36,266.4 36,277.6" fill="black" transform="rotate(180,40,272)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<path class="jump" d="M 32,728 C 26,728 26,712 32,712" fill="none" stroke="black"/><circle cx="168" cy="384" r="6" class="opendot" fill="white" stroke="black"/>
<circle cx="168" cy="624" r="6" class="opendot" fill="white" stroke="black"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="160" y="52">Registrar</text>
<text x="276" y="52">Domain</text>
<text x="412" y="52">Domain</text>
<text x="508" y="52">Vendor</text>
<text x="144" y="68">Agent</text>
<text x="288" y="68">Registrar</text>
<text x="396" y="68">CA</text>
<text x="512" y="68">Service</text>
<text x="156" y="84">(RegAgt)</text>
<text x="280" y="84">(JRC)</text>
<text x="508" y="84">(MASA)</text>
<text x="492" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="40" y="244">(1)</text>
<text x="88" y="244">trigger</text>
<text x="136" y="244">PVR</text>
<text x="180" y="244">(tPVR)</text>
<text x="224" y="244">and</text>
<text x="256" y="244">PER</text>
<text x="300" y="244">(tPER)</text>
<text x="372" y="244">generation</text>
<text x="428" y="244">on</text>
<text x="468" y="244">pledge</text>
<text x="76" y="260">opt.</text>
<text x="112" y="260">TLS</text>
<text x="108" y="276">tPVR</text>
<text x="104" y="292">PVR</text>
<text x="108" y="324">tPER</text>
<text x="104" y="340">PER</text>
<text x="32" y="356">~</text>
<text x="168" y="356">~</text>
<text x="312" y="356">~</text>
<text x="432" y="356">~</text>
<text x="536" y="356">~</text>
<text x="40" y="388">(2)</text>
<text x="88" y="388">provide</text>
<text x="136" y="388">PVR</text>
<text x="160" y="388">t</text>
<text x="236" y="388">infrastructure</text>
<text x="240" y="404">TLS</text>
<text x="312" y="404">|</text>
<text x="276" y="420">[Reg-Agt</text>
<text x="368" y="420">authenticated</text>
<text x="264" y="436">and</text>
<text x="332" y="436">authorized?]</text>
<text x="232" y="452">PVR</text>
<text x="312" y="452">|</text>
<text x="276" y="468">[Reg-Agt</text>
<text x="364" y="468">authorized?]</text>
<text x="272" y="484">[accept</text>
<text x="340" y="484">device?]</text>
<text x="276" y="500">[contact</text>
<text x="344" y="500">vendor]</text>
<text x="432" y="516">RVR</text>
<text x="436" y="532">[extract</text>
<text x="512" y="532">DomainID]</text>
<text x="432" y="548">[update</text>
<text x="488" y="548">audit</text>
<text x="532" y="548">log]</text>
<text x="432" y="564">Voucher</text>
<text x="240" y="580">Voucher</text>
<text x="40" y="628">(2)</text>
<text x="88" y="628">provide</text>
<text x="136" y="628">PER</text>
<text x="160" y="628">t</text>
<text x="236" y="628">infrastructure</text>
<text x="240" y="644">PER</text>
<text x="368" y="660">CSR</text>
<text x="372" y="676">Cert</text>
<text x="240" y="692">Enroll-Resp</text>
<text x="44" y="724">2)</text>
<text x="80" y="724">query</text>
<text x="136" y="724">cACerts</text>
<text x="188" y="724">from</text>
<text x="268" y="724">infrastructure</text>
<text x="180" y="740">--</text>
<text x="236" y="740">cACert-Req</text>
<text x="256" y="756">cACert-Resp--</text>
<text x="32" y="772">~</text>
<text x="168" y="772">~</text>
<text x="312" y="772">~</text>
<text x="432" y="772">~</text>
<text x="536" y="772">~</text>
<text x="40" y="804">(3)</text>
<text x="88" y="804">provide</text>
<text x="152" y="804">voucher</text>
<text x="200" y="804">and</text>
<text x="264" y="804">certificate</text>
<text x="328" y="804">and</text>
<text x="376" y="804">collect</text>
<text x="436" y="804">status</text>
<text x="484" y="804">info</text>
<text x="76" y="820">opt.</text>
<text x="112" y="820">TLS</text>
<text x="104" y="836">Voucher</text>
<text x="104" y="852">vStatus</text>
<text x="104" y="868">cACerts</text>
<text x="112" y="884">Enroll-Resp--</text>
<text x="96" y="900">eStatus</text>
<text x="32" y="916">~</text>
<text x="168" y="916">~</text>
<text x="312" y="916">~</text>
<text x="432" y="916">~</text>
<text x="536" y="916">~</text>
<text x="40" y="948">(4)</text>
<text x="88" y="948">provide</text>
<text x="152" y="948">voucher</text>
<text x="212" y="948">status</text>
<text x="256" y="948">and</text>
<text x="300" y="948">enroll</text>
<text x="356" y="948">status</text>
<text x="396" y="948">to</text>
<text x="448" y="948">registrar</text>
<text x="248" y="964">TLS</text>
<text x="248" y="980">vStatus</text>
<text x="360" y="996">req</text>
<text x="404" y="996">device</text>
<text x="456" y="996">audit</text>
<text x="496" y="996">log</text>
<text x="388" y="1012">device</text>
<text x="440" y="1012">audit</text>
<text x="480" y="1012">log</text>
<text x="288" y="1028">[verify</text>
<text x="344" y="1028">audit</text>
<text x="388" y="1028">log]</text>
<text x="240" y="1060">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+   +-----------+   +-----------+    +--------+  +---------+
| Pledge |   | Registrar |   | Domain    |    | Domain |  | Vendor  |
|        |   | Agent     |   | Registrar |    | CA     |  | Service |
|        |   | (RegAgt)  |   |  (JRC)    |    |        |  | (MASA)  |
+--------+   +-----------+   +-----------+    +--------+  +---------+
   |                |                 |              |   Internet |
   |   discover     |                 |              |            |
   |    pledge      |                 |              |            |
   | mDNS query     |                 |              |            |
   |<---------------|                 |              |            |
   |--------------->|                 |              |            |
   |                |                 |              |            |

   (1) trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<--opt. TLS --->|                 |              |            |
   |<----- tPVR ----|                 |              |            |
   |------ PVR ---->|                 |              |            |
   |                |                 |              |            |
   |<----- tPER ----|                 |              |            |
   |------ PER ---->|                 |              |            |
   ~                ~                 ~              ~            ~

   (2) provide PVR to infrastructure
   |                |<----- TLS ----->|              |            |
   |                |         [Reg-Agt authenticated |            |
   |                |          and authorized?]      |            |
   |                |----- PVR ------>|              |            |
   |                |         [Reg-Agt authorized?]  |            |
   |                |         [accept device?]       |            |
   |                |         [contact vendor]       |            |
   |                |                 |------------ RVR --------->|
   |                |                 |           [extract DomainID]
   |                |                 |           [update audit log]
   |                |                 |<--------- Voucher --------|
   |                |<--- Voucher ----|              |            |
   |                |                 |              |            |

   (2) provide PER to infrastructure
   |                |------ PER ----->|              |            |
   |                |                 |---- CSR ---->|            |
   |                |                 |<--- Cert ----|            |
   |                |<--Enroll-Resp---|              |            |
   |                |                 |              |            |
   (2) query cACerts from infrastructure
   |                |-- cACert-Req -->|              |            |
   |                |<-- cACert-Resp--|              |            |
   ~                ~                 ~              ~            ~

   (3) provide voucher and certificate and collect status info
   |<--opt. TLS --->|                 |              |            |
   |<--- Voucher ---|                 |              |            |
   |---- vStatus -->|                 |              |            |
   |<--- cACerts ---|                 |              |            |
   |<--Enroll-Resp--|                 |              |            |
   |--- eStatus --->|                 |              |            |
   ~                ~                 ~              ~            ~

   (4) provide voucher status and enroll status to registrar
   |                |<------ TLS ---->|              |            |
   |                |----  vStatus -->|              |            |
   |                |                 |--- req device audit log-->|
   |                |                 |<---- device audit log ----|
   |                |           [verify audit log]
   |                |                 |              |            |
   |                |---- eStatus --->|              |            |
   |                |                 |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers">
  <t><xref target="exchanges_uc2_1"/> describes the request object acquisition by the registrar-agent from pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes the request object processing initiated by the registrar-agent to the registrar and also the interaction of the registrar with the MASA and the domain CA including the response object processing by these entities.</t>
  <t><xref target="exchanges_uc2_3"/> describes the supply of response objects between the registrar-agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses corresponding exchanges between the registrar-agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the registrar-agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> and <xref target="exchangesfig_uc2_all"/> based on DNS-SD or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent:
  <list style="symbols">
      <t><bcp14>MAY</bcp14> possess/trusts pledges IDevID CA certificate to use TLS for pledge communication</t>
      <t>possesses own LDevID(RegAgt) credentials for the registrar domain (site).
In addition, the registrar-agent <bcp14>MUST</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
      <list style="symbols">
          <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
          <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
          <t>discovered by using a vendor specific approach, e.g., RF beacons.</t>
        </list></t>
    </list>
The registrar-agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
  <t>Registrar (same as in BRSKI): possesses/trusts IDevID CA certificate and has own registrar LDevID credentials.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="520" viewBox="0 0 520 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,336" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 64,144" fill="none" stroke="black"/>
<path d="M 48,176 L 72,176" fill="none" stroke="black"/>
<path d="M 336,176 L 360,176" fill="none" stroke="black"/>
<path d="M 48,240 L 80,240" fill="none" stroke="black"/>
<path d="M 280,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,272 L 88,272" fill="none" stroke="black"/>
<path d="M 320,272 L 360,272" fill="none" stroke="black"/>
<path d="M 48,320 L 88,320" fill="none" stroke="black"/>
<path d="M 312,320 L 360,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,320 356,314.4 356,325.6" fill="black" transform="rotate(0,360,320)"/>
<polygon class="arrowhead" points="368,240 356,234.4 356,245.6" fill="black" transform="rotate(0,360,240)"/>
<polygon class="arrowhead" points="56,272 44,266.4 44,277.6" fill="black" transform="rotate(180,48,272)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="108" y="148">optional</text>
<text x="184" y="148">establish</text>
<text x="240" y="148">TLS</text>
<text x="300" y="148">connection</text>
<text x="356" y="148">--</text>
<text x="112" y="180">trigger</text>
<text x="172" y="180">pledge</text>
<text x="264" y="180">voucher-request</text>
<text x="204" y="196">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="212">-agent-signed-data</text>
<text x="116" y="244">pledge</text>
<text x="208" y="244">voucher-request</text>
<text x="396" y="244">-store</text>
<text x="440" y="244">PVR</text>
<text x="128" y="276">trigger</text>
<text x="236" y="276">enrollment-request</text>
<text x="128" y="292">(empty)</text>
<text x="124" y="324">pledge</text>
<text x="228" y="324">enrollment-request</text>
<text x="396" y="324">-store</text>
<text x="448" y="324">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<-- optional establish TLS connection --|
    |                                        |
    |<--- trigger pledge voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment-request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>TLS <bcp14>MAY</bcp14> be optionally used to protect the interaction between the registrar-agent and the pledge.
If TLS is applied, the registrar-agent <bcp14>MUST</bcp14> use the provided product-serial-number of the pledge for verification against the X520serialnumber component of the IDevID certificate.
Based on the locally available IDevID CA certificate, the registrar-agent verifies the IDevID certificate as part of the TLS handshake.
Note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge's IDevID certificate.</t>

<t>Note: The registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="pvrt"><name>Pledge-Voucher-Request (PVR) - Trigger</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tpvr"</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Note that at the time of receiving the PVR trigger, the pledge cannot verify the registrar LDevID certificate and has no proof-of-possession of the corresponding private key for the certificate. The pledge therefore accepts the registrar LDevID certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge will also be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
It <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value) of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request:agent-signed-data" element (defined in <xref target="I-D.ietf-anima-rfc8366bis"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload representation in JSON syntax of
  "ietf-voucher-request-prm:agent-signed-data"

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="pvrr"><name>Pledge-Voucher-Request (PVR) - Response</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/> to support JWS signing of the object:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity" (different value as in RFC 8995)..</t>
</list></t>

<t>The ietf-voucher-request:voucher is extended with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar LDevID certificate (provided as PVR trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as a PVR trigger parameter by the registrar-agent.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded Payload "ietf-voucher-request-prm:voucher"
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
    "alg": "ES256",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ],
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Media-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>MUST</bcp14> include this Media-Type header field indicating the included media type for the PVR.
The PVR is included by the registrar in its RCR as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="pledge-enrollment-request-per-trigger"><name>Pledge Enrollment-Request (PER) - Trigger</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tper"</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "re-enroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>This document specifies the request of a generic certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing RA/CA.
How the HTTP POST can be used to provide CSR attributes is out of scope for this specification."</t>

</section>
<section anchor="PER-response"><name>Pledge Enrollment-Request (PER) - Response</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the PER  trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID, POI is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the pledge enrollment-request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>MUST</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format.
Note that the wrapping of the PER signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a signature-wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<t>While BRSKI-PRM targets the initial enrollment, re-enrollment <bcp14>SHOULD</bcp14> be supported as described in a similar way as for enrollment in this document, if no other re-enrollment mechanism is supported.
Note that in this case the current LDevID credential is used instead of the IDevID credential to create the signature of the PKCS#10 request.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded Payload "ietf-ztp-types" Representation
  in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" Representation
  in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent on Registrar, MASA and Domain CA</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses its own LDevID(RegAgt) credentials of the site domain.
In addition, it <bcp14>MAY</bcp14> possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar (same as in BRSKI): possesses the IDevID CA certificate of the pledge vendor/manufacturer and its own registrar LDevID credentials of the site domain.</t>
  <t>MASA (same as in BRSKI): possesses its own vendor/manufacturer credentials (voucher signing key and certificate, TLS server certificate and private key) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.</t>
</list></t>

<figure title="Request processing between registrar-agent and bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="connection-establishment-registrar-agent-to-registrar"><name>Connection Establishment (Registrar-Agent to Registrar)</name>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection from registrar-agent to registrar is established, the authorization <bcp14>SHOULD</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>With BRSKI-PRM, the pledge generates PVR and PER as JSON-in-JWS objects and the registrar agent forwards them to the registrar.
In <xref target="RFC8995"/>, the pledge generates PVR as CMS-signed JSON and PER as PKCS#10 or PKCS#7 according to <xref target="RFC7030"/> and inherited by <xref target="RFC8995"/>.</t>

<t>For BRSKI-PRM, the registrar agent sends the PVR by HTTP POST to the same registrar endpoint as introduced by BRSKI: "/.well-
known/brski/requestvoucher", but with a Content-Type header field for JSON-in-JWS"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent sets the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field is set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="pvr-proc-reg"><name>Pledge-Voucher-Request (PVR) Processing by Registrar</name>

<t>After receiving the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar LDevID certificate to ensure the registrar in proximity of the registrar-agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credentials indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar has access to the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.
Note, the registrar may have stored the LDevID(RegAgt) if used during TLS establishment between registrar-agent and registrar or it may be provided via a repository.</t>
</list></t>

<t>If the registrar is unable to validate the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid.</t>
  <t>404 Not Found status code if the pledge provided information could not be used with automated allowance, as described in section 5.3 of <xref target="RFC8995"/>.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar performs pledge authorization according to <xref target="RFC8995"/>, Section 5.3 followed by obtaining a voucher from the pledge's MASA according to <xref target="RFC8995"/>, Section 5.4 with the modifications described below in <xref target="rvr-proc"/>.</t>

</section>
<section anchor="rvr-proc"><name>Registrar-Voucher-Request (RVR) Processing (Registrar to MASA)</name>

<t>If the MASA address/URI is learned from the <xref target="RFC8995"/> Section 2.3 IDevID MASA URI extension, then the MASA on that URI <bcp14>MUST</bcp14> support the procedures defined in this document if the PVR used JSON-JWS encoding.
If the MASA is only configured on the registrar, then a registrar supporting BRKSI-PRM and other voucher encoding formats (such as those in <xref target="RFC8995"/>) <bcp14>SHOULD</bcp14> support per-message-format MASA address/URI configuration for the same IDevID trust anchor."</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>, Section 5.5.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as received from registrar-agent, see <xref target="pvrr"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be extended with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.
If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>
</list></t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar LDevID credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "ietf-voucher-request-prm:voucher"
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in Section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar LDevID certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar LDevID credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar LDevID certificate is used or that different registrar LDevID certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar LDevID certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in Section 5.6 of <xref target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="voucher-issuance-by-masa"><name>Voucher Issuance by MASA</name>

<t>The MASA creates a voucher with Media-Type of <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the MASA detects that the Accept header of the PVR does not match <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code "406 Not Acceptable" as the pledge will not be able to parse the response.
The voucher is according to <xref target="I-D.ietf-anima-rfc8366bis"/> but uses the new assertion value specified <xref target="agt_prx"/>.</t>

<t><xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation
  in JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>MASA issued Voucher Processing by Registrar</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in Section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar credentials.</t>

<t>The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar LDevID credentials (see <xref target="RFC7515"/>, Section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar LDevID certificate as well as potential intermediate CA certificates up to the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>This signature provides POP of the private key corresponding to the registrar LDevID certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).
The registrar <bcp14>MUST</bcp14> use the same registrar LDevID credentials used for authentication in the TLS handshake to authenticate towards the registrar-agent.
This ensures that the same registrar LDevID certificate can be used to verify the signature as transmitted in the voucher-request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".
<xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header (MASA)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Example: Decoded "JWS Protected Header (Reg)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge as explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

</section>
<section anchor="exchanges_uc2_2_per"><name>Pledge Enrollment-Request (PER) Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar in the same HTTPS connection similar as described for the PER processing in Section 5.2 of <xref target="RFC8995"/>.
As specified in <xref target="PER-response"/> deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment-request with the corresponding domain CA.
It creates a registrar enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>Note while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported in a similar way with the exception that the current LDevID certificate is used instead of the IDevID certificate to verify the wrapping signature of the PKCS#10 request (see also <xref target="PER-response"/>).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="exchanges_uc2_2_wca"><name>Request Wrapped-CA-certificate(s) (Registrar-Agent to Registrar)</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t>To support registrar-agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar LDevID credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64 encoded "x5b" in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with registrar signature in General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Objects supplied by the Registrar-Agent to the Pledge</name>

<t>It is assumed that the registrar-agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID (Pledge) certificate (from CA via registrar)</t>
</list></t>

<t>To deliver these response objects, the registrar-agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher and LDevID certificate and optionally CA certificates.</t>
</list></t>

<figure title="Responses and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="400" width="528" viewBox="0 0 528 400" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,368" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,368" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 88,160" fill="none" stroke="black"/>
<path d="M 296,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 104,192" fill="none" stroke="black"/>
<path d="M 240,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 112,224" fill="none" stroke="black"/>
<path d="M 248,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 88,256" fill="none" stroke="black"/>
<path d="M 296,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 72,288" fill="none" stroke="black"/>
<path d="M 304,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 112,320" fill="none" stroke="black"/>
<path d="M 240,320 L 320,320" fill="none" stroke="black"/>
<path d="M 48,352 L 72,352" fill="none" stroke="black"/>
<path d="M 296,352 L 320,352" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,320 316,314.4 316,325.6" fill="black" transform="rotate(0,320,320)"/>
<polygon class="arrowhead" points="328,224 316,218.4 316,229.6" fill="black" transform="rotate(0,320,224)"/>
<polygon class="arrowhead" points="56,352 44,346.4 44,357.6" fill="black" transform="rotate(180,48,352)"/>
<polygon class="arrowhead" points="56,288 44,282.4 44,293.6" fill="black" transform="rotate(180,48,288)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,192 44,186.4 44,197.6" fill="black" transform="rotate(180,48,192)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="132" y="164">optional</text>
<text x="184" y="164">TLS</text>
<text x="244" y="164">connection</text>
<text x="140" y="196">supply</text>
<text x="200" y="196">voucher</text>
<text x="152" y="228">voucher</text>
<text x="212" y="228">status</text>
<text x="344" y="228">-</text>
<text x="376" y="228">store</text>
<text x="380" y="244">pledge</text>
<text x="440" y="244">voucher</text>
<text x="500" y="244">status</text>
<text x="124" y="260">supply</text>
<text x="164" y="260">CA</text>
<text x="228" y="260">certificates</text>
<text x="108" y="292">supply</text>
<text x="216" y="292">enrollment-response</text>
<text x="148" y="324">enroll</text>
<text x="204" y="324">status</text>
<text x="344" y="324">-</text>
<text x="376" y="324">store</text>
<text x="380" y="340">pledge</text>
<text x="436" y="340">enroll</text>
<text x="492" y="340">status</text>
<text x="108" y="356">supply</text>
<text x="168" y="356">CAcerts</text>
<text x="244" y="356">(optional)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<----- optional TLS connection ----|
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<----- supply CA certificates  ----|
    |                                   |
    |<--- supply enrollment-response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status
    |<--- supply CAcerts (optional) ----|
    |                                   |

]]></artwork></artset></figure>
<t>The content of the response objects is defined by the voucher <xref target="RFC8366"/> and the certificate <xref target="RFC5280"/>.</t>

<t>The registrar-agent <bcp14>MAY</bcp14> optionally use TLS to protect the communication as outlined in <xref target="exchanges_uc2_1"/>.</t>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<section anchor="pledge-voucher-response-processing"><name>Pledge: Voucher-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/svr".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of several signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in Section 5.6.1 in <xref target="RFC8995"/>, against pre-installed manufacturer trust anchor (IDevID).</t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Verify registrar signature as described in Section 5.6.1 in <xref target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
  <t>Validate the registrar certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert").</t>
</list></t>

<t>If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar LDevID certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="pledge-voucher-status-telemetry"><name>Pledge: Voucher Status Telemetry</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-wrapped-ca-certificates-processing"><name>Pledge: Wrapped-CA-Certificate(s) Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/scac".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHALL</bcp14> only be done, if the voucher-response has been successfully processed by pledge.</t>

<t>The CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded "x5b".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used by the pledge:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the validation of the wrapping signature or another security check fails.</t>
  <t>415 Unsupported Media Type: if the Content-Type of the request is in an unknown or unsupported format.</t>
  <t>400 Bad Request: if the pledge detects errors in the encoding of the payload.</t>
</list></t>

</section>
<section anchor="pledge-enrollment-response-processing"><name>Pledge: Enrollment-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/ser".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure is: <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the registrar-agent.
If the verification of the LDevID certificate succeeds, the status property <bcp14>SHALL</bcp14> be set to "status": true, otherwise to "status": false</t>

</section>
<section anchor="pledge-enrollment-status-telemetry"><name>Pledge: Enrollment-Status Telemetry</name>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll-status is signed and results in a JSON-in-JWS object.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using its new LDevID credentials as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IDevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "pledge-enroll-status" representation
  in JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Voucher Status and Enroll Status Handling (Registrar-Agent to Domain Registrar)</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>In case the TLS connection to the registrar is already closed, the registrar-agent opens a new TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device of the domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> Section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in Section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device of the domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the signature verification of the status information is an addition to the described handling in Section 5.9.4 of <xref target="RFC8995"/>, and is replacing the pledges TLS client authentication by DevID credentials in <xref target="RFC8995"></xref>.</t>

<t>According to <xref target="RFC8995"/> Section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge-Status by Registrar-Agent from Pledge</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures performed with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="pledge-status-trigger-registrar-agent-to-pledge"><name>Pledge-Status - Trigger (Registrar-Agent to Pledge)</name>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/qps"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).
As the pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "status-request" representation
  in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-status-response-pledge-registrar-agent"><name>Pledge-Status - Response (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is:</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment-response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize its bootstrapped credentials (LDevID) in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "status-response" representation
  in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t><list style="symbols">
  <t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.</t>
  <t>In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.</t>
  <t>The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.</t>
  <t>The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.</t>
  <t>The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>
</list></t>

</section>
</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher-Request Artifact</name>

<t><xref target="I-D.ietf-anima-rfc8366bis"/> extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.
These additional fields are defined in <xref target="exchanges_uc2_1"/> as:</t>

<t><list style="symbols">
  <t>agent-signed-data to provide a JSON encoded artifact from the involved registrar-agent, which allows the registrar to verify the agent's involvement</t>
  <t>agent-provided-proximity-registrar-cert to provide the registrar certificate visible to the registrar-agent, comparable to the registrar-proximity-certificate used in <xref target="RFC8995"/></t>
  <t>agent-signing certificate to optionally provide the registrar agent signing certificate.</t>
</list></t>

<t>Examples for the application of these fields in the context of a PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                Description                       Reference
 tpvr               create pledge voucher-request     [THISRFC]
 tper               create pledge enrollment-request  [THISRFC]
 svr                supply voucher-response           [THISRFC]
 ser                supply enrollment-response        [THISRFC]
 scac               supply CA certificates to pledge  [THISRFC]
 qps                query pledge status               [THISRFC]
 requestenroll      supply PER to registrar           [THISRFC]
 wrappedcacerts     request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>potentially no transport layer security between registrar-agent and pledge</t>
</list></t>

<t><xref target="exchanges_uc2_1"/> describes to optional apply TLS to protect the communication between the registrar-agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>

<t>The credential used by the registrar-agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due to state creation on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished, or a single onboarding state may expire after a certain time.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar LDevID certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (Section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref target="RFC8995"/> Section 11.7 (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref target="RFC8407"/> Section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author fullname='D. Cooper' initials='D.' surname='Cooper'><organization/></author>
<author fullname='S. Santesson' initials='S.' surname='Santesson'><organization/></author>
<author fullname='S. Farrell' initials='S.' surname='Farrell'><organization/></author>
<author fullname='S. Boeyen' initials='S.' surname='Boeyen'><organization/></author>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<author fullname='W. Polk' initials='W.' surname='Polk'><organization/></author>
<date month='May' year='2008'/>
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference anchor='RFC6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference anchor='RFC7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<date month='May' year='2018'/>
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor='RFC8610'>
<front>
<title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
<author fullname='H. Birkholz' initials='H.' surname='Birkholz'><organization/></author>
<author fullname='C. Vigano' initials='C.' surname='Vigano'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2019'/>
<abstract><t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8610'/>
<seriesInfo name='DOI' value='10.17487/RFC8610'/>
</reference>



<reference anchor='RFC8615'>
<front>
<title>Well-Known Uniform Resource Identifiers (URIs)</title>
<author fullname='M. Nottingham' initials='M.' surname='Nottingham'><organization/></author>
<date month='May' year='2019'/>
<abstract><t>This memo defines a path prefix for &quot;well-known locations&quot;, &quot;/.well-known/&quot;, in selected Uniform Resource Identifier (URI) schemes.</t><t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space.  It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t></abstract>
</front>
<seriesInfo name='RFC' value='8615'/>
<seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>



<reference anchor='RFC8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>


<reference anchor='I-D.ietf-anima-jws-voucher'>
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname='Thomas Werner' initials='T.' surname='Werner'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='22' month='February' year='2023'/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that is signed using a Cryptographic Message Syntax
   (CMS) structure.  This document introduces a variant of the voucher
   artifact in which CMS is replaced by the JSON Object Signing and
   Encryption (JOSE) mechanism described in [RFC7515] to support
   deployments in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-jws-voucher-06'/>
   
</reference>


<reference anchor='I-D.ietf-netconf-sztp-csr'>
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Sean Turner' initials='S.' surname='Turner'>
         <organization>sn3rd</organization>
      </author>
      <date day='2' month='March' year='2022'/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netconf-sztp-csr-14'/>
   
</reference>


<reference anchor='I-D.ietf-anima-rfc8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin' initials='M.' surname='Pritikin'>
         <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert' initials='T. T.' surname='Eckert'>
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma' initials='Q.' surname='Ma'>
         <organization>Huawei</organization>
      </author>
      <date day='7' month='February' year='2023'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#39;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-07'/>
   
</reference>



<reference anchor='RFC2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2986'>
<front>
<title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
<author fullname='M. Nystrom' initials='M.' surname='Nystrom'><organization/></author>
<author fullname='B. Kaliski' initials='B.' surname='Kaliski'><organization/></author>
<date month='November' year='2000'/>
<abstract><t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process.  The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2986'/>
<seriesInfo name='DOI' value='10.17487/RFC2986'/>
</reference>



<reference anchor='RFC5272'>
<front>
<title>Certificate Management over CMS (CMC)</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<author fullname='M. Myers' initials='M.' surname='Myers'><organization/></author>
<date month='June' year='2008'/>
<abstract><t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t><t>1.  The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t><t>2.  The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t><t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5272'/>
<seriesInfo name='DOI' value='10.17487/RFC5272'/>
</reference>



<reference anchor='RFC6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<author fullname='J. Hodges' initials='J.' surname='Hodges'><organization/></author>
<date month='March' year='2011'/>
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>



<reference anchor='RFC6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC7252'>
<front>
<title>The Constrained Application Protocol (CoAP)</title>
<author fullname='Z. Shelby' initials='Z.' surname='Shelby'><organization/></author>
<author fullname='K. Hartke' initials='K.' surname='Hartke'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2014'/>
<abstract><t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t><t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t></abstract>
</front>
<seriesInfo name='RFC' value='7252'/>
<seriesInfo name='DOI' value='10.17487/RFC7252'/>
</reference>



<reference anchor='RFC8407'>
<front>
<title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<date month='October' year='2018'/>
<abstract><t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t></abstract>
</front>
<seriesInfo name='BCP' value='216'/>
<seriesInfo name='RFC' value='8407'/>
<seriesInfo name='DOI' value='10.17487/RFC8407'/>
</reference>



<reference anchor='RFC8792'>
<front>
<title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='E. Auerswald' initials='E.' surname='Auerswald'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the &quot;single backslash&quot; strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the &quot;double backslash&quot; strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t></abstract>
</front>
<seriesInfo name='RFC' value='8792'/>
<seriesInfo name='DOI' value='10.17487/RFC8792'/>
</reference>



<reference anchor='RFC8990'>
<front>
<title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<author fullname='B. Carpenter' initials='B.' role='editor' surname='Carpenter'><organization/></author>
<author fullname='B. Liu' initials='B.' role='editor' surname='Liu'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t></abstract>
</front>
<seriesInfo name='RFC' value='8990'/>
<seriesInfo name='DOI' value='10.17487/RFC8990'/>
</reference>



<reference anchor='RFC9052'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need to be able to define basic security services for this data format.  This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  </t><t>This document, along with RFC 9053, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='STD' value='96'/>
<seriesInfo name='RFC' value='9052'/>
<seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>



<reference anchor='RFC9053'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052). </t><t>This document, along with RFC 9052, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='RFC' value='9053'/>
<seriesInfo name='DOI' value='10.17487/RFC9053'/>
</reference>



<reference anchor='RFC9110'>
<front>
<title>HTTP Semantics</title>
<author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'><organization/></author>
<author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'><organization/></author>
<author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'><organization/></author>
<date month='June' year='2022'/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name='STD' value='97'/>
<seriesInfo name='RFC' value='9110'/>
<seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>



<reference anchor='RFC9238'>
<front>
<title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='J. Latour' initials='J.' surname='Latour'><organization/></author>
<author fullname='H. Habibi Gharakheili' initials='H.' surname='Habibi Gharakheili'><organization/></author>
<date month='May' year='2022'/>
<abstract><t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t><t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t></abstract>
</front>
<seriesInfo name='RFC' value='9238'/>
<seriesInfo name='DOI' value='10.17487/RFC9238'/>
</reference>


<reference anchor='I-D.ietf-anima-brski-ae'>
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname='David von Oheimb' initials='D.' surname='von Oheimb'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Steffen Fries' initials='S.' surname='Fries'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Hendrik Brockhaus' initials='H.' surname='Brockhaus'>
         <organization>Siemens AG</organization>
      </author>
      <date day='13' month='March' year='2023'/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995) that supports alternative
   certificate enrollment protocols, such as CMP.  This offers the
   following advantages.

   Using authenticated self-contained signed objects for certification
   requests and responses, their origin can be authenticated
   independently of message transfer.  This supports end-to-end
   authentication (proof of origin) also over multiple hops, as well as
   asynchronous operation of certificate enrollment.  This in turn
   provides architectural flexibility where to ultimately authenticate
   and authorize certification requests while retaining full-strength
   integrity and authenticity of certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-brski-ae-04'/>
   
</reference>


<reference anchor='I-D.richardson-emu-eap-onboarding'>
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname='Alan DeKok' initials='A.' surname='DeKok'>
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='2' month='April' year='2023'/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-richardson-emu-eap-onboarding-03'/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="March"/>
  </front>
  <format type="PDF" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC8971'>
<front>
<title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
<author fullname='S. Pallagatti' initials='S.' role='editor' surname='Pallagatti'><organization/></author>
<author fullname='G. Mirsky' initials='G.' role='editor' surname='Mirsky'><organization/></author>
<author fullname='S. Paragiri' initials='S.' surname='Paragiri'><organization/></author>
<author fullname='V. Govindan' initials='V.' surname='Govindan'><organization/></author>
<author fullname='M. Mudigonda' initials='M.' surname='Mudigonda'><organization/></author>
<date month='December' year='2020'/>
<abstract><t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8971'/>
<seriesInfo name='DOI' value='10.17487/RFC8971'/>
</reference>




    </references>


<?line 2056?>

<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher-Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher-Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the serial number and the inclusion of GRASP</t>
  <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
  <t>issue #82, included optional TLS protection of the communication link between registrar-agent and pledge in the introduction <xref target="req-sol"/>,  and <xref target="exchanges_uc2_1"/></t>
  <t>issue #83, enhanced <xref target="PER-response"/> and <xref target="exchanges_uc2_2_per"/> with note to re-enrollment</t>
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the registrar-agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge voucher-request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization></organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
QulRwB3YfXlIQBoq9KppEW4u0MUAa5+XBZfz6OB078XREz4wj7YfbAlC1PHB
ifniy80HVBHxiWYzchDburi0L+YlVu3FrR/yVWYjN48d1OwRaTFu52Bw3OyD
zS/MAb2/4HzqQ2sSSjJALzXSZErW6PXeAPMm6WhUvhWfUD55K8LRDG0DSGHL
4poCeuHoIGcpB3D0QMyeoWR7sJHt5bNpgXrRevaifgvf7AEHnIDeMFzPvikm
w1n5Fh6uBm8v83nN1prDyUWVvYHvnGuoRLvqdN7oVg7mRFEzKvdeSIAXx13B
oTxHA7m3IvIYpYHrqEDhU9xaGG41/6WEEe1X43ICIzpFVwWPZu9yhmcHZnMC
8udwhLHCJ3h/yXYLC0KS60H9tgJO+PNbJ1AjlktRTLV7V21hTN1zAg3QbsJ+
PxEqjcJ/tReVDJSZkVer0ZL12IAPRgmeb83xmwoePp6X2bOSmvoG9NwCPnpa
5rjzCKdxBvM1IZE1wevwr5xaXTtAs1rS8EcUGNNGfvriq208f2zKeoxm9FFe
X4LGNVJDlUYpiismDlrqk/Fi1YL9WCcXCyRrcfJcGcTuKqupHWxQbtpqLou4
PTq/KzZAlwKAgihdgZJTR1CN4fVEAKFvHDKCXDx49OArWHOq4k0+8z+GP+jW
PNjJPv3rp+gaMSVaMD4Cli/D9cuil/7YiyKDOW60uHk6/eG74/Gz7364Gr45
qn747rAZjF+/G755/ctwb+t6MN58NBx/tfX99uVoUB4+gucvB/ePRoPJ8fRs
+8Ffe+WL8unlD9uv5/z0Vw/yN1vT4Tdvy2d7T3/54bun0+/fXDdnk9fN9+PX
N4c/V+Xz/YOb5798u3X08+DBi5PD+nD88K+9q7Px0Qi/Pd0/enry8w/V4Jvj
w283R8dnmw8ffP/mSfni1eV3355ufnVYXpff3386+v6749EPe1tXZzCmw58P
r5//fPjXXvN8/9vm+c8/vHq+/+rR89Pv4d/B/OiX3YdvSuznyeSHNw83n333
+Obs/g/TH75+/ZZ/v5yevRltFidbNz+8Gf61Nx3cP775Htbh++3XN8M9aP/t
1tOTV4eb+duj/W9fj6Y/bD65f/Lq6eMfNkfffPv68oejX56W34+mR9+++eqb
bzeP3h1vHf21d3S0P9r79tXW/umr49fFwetH375+uvfD5sM33759cnX66mj2
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
4+t3NtaziDZyakPeeYhRsynd7qvWtQL6/9pvZ5cM4RPybkh5Odqarg2rL50q
q6ve/tv1c1ldnSnfXjnF4NdXb/jl76/98g/pl8fB/eyQ1psZ3TtW0sscqw8e
zfLbeXtfZ6v15nRr0vElk246LRHqyfFepnVzoVR1/dkjw0S2G2N9dvr25+tv
mJ7nyRuDun09qN/loGRPKxNWjdL9kMXy5XSlfF3Ladyl6mNzBStd8ld1d0aX
f8XP8p4xugOJSibVzXAfmruL5b1/sMhFSzSX0fO3syukLp/bBFNzSfzrt3PC
KNspGo3W9VVpU0DULPq2igqa8XWBJ1Lvj3MWL1erKgrXb5ip/dpMt9JMXDoO
da25f/N4nRj+2q+C6vb3D9UFw9NFfeN6HbDTRSJve60ujl1Ny+paKnkXNsX4
THpqmS/31XVmaLEBkI288JE+S9fDnRpavrqgtQEFckPpLMs3L8dE06ebkWu3
unQ8V+/e99n1NFrJ29TlJ36lV77OFst8+W1/ibeY3LNokPeFVfP6218/qT/0
/mue9P0s3ryexbacReTM5h6+5MJb0+hlKq9nrG/eW9cw3VyQVt37K29rkw5L
V8ZKZKIfTlN+jsgfGqj9XcOTPyc0me9d30iPeZbXYsrLXn/+btLmEW08oltZ
a9qkiY900aC8967C9eoyNIz5ubpx8PTtljQNgl7ef9jcuyuvm6+jezX79m3a
3OS4vF6TuSYYO4gXMQ55fyl9v8aFnbyLOF0tn7+ldQpcnx6nUGdlZkmuz6eb
rHC6tvfyzl6Za96/1v4Dhf8MQbSsbxqlO+zpSxN5NWL1hWMPbm+PM0JBdbr8
MZ1GCd3MHAE8poTjv1b3Eycfl4vfJOLq7PzG06+wbbqgG5Dl1b3Rxbzfnpv1
mHDo693PnWtjuXouqNdNb6fV/dbyzu+Pj8w+zn0kLxRuGqWZ1pvEPV2tJIgk
1c20jde2P7U/qcevtO4+4Hs359979xpR4hgr8Jz49Z+OrbXvTnjXVi6vWZeD
XNU37FHYVPeuU0ePJOF4B+WpmZvfq5WB6irl+Hjv7asrnOs213Qr8Y98obmc
t/tZ2p+47itHQ9u/nPWoCu5fPlz/cmpFduH4+7MPN2nn+MfpJv50tI72+/kz
Kdc1CxMAfRjqlOToxdlEwCs+1dwGe/TL6a7Mo8XRFNI+1aXpZN7jCOW4v5v6
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
zsof7f0815XHVm8+QPfjv3e/nYb2BmzUOa4qeFe7VM6QRG5f+pjLItx5oYHG
dKFm67480x3dm+M63ZIKdOs3Ovc7daqmFe8k6hoKz1S9nPizrTLVM2mWqavn
lLgGskH/vgLo0ycbf2g60vr9t0txc7aT4JQCfyoWjkn+u1pevdT+GoQv1tDQ
wInrvo9M/xkfOdYF66LQTziGW0LMkuFpgV2qDO0M3GUupkxxpIzv9PtnK8un
nZTVItjsYuW0Xl+XK0zSe6p17/PtBDIZrGk5V26XqGuCs7Vc+5X7Yk6LRGig
2lvXjOysuvRqyG+lW9IZtcPWOQcGX6xlIbCZh1c7Hc4QRc7LpzOyPFvX4UAw
SfZbIM1fwOUbrZ5t/6660Dzsct/rsep8TqrO2/lUFcRop/Ercd/MZRMY1xUL
+7Wq8Mgd1WSv365Omwzj4xLcadWz3udX11KOxO1UVpF5v1pdldN0ip8jGaAR
fcwWy+3i7HuJrMBKKKJtyjLYT5Tq3z6dfYmzPvD/5GJScOfQk5uV3PPYCErS
t7LidtxqUqcUzPi/Sdn1GtFP5L3pF6UlqvLK6Yoy/C/Zockqch9f5Y6NUPt0
vgp7yoKXfNBLYZz1tT9dLSixr8+HWtU2jj07a9eoyqPJ7GWWPOOT6IjMVN/v
QFH+/TuR/f0UklP8V86gjGRaG2l4QkQJo8yj+Lheddqupn5qVYheVeqPY5ID
OEU7sczmuEBTnJe7QBDTxFqi9fS75XwE4+JNf6AGm+KonA8bACp32tVYfKyc
Ho3/SiifI+YxSOvYPaLMa4D5cD399O1TxSZp00ABNiF3MJJVZ5PnJkLrWtHF
EkDjSF378TQKWRanx4Eop0AS+l/5iTNdiB8/NKhROUVTrK8H2aDUYhrTbir4
xUWMHae1xtKzFfr6dAL1uloGkEV6KpdvpscZlvY5W7n/dO0eN1C/3thCyxFU
v4OalSs+yKiTWVXglrsB6tVXWkvb1Xq72V/adO94lgHZZnauW9bnNYsTqbxI
/FSVOUaHnF0pdv/+dyo839215bZDKotIZvCynNG28udJtaq8qreGrKQ7H3eS
xLPp+iwNyS0o9LC4AvnXixyTaX2oZTVblyfaVs9RtdBM20aWuXSXT8dtEM2m
i7PdbK/CoSI09d73Wko0W+DlnrEj1TjN8YejN5NtTtP1odq8UPfiMjzW3znB
mgC4OW92dBVa9sTk7n4EaFLjX+xokTh/vo2cvrqe5nIRixYV68ZPvFUuDrz6
RJP6pMHPDhDVJtvWG3pkGqZwPam+eoX/1cmuur16l+XRPQmZjquXn17loEVU
1BUjqWHrJupNaceTP2Q6wFiUY9CLCsWoenXcvIZpXG/OdzBXLK/evXZaFJTV
8jM4OsnCBuOaZdITopKzVGZAC1/X+Or146D/Jo2vFsOP0FeVl+R3fzARR2ou
z4BNlvD1076QivFHcuPObF3vp5A+vMwvjhi9ImDn1dGLfFqHxSnbVEn7BOVr
UnGkRCoxKP3oMpbkd88PfUirljB1begamj9U5Yuj6pRspiIUpx3/xwf/KABk
WaauxZwC4BI1CHbkbrOmwprXZyjkpny5+itxtV8tRlPfquWHT5etvoLjC2+Z
5qdtWccqgZy4yorvyY2jCruQghUPrSH8jdMCZ/ammZa4+vWE/1KNnSWi84TQ
YNL6+8zzAzNL9fKdZGnWIz5cnM6o1gdpJ0Lt38t60UcWA48sfbuUIXHuHU14
rF/JoFoH5tOj6Zt9y8vn9XmBrQKY5sVKFU2WZ3BOWwuaZ7xGm+8yXyzLHA0Z
mEyrDVKVcqQFsPMuFCReqhWomaQSK7lhh2jecnOcWuJL1crYMQpPBw0vjxnK
J58QrYzq9bzqvVYLKBe5/KceRdaponSZiP7K8RrC+X/Ct7v/EZduHLriOf+0
S79y6P927ZzxbCSClfxGsz6Kh7xFmt7s3uS42brC2ckSSY/oYEx7DOo0/r8B
040G3sl1AgA=

-->

</rfc>

