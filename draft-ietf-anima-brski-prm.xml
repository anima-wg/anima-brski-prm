<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.21 (Ruby 3.0.2) -->
<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-anima-brski-prm-17" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.25.0 -->
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-prm-17"/>
    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>
    <date year="2025"/>
    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    <abstract>
      <?line 134?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces new endpoints for the Domain Registrar and pledge, and a new component, the Registrar-Agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the Key Infrastructure (e.g., domain CA).</t>
    </abstract>
    <note removeInRFC="true">
      <name>About This Document</name>
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>
  </front>
  <middle>
    <?line 142?>

<section anchor="introduction">
      <name>Introduction</name>
      <t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a customer domain, which may be associated with a specific installation location.
This includes the discovery of the BRSKI registrar in the customer domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>
      <t>Security information about the customer domain, specifically the customer domain certificate, are exchanged and authenticated utilizing signed data objects, the voucher artifacts as defined in <xref target="RFC8995"/>.
In response to a voucher-request, the Manufacturer Authorized Signing Authority (MASA) issues the voucher and provides it via the domain registrar to the pledge.
<xref target="I-D.ietf-anima-rfc8366bis"/> specifies the format of the voucher artifacts, including the voucher-request artifact.</t>
      <t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>
      <t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with Pledge in Responder Mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered externally and at a specific time to generate bootstrapping requests in the customer domain.
For this approach, this document:</t>
      <ul spacing="normal">
        <li>
          <t>defines additional endpoints for the domain registrar and new endpoints for the pledge to enable responder mode.</t>
        </li>
        <li>
          <t>introduces the Registrar-Agent as new component to facilitate the communication between the pledge and the domain registrar.
The Registrar-Agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the domain registrar itself.
BRSKI-PRM supports the identification of the Registrar-Agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the Registrar-Agent is a component used by an installer and not co-located with the domain registrar.</t>
        </li>
        <li>
          <t>specifies additional artifacts for the exchanges between a pledge acting as server, the Registrar-Agent acting as client, and the domain registrar acting as server toward the Registrar-Agent.</t>
        </li>
        <li>
          <t>allows the application of Registrar-Agent credentials to establish TLS connections to the domain registrar; these are different from the pledge IDevID credentials.</t>
        </li>
        <li>
          <t>also enables the usage of alternative transports, both IP-based and non-IP, between the pledge and the domain registrar via the Registrar-Agent;
security is addressed at the application layer through object security with an additional signature wrapping the exchanged artifacts.</t>
        </li>
      </ul>
      <t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.</t>
      <t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar performs pre-processing of the wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>
      <t>There may be pledges that can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>
    </section>
    <section anchor="terminology">
      <name>Terminology</name>
      <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>
      <?line -18?>

<t>This document relies on the terminology defined in <xref section="1.2" sectionFormat="of" target="RFC8995"/>.
The following terms are defined in addition:</t>
      <dl>
        <dt>authenticated self-contained object:</dt>
        <dd>
          <t>Describes a data object, which is cryptographically bound to the end entity (EE) certificate.
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
        </dd>
        <dt>CA:</dt>
        <dd>
          <t>Certification Authority, issues certificates.</t>
        </dd>
        <dt>Commissioning tool:</dt>
        <dd>
          <t>Tool to interact with devices to provide configuration data.</t>
        </dd>
        <dt>CSR:</dt>
        <dd>
          <t>Certificate Signing Request.</t>
        </dd>
        <dt>EE:</dt>
        <dd>
          <t>End entity, as defined in <xref target="RFC9483"/>.
Typically, a device or service that owns a public-private key pair for which it manages a public key certificate.</t>
        </dd>
        <dt>EE certificate:</dt>
        <dd>
          <t>the certificate of the EE signed by its owner (e.g., CA).
For domain components, the EE certificate is signed by the domain owner.
For the pledge, the EE certificate is either the IDevID certificate signed by the manufacturer or the LDevID certificate signed by the domain owner or an application-specific EE certificate signed by the domain owner.</t>
        </dd>
        <dt>endpoint:</dt>
        <dd>
          <t>Term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.</t>
        </dd>
        <dt>IDevID:</dt>
        <dd>
          <t>An Initial Device Identifier X.509 certificate installed by the vendor on new equipment.
This is a term from 802.1AR <xref target="IEEE-802.1AR"/>.</t>
        </dd>
        <dt>LDevID:</dt>
        <dd>
          <t>A Local Device Identifier X.509 certificate installed by the owner of the equipment.
This is a term from 802.1AR <xref target="IEEE-802.1AR"/>.</t>
        </dd>
        <dt>mTLS:</dt>
        <dd>
          <t>mutual Transport Layer Security.</t>
        </dd>
        <dt>PER:</dt>
        <dd>
          <t>Pledge Enroll-Request is a signature-wrapped CSR, signed by the pledge that requests enrollment to a domain via the Registrar-Agent.</t>
        </dd>
        <dt>POI:</dt>
        <dd>
          <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
        </dd>
        <dt>POP:</dt>
        <dd>
          <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
        </dd>
        <dt>PVR:</dt>
        <dd>
          <t>Pledge Voucher-Request is a signature-wrapped voucher-request, signed by the pledge that sends it to the domain registrar via the Registrar-Agent.</t>
        </dd>
        <dt>RA:</dt>
        <dd>
          <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM, this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
        </dd>
        <dt>Registrar_Agent:</dt>
        <dd>
          <t>Component facilitating the data exchange between a pledge in responder mode and a domain registrar.</t>
        </dd>
        <dt>RVR:</dt>
        <dd>
          <t>Registrar Voucher-Request is a signature-wrapped voucher-request, signed by the domain registrar that sends it to the MASA.
For BRSKI-PRM, it contains a copy of the original PVR received from the pledge.</t>
        </dd>
      </dl>
      <t>This document uses the following encoding notations in the given JWS-signed artifact examples:</t>
      <dl>
        <dt>BASE64(OCTETS):</dt>
        <dd>
          <t>Denotes the base64 encoding of an octet sequence using the character set defined in <xref section="4" sectionFormat="of" target="RFC4648"/> and without the inclusion of any line breaks, whitespace, or other additional characters.
Note that the base64 encoding of the empty octet sequence is the empty string.</t>
        </dd>
        <dt>BASE64URL(OCTETS):</dt>
        <dd>
          <t>Denotes the base64url encoding of an octet sequence, per <xref section="2" sectionFormat="of" target="RFC7515"/>.</t>
        </dd>
        <dt>UTF8(STRING):</dt>
        <dd>
          <t>Denotes the octet sequence of the UTF-8 <xref target="RFC3629"/> representation of STRING, per <xref section="1" sectionFormat="of" target="RFC7515"/>.</t>
        </dd>
      </dl>
      <t>This document includes many examples that would contain many long sequences of base64-encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token <tt>base64encodedvalue==</tt> as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>
    </section>
    <section anchor="scope-of-solution">
      <name>Scope of Solution</name>
      <section anchor="sup-env">
        <name>Supported Environments and Use Case Examples</name>
        <t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>
        <t>This can be motivated by pledges deployed in environments not yet connected to the operational customer domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer domain.</t>
        <section anchor="building-automation">
          <name>Building Automation</name>
          <t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>
          <t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>
          <t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The Registrar-Agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>
        </section>
        <section anchor="infrastructure-isolation-policy">
          <name>Infrastructure Isolation Policy</name>
          <t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>
        </section>
        <section anchor="less-operational-security-in-the-target-domain">
          <name>Less Operational Security in the Target-Domain</name>
          <t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer domain does not offer enough physical security to operate an RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>
        </section>
      </section>
      <section anchor="potential-limitations">
        <name>Potential Limitations</name>
        <t>The mechanism described in this document presumes the ability of the pledge and the Registrar-Agent to communicate with one another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the Registrar-Agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>
      </section>
    </section>
    <section anchor="req-sol">
      <name>Requirements Discussion and Mapping to Solution-Elements</name>
      <t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>
      <ul spacing="normal">
        <li>
          <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as Registrar-Agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the Registrar-Agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the Registrar-Agent.</t>
        </li>
        <li>
          <t>The security of communication between the Registrar-Agent and the pledge must not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the Registrar-Agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC9525"/> methods.</t>
        </li>
        <li>
          <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
        </li>
        <li>
          <t>By contrast, the Registrar-Agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition, the registrar must be able to verify, which Registrar-Agent was in direct contact with the pledge.</t>
        </li>
        <li>
          <t>It would be inaccurate for the voucher-request and voucher-response to use the assertion type <tt>proximity</tt> in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new assertion type is necessary for distinguishing assertions the MASA can state.</t>
        </li>
      </ul>
      <t>At least the following properties are required for the voucher and enrollment processing:</t>
      <ul spacing="normal">
        <li>
          <t>POI: provides data-origin authentication of an artifact, e.g., a voucher-request or an Enroll-Request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
        </li>
        <li>
          <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
        </li>
      </ul>
      <t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>
      <ul spacing="normal">
        <li>
          <t>Voucher-Requests and Vouchers as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
        </li>
        <li>
          <t>Enroll-Requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing pledge IDevID credential.
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
        </li>
      </ul>
    </section>
    <section anchor="architecture">
      <name>Solution Architecture</name>
      <section anchor="overview">
        <name>Overview</name>
        <t>For BRSKI with Pledge in Responder Mode (BRSKI-PRM), the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a Registrar-Agent instead of a direct connection between the pledge and the domain registrar.</t>
        <t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is usually based on JSON Web Signature (JWS) <xref target="RFC7515"/> and further specified in <xref target="exchanges"/> to address the requirements stated in <xref target="req-sol"/> above.
In constrained environments, it may be based on COSE <xref target="RFC9052"/>.</t>
        <t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>
        <t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer domain, this document specifies the exchange of authenticated self-contained objects with the help of the Registrar-Agent.</t>
        <t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>
        <t>Note that the Join Proxy is not shown in the figure.
In certain situations the Join Proxy may still be present and could be used by the Registrar-Agent to connect to the Registrar.
For example, a Registrar-Agent application on a smartphone often can connect to local Wi-Fi without giving up their cellular network connection <xref target="androidnsd"/>, but only can make link-local connections.</t>
        <t>The Registrar-Agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the Registrar-Agent and the domain registrar.
The addition of the Registrar-Agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>
        <ul spacing="normal">
          <li>
            <t>uses existing endpoints where the required functionality is provided.</t>
          </li>
          <li>
            <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
          </li>
          <li>
            <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, wrapped CA certificates, and new status information.</t>
          </li>
        </ul>
        <figure anchor="uc2figure">
          <name>BRSKI-PRM architecture overview using Registrar-Agent</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,240 L 8,384" fill="none" stroke="black"/>
                <path d="M 80,240 L 80,384" fill="none" stroke="black"/>
                <path d="M 152,240 L 152,336" fill="none" stroke="black"/>
                <path d="M 208,32 L 208,144" fill="none" stroke="black"/>
                <path d="M 224,368 L 224,416" fill="none" stroke="black"/>
                <path d="M 256,240 L 256,336" fill="none" stroke="black"/>
                <path d="M 328,240 L 328,336" fill="none" stroke="black"/>
                <path d="M 336,64 L 336,144" fill="none" stroke="black"/>
                <path d="M 376,152 L 376,232" fill="none" stroke="black"/>
                <path d="M 376,336 L 376,368" fill="none" stroke="black"/>
                <path d="M 424,240 L 424,336" fill="none" stroke="black"/>
                <path d="M 424,368 L 424,416" fill="none" stroke="black"/>
                <path d="M 432,32 L 432,144" fill="none" stroke="black"/>
                <path d="M 208,32 L 432,32" fill="none" stroke="black"/>
                <path d="M 208,64 L 432,64" fill="none" stroke="black"/>
                <path d="M 208,144 L 432,144" fill="none" stroke="black"/>
                <path d="M 8,240 L 80,240" fill="none" stroke="black"/>
                <path d="M 152,240 L 256,240" fill="none" stroke="black"/>
                <path d="M 328,240 L 424,240" fill="none" stroke="black"/>
                <path d="M 88,304 L 144,304" fill="none" stroke="black"/>
                <path d="M 264,304 L 320,304" fill="none" stroke="black"/>
                <path d="M 152,336 L 256,336" fill="none" stroke="black"/>
                <path d="M 328,336 L 424,336" fill="none" stroke="black"/>
                <path d="M 224,368 L 424,368" fill="none" stroke="black"/>
                <path d="M 8,384 L 80,384" fill="none" stroke="black"/>
                <path d="M 224,416 L 424,416" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
                <polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
                <polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
                <polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
                <polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
                <polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
                <g class="text">
                  <text x="56" y="52">.....</text>
                  <text x="100" y="52">Drop</text>
                  <text x="140" y="52">Ship</text>
                  <text x="184" y="52">.....</text>
                  <text x="244" y="52">Vendor</text>
                  <text x="308" y="52">Services</text>
                  <text x="40" y="68">:</text>
                  <text x="40" y="84">:</text>
                  <text x="224" y="84">M</text>
                  <text x="280" y="84">anufacturer</text>
                  <text x="40" y="100">:</text>
                  <text x="224" y="100">A</text>
                  <text x="272" y="100">uthorized</text>
                  <text x="384" y="100">Ownership</text>
                  <text x="40" y="116">:</text>
                  <text x="224" y="116">S</text>
                  <text x="260" y="116">igning</text>
                  <text x="376" y="116">Tracker</text>
                  <text x="40" y="132">:</text>
                  <text x="224" y="132">A</text>
                  <text x="268" y="132">uthority</text>
                  <text x="40" y="148">:</text>
                  <text x="40" y="164">:</text>
                  <text x="40" y="180">:</text>
                  <text x="412" y="180">BRSKI-</text>
                  <text x="40" y="196">:</text>
                  <text x="404" y="196">MASA</text>
                  <text x="40" y="212">:</text>
                  <text x="248" y="212">...............................</text>
                  <text x="416" y="212">.........</text>
                  <text x="40" y="228">V</text>
                  <text x="128" y="228">.</text>
                  <text x="448" y="228">.</text>
                  <text x="128" y="244">.</text>
                  <text x="448" y="244">.</text>
                  <text x="128" y="260">.</text>
                  <text x="448" y="260">.</text>
                  <text x="44" y="276">Pledge</text>
                  <text x="116" y="276">BRSKI-</text>
                  <text x="204" y="276">Registrar-</text>
                  <text x="292" y="276">BRSKI-</text>
                  <text x="364" y="276">Domain</text>
                  <text x="448" y="276">.</text>
                  <text x="112" y="292">PRM</text>
                  <text x="184" y="292">Agent</text>
                  <text x="288" y="292">PRM</text>
                  <text x="376" y="292">Registrar</text>
                  <text x="448" y="292">.</text>
                  <text x="448" y="308">.</text>
                  <text x="128" y="324">.</text>
                  <text x="188" y="324">EE</text>
                  <text x="224" y="324">cert.</text>
                  <text x="356" y="324">EE</text>
                  <text x="392" y="324">cert.</text>
                  <text x="448" y="324">.</text>
                  <text x="128" y="340">.</text>
                  <text x="448" y="340">.</text>
                  <text x="44" y="356">IDevID</text>
                  <text x="128" y="356">.</text>
                  <text x="448" y="356">.</text>
                  <text x="128" y="372">.</text>
                  <text x="448" y="372">.</text>
                  <text x="128" y="388">.</text>
                  <text x="248" y="388">Key</text>
                  <text x="324" y="388">Infrastructure</text>
                  <text x="448" y="388">.</text>
                  <text x="128" y="404">.</text>
                  <text x="260" y="404">(e.g.,</text>
                  <text x="304" y="404">PKI</text>
                  <text x="336" y="404">CA)</text>
                  <text x="448" y="404">.</text>
                  <text x="128" y="420">.</text>
                  <text x="448" y="420">.</text>
                  <text x="288" y="436">.........................................</text>
                  <text x="260" y="452">Customer</text>
                  <text x="324" y="452">Domain</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------+-----------+
    :                    | M anufacturer |           |
    :                    | A uthorized   | Ownership |
    :                    | S igning      | Tracker   |
    :                    | A uthority    |           |
    :                    +---------------+-----------+
    :                                         ^
    :                                         | BRSKI-
    :                                         | MASA
    :          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>|           |  .
|        |     .  |   EE cert. |        |  EE cert. |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork>
          </artset>
        </figure>
        <t><xref target="uc2figure"/> shows the relations between the following main components:</t>
        <ul spacing="normal">
          <li>
            <t>Pledge: Is expected to respond with the necessary data objects for bootstrapping to the Registrar-Agent.
The protocol used between the pledge and the Registrar-Agent is assumed to be HTTP(S) in the context of this document.
Any other protocol can be used as long as it supports the exchange of the necessary artifacts.
This includes CoAP or protocols to be used over Bluetooth or NFC connections.
A pledge acting as server leads to the following differences compared to BRSKI <xref target="RFC8995"/>:  </t>
            <ul spacing="normal">
              <li>
                <t>The pledge no longer initiates bootstrapping, but is discovered and triggered by the Registrar-Agent as defined in <xref target="discovery_uc2_ppa"/>.</t>
              </li>
              <li>
                <t>The pledge offers additional endpoints as defined in <xref target="pledge_component"/>, so that the Registrar-Agent can request data required for bootstrapping the pledge.</t>
              </li>
              <li>
                <t>The pledge includes additional data in the PVR, which is provided and signed by the Registrar-Agent as defined in <xref target="tpvr"/>.
This allows the registrar to identify with which Registrar-Agent the pledge was in contact (see <xref target="agt_prx"/>).</t>
              </li>
              <li>
                <t>The artifacts exchanged between the pledge and the registrar via the Registrar-Agent are authenticated self-contained objects (i.e., signature-wrapped artifacts).</t>
              </li>
            </ul>
          </li>
          <li>
            <t>Registrar-Agent: Is a new component defined in <xref target="agent_component"/> that provides a store and forward communication path to exchange data objects between the pledge and the domain registrar.
This is for situations in which the domain registrar is not directly reachable by the pledge, which may be due to a different technology stacks or due to missing connectivity.
A Registrar-Agent acting as client leads to the following new aspects:  </t>
            <ul spacing="normal">
              <li>
                <t>The order of exchanges in the BRSKI-PRM call flow is different from that in BRSKI <xref target="RFC8995"/>, as the Registrar-Agent can trigger one or more pledges and collects the PVR and PER artifacts simultaneously as defined in <xref target="exchanges"/>.
This enables bulk bootstrapping of several devices.</t>
              </li>
              <li>
                <t>There is no trust assumption between the pledge and the Registrar-Agent as only authenticated self-contained objects are used, which are transported via the Registrar-Agent and provided either by the pledge or the domain registrar.</t>
              </li>
              <li>
                <t>The trust assumption between the Registrar-Agent and the domain registrar may be based on EE certificates that are both signed by the domain owner.</t>
              </li>
              <li>
                <t>The Registrar-Agent may be realized as stand-alone component supporting nomadic activities of a service technician moving between different installation sites.</t>
              </li>
              <li>
                <t>Alternatively, the Registrar-Agent may also be realized as co-located functionality for a registrar, to support pledges in responder mode.</t>
              </li>
            </ul>
          </li>
          <li>
            <t>Join Proxy (not shown): Has the same functionality as described in <xref target="RFC8995"/> if needed.
Note that a Registrar-Agent may use a join proxy to facilitate the TLS connection to the registrar in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the Registrar-Agent does not have full IP connectivity via the domain network or cases where it has no other means to locate the registrar on the network.</t>
          </li>
          <li>
            <t>Domain registrar: In general fulfills the same functionality regarding the bootstrapping of the pledge in a customer domain by facilitating the communication of the pledge with the MASA service and the domain key infrastructure (PKI).
However, there are also differences compared to BRSKI <xref target="RFC8995"/>:  </t>
            <ul spacing="normal">
              <li>
                <t>A BRSKI-PRM domain registrar does not interact with a pledge directly, but through the Registrar-Agent as defined in <xref target="exchanges"/>.</t>
              </li>
              <li>
                <t>A BRSKI-PRM domain registrar offers additional endpoints as defined in <xref target="registrar_component"/> to support the signature-wrapped artifacts used by BRSKI-PRM.</t>
              </li>
            </ul>
          </li>
          <li>
            <t>Vendor services: Encompass MASA and Ownership Tracker and are used as defined in <xref target="RFC8995"/>.
A MASA responsible for pledges that implement BRSKI-PRM is expected to support BRSKI-PRM extensions:  </t>
            <ul spacing="normal">
              <li>
                <t>The default format for voucher artifacts (incl. voucher-request) is JWS-signed JSON as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
              </li>
              <li>
                <t>The Agent Proximity Assertion (see <xref target="agt_prx"/>) requires additional validation steps as defined in <xref target="masa_interaction"/>.</t>
              </li>
            </ul>
          </li>
        </ul>
      </section>
      <section anchor="arch_nomadic">
        <name>Nomadic Connectivity</name>
        <t>In one example instance of the PRM architecture as shown in <xref target="uc3figure"/>, there is no connectivity between the location in which the pledge is installed and the location of the domain registrar.
This is often the case in the aforementioned building automation use case (<xref target="building-automation"/>).</t>
        <figure anchor="uc3figure">
          <name>Registrar-Agent nomadic connectivity example</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="464" viewBox="0 0 464 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 24,128 L 24,176" fill="none" stroke="black"/>
                <path d="M 96,128 L 96,176" fill="none" stroke="black"/>
                <path d="M 208,32 L 208,64" fill="none" stroke="black"/>
                <path d="M 224,400 L 224,448" fill="none" stroke="black"/>
                <path d="M 336,320 L 336,368" fill="none" stroke="black"/>
                <path d="M 384,72 L 384,312" fill="none" stroke="black"/>
                <path d="M 384,368 L 384,400" fill="none" stroke="black"/>
                <path d="M 432,32 L 432,64" fill="none" stroke="black"/>
                <path d="M 432,320 L 432,368" fill="none" stroke="black"/>
                <path d="M 432,400 L 432,448" fill="none" stroke="black"/>
                <path d="M 208,32 L 432,32" fill="none" stroke="black"/>
                <path d="M 208,64 L 432,64" fill="none" stroke="black"/>
                <path d="M 24,128 L 96,128" fill="none" stroke="black"/>
                <path d="M 104,160 L 184,160" fill="none" stroke="black"/>
                <path d="M 24,176 L 96,176" fill="none" stroke="black"/>
                <path d="M 336,320 L 432,320" fill="none" stroke="black"/>
                <path d="M 272,352 L 328,352" fill="none" stroke="black"/>
                <path d="M 336,368 L 432,368" fill="none" stroke="black"/>
                <path d="M 224,400 L 432,400" fill="none" stroke="black"/>
                <path d="M 224,448 L 432,448" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="392,312 380,306.4 380,317.6" fill="black" transform="rotate(90,384,312)"/>
                <polygon class="arrowhead" points="392,72 380,66.4 380,77.6" fill="black" transform="rotate(270,384,72)"/>
                <polygon class="arrowhead" points="336,352 324,346.4 324,357.6" fill="black" transform="rotate(0,328,352)"/>
                <polygon class="arrowhead" points="280,352 268,346.4 268,357.6" fill="black" transform="rotate(180,272,352)"/>
                <polygon class="arrowhead" points="192,160 180,154.4 180,165.6" fill="black" transform="rotate(0,184,160)"/>
                <polygon class="arrowhead" points="112,160 100,154.4 100,165.6" fill="black" transform="rotate(180,104,160)"/>
                <g class="text">
                  <text x="56" y="52">.....</text>
                  <text x="100" y="52">Drop</text>
                  <text x="140" y="52">Ship</text>
                  <text x="184" y="52">.....</text>
                  <text x="244" y="52">Vendor</text>
                  <text x="308" y="52">Services</text>
                  <text x="40" y="68">:</text>
                  <text x="40" y="84">:</text>
                  <text x="164" y="100">........................................</text>
                  <text x="8" y="116">.</text>
                  <text x="40" y="116">v</text>
                  <text x="320" y="116">.</text>
                  <text x="8" y="132">.</text>
                  <text x="248" y="132">.-.-.-.-.-.-.-.</text>
                  <text x="320" y="132">.</text>
                  <text x="8" y="148">.</text>
                  <text x="144" y="148">BRSKI-PRM</text>
                  <text x="192" y="148">:</text>
                  <text x="244" y="148">Registrar-</text>
                  <text x="304" y="148">:</text>
                  <text x="320" y="148">.</text>
                  <text x="8" y="164">.</text>
                  <text x="60" y="164">Pledge</text>
                  <text x="192" y="164">:</text>
                  <text x="224" y="164">Agent</text>
                  <text x="304" y="164">:</text>
                  <text x="320" y="164">.</text>
                  <text x="8" y="180">.</text>
                  <text x="116" y="180">L2</text>
                  <text x="140" y="180">or</text>
                  <text x="164" y="180">L3</text>
                  <text x="248" y="180">:-.-.-.-.-.-.-:</text>
                  <text x="320" y="180">.</text>
                  <text x="420" y="180">BRSKI-</text>
                  <text x="8" y="196">.</text>
                  <text x="140" y="196">connectivity</text>
                  <text x="216" y="196">^</text>
                  <text x="320" y="196">.</text>
                  <text x="412" y="196">MASA</text>
                  <text x="164" y="212">..........................!.............</text>
                  <text x="52" y="228">Pledge</text>
                  <text x="132" y="228">Installation</text>
                  <text x="216" y="228">!</text>
                  <text x="60" y="244">Location</text>
                  <text x="216" y="244">!</text>
                  <text x="256" y="244">Nomadic</text>
                  <text x="216" y="260">!</text>
                  <text x="276" y="260">connectivity</text>
                  <text x="216" y="276">!</text>
                  <text x="252" y="292">...........!....................</text>
                  <text x="424" y="292">.........</text>
                  <text x="128" y="308">.</text>
                  <text x="216" y="308">v</text>
                  <text x="456" y="308">.</text>
                  <text x="128" y="324">.</text>
                  <text x="208" y="324">.-.-.-.-.-.-.-.</text>
                  <text x="300" y="324">BRSKI-</text>
                  <text x="456" y="324">.</text>
                  <text x="128" y="340">.</text>
                  <text x="152" y="340">:</text>
                  <text x="204" y="340">Registrar-</text>
                  <text x="264" y="340">:</text>
                  <text x="296" y="340">PRM</text>
                  <text x="372" y="340">Domain</text>
                  <text x="456" y="340">.</text>
                  <text x="128" y="356">.</text>
                  <text x="152" y="356">:</text>
                  <text x="184" y="356">Agent</text>
                  <text x="264" y="356">:</text>
                  <text x="384" y="356">Registrar</text>
                  <text x="456" y="356">.</text>
                  <text x="128" y="372">.</text>
                  <text x="208" y="372">:-.-.-.-.-.-.-:</text>
                  <text x="456" y="372">.</text>
                  <text x="128" y="388">.</text>
                  <text x="456" y="388">.</text>
                  <text x="128" y="404">.</text>
                  <text x="456" y="404">.</text>
                  <text x="128" y="420">.</text>
                  <text x="248" y="420">Key</text>
                  <text x="324" y="420">Infrastructure</text>
                  <text x="456" y="420">.</text>
                  <text x="128" y="436">.</text>
                  <text x="260" y="436">(e.g.,</text>
                  <text x="304" y="436">PKI</text>
                  <text x="336" y="436">CA)</text>
                  <text x="456" y="436">.</text>
                  <text x="128" y="452">.</text>
                  <text x="456" y="452">.</text>
                  <text x="292" y="468">..........................................</text>
                  <text x="260" y="484">Customer</text>
                  <text x="324" y="484">Domain</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------------------+
    :                                          ^
........................................       |
.   v                                  .       |
. +--------+           .-.-.-.-.-.-.-. .       |
. |        | BRSKI-PRM : Registrar-  : .       |
. | Pledge |<--------->: Agent       : .       |
. +--------+ L2 or L3  :-.-.-.-.-.-.-: .       | BRSKI-
.          connectivity   ^            .       | MASA
..........................!.............       |
   Pledge Installation    !                    |
   Location               ! Nomadic            |
                          ! connectivity       |
                          !                    |
               ...........!....................|.........
               .          v                    v        .
               .  .-.-.-.-.-.-.-. BRSKI- +-----------+  .
               .  : Registrar-  :  PRM   | Domain    |  .
               .  : Agent       :<------>| Registrar |  .
               .  :-.-.-.-.-.-.-:        +-----+-----+  .
               .                               |        .
               .           +-------------------+-----+  .
               .           | Key Infrastructure      |  .
               .           | (e.g., PKI CA)          |  .
               .           +-------------------------+  .
               ..........................................
                            Customer Domain
]]></artwork>
          </artset>
        </figure>
        <t>PRM enables support of this case through nomadic connectivity of the Registrar-Agent.
To perform enrollment in this setup, multiple round trips of the Registrar-Agent between the pledge installation location and the domain registrar are required.</t>
        <ol spacing="normal" type="1"><li>
            <t>Connectivity to domain registrar: preparation tasks for pledge bootstrapping not part of the BRSKI-PRM protocol definition, like retrieval of list of pledges to enroll.</t>
          </li>
          <li>
            <t>Connectivity to pledge installation location: retrieve information about available pledges (IDevID), collect request objects (i.e., Pledge Voucher-Requests and Pledge Enroll-Requests using the BRSKI-PRM approach described in <xref target="tpvr"/> and <xref target="tper"/>).</t>
          </li>
          <li>
            <t>Connectivity to domain registrar, submit collected request information of pledges, retrieve response objects (i.e., Voucher and Enroll-Response) using the BRSKI-PRM approach described in <xref target="pvr"/> and <xref target="per"/>.</t>
          </li>
          <li>
            <t>Connectivity to pledge installation location, provide retrieved objects to the pledges to enroll pledges and collect status using the BRSKI-PRM approach described in <xref target="voucher"/>, <xref target="cacerts"/>, and <xref target="enroll_response"/>.</t>
          </li>
          <li>
            <t>Connectivity to domain registrar, submit Voucher Status and Enrollment Status using the BRSKI-PRM approach described in <xref target="vstatus"/> and <xref target="estatus"/>.</t>
          </li>
        </ol>
        <t>Variations of this setup include cases where the Registrar-Agent uses for example WiFi to connect to the pledge installation network, and mobile network connectivity to connect to the domain registrar.
Both connections may also be possible in a single location at the same time, based on installation building conditions.</t>
      </section>
      <section anchor="co-located-registrar-agent-and-domain-registrar">
        <name>Co-located Registrar-Agent and Domain Registrar</name>
        <t>Compared to <xref target="RFC8995"/> BRSKI, pledges supporting BRSKI-PRM can be completely passive and only need to react when being requested to react by a Registrar-Agent.
In <xref target="RFC8995"/>, pledges instead need to continuously request enrollment from a domain registrar, which may result in undesirable communications pattern and possible overload of a domain registrar.</t>
        <figure anchor="uc4figure">
          <name>Registrar-Agent integrated into Domain Registrar example</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="464" viewBox="0 0 464 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,160 L 8,208" fill="none" stroke="black"/>
                <path d="M 80,160 L 80,208" fill="none" stroke="black"/>
                <path d="M 200,32 L 200,64" fill="none" stroke="black"/>
                <path d="M 208,144 L 208,224" fill="none" stroke="black"/>
                <path d="M 216,256 L 216,288" fill="none" stroke="black"/>
                <path d="M 368,72 L 368,136" fill="none" stroke="black"/>
                <path d="M 368,224 L 368,256" fill="none" stroke="black"/>
                <path d="M 416,144 L 416,224" fill="none" stroke="black"/>
                <path d="M 416,256 L 416,288" fill="none" stroke="black"/>
                <path d="M 424,32 L 424,64" fill="none" stroke="black"/>
                <path d="M 200,32 L 424,32" fill="none" stroke="black"/>
                <path d="M 200,64 L 424,64" fill="none" stroke="black"/>
                <path d="M 208,144 L 416,144" fill="none" stroke="black"/>
                <path d="M 8,160 L 80,160" fill="none" stroke="black"/>
                <path d="M 88,192 L 200,192" fill="none" stroke="black"/>
                <path d="M 8,208 L 80,208" fill="none" stroke="black"/>
                <path d="M 208,224 L 416,224" fill="none" stroke="black"/>
                <path d="M 216,256 L 416,256" fill="none" stroke="black"/>
                <path d="M 216,288 L 416,288" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="376,136 364,130.4 364,141.6" fill="black" transform="rotate(90,368,136)"/>
                <polygon class="arrowhead" points="376,72 364,66.4 364,77.6" fill="black" transform="rotate(270,368,72)"/>
                <polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
                <polygon class="arrowhead" points="96,192 84,186.4 84,197.6" fill="black" transform="rotate(180,88,192)"/>
                <g class="text">
                  <text x="48" y="52">.....</text>
                  <text x="92" y="52">Drop</text>
                  <text x="132" y="52">Ship</text>
                  <text x="176" y="52">.....</text>
                  <text x="236" y="52">Vendor</text>
                  <text x="296" y="52">Service</text>
                  <text x="32" y="68">:</text>
                  <text x="32" y="84">:</text>
                  <text x="32" y="100">:</text>
                  <text x="420" y="100">BRSKI-MASA</text>
                  <text x="32" y="116">:</text>
                  <text x="240" y="116">...............................</text>
                  <text x="408" y="116">.........</text>
                  <text x="32" y="132">:</text>
                  <text x="120" y="132">.</text>
                  <text x="440" y="132">.</text>
                  <text x="32" y="148">v</text>
                  <text x="120" y="148">.</text>
                  <text x="440" y="148">.</text>
                  <text x="120" y="164">.</text>
                  <text x="156" y="164">BRSKI-</text>
                  <text x="268" y="164">..............</text>
                  <text x="440" y="164">.</text>
                  <text x="120" y="180">.</text>
                  <text x="152" y="180">PRM</text>
                  <text x="216" y="180">.</text>
                  <text x="268" y="180">Registrar-</text>
                  <text x="320" y="180">.</text>
                  <text x="356" y="180">Domain</text>
                  <text x="440" y="180">.</text>
                  <text x="44" y="196">Pledge</text>
                  <text x="216" y="196">.</text>
                  <text x="248" y="196">Agent</text>
                  <text x="320" y="196">.</text>
                  <text x="368" y="196">Registrar</text>
                  <text x="440" y="196">.</text>
                  <text x="100" y="212">L2</text>
                  <text x="124" y="212">or</text>
                  <text x="148" y="212">L3</text>
                  <text x="268" y="212">..............</text>
                  <text x="440" y="212">.</text>
                  <text x="140" y="228">connectivity</text>
                  <text x="440" y="228">.</text>
                  <text x="120" y="244">.</text>
                  <text x="440" y="244">.</text>
                  <text x="120" y="260">.</text>
                  <text x="440" y="260">.</text>
                  <text x="120" y="276">.</text>
                  <text x="240" y="276">Key</text>
                  <text x="316" y="276">Infrastructure</text>
                  <text x="440" y="276">.</text>
                  <text x="120" y="292">.</text>
                  <text x="440" y="292">.</text>
                  <text x="280" y="308">.........................................</text>
                  <text x="252" y="324">Customer</text>
                  <text x="316" y="324">Domain</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
    :                                         | BRSKI-MASA
    :          ...............................|.........
    :          .                              v        .
    v          .          +-------------------------+  .
 +--------+    . BRSKI-   |..............           |  .
 |        |    .  PRM     |. Registrar- . Domain    |  .
 | Pledge |<------------->|. Agent      . Registrar |  .
 +--------+ L2 or L3      |..............           |  .
            connectivity  +-------------------+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork>
          </artset>
        </figure>
        <t>The benefits of BRSKI-PRM can be achieved even without the operational complexity of stand-alone Registrar-Agents by integrating the necessary functionality of the Registrar-Agent as a module into the domain registrar as shown in <xref target="uc4figure"/> so that it can support the BRSKI-PRM communications to the pledge.</t>
      </section>
      <section anchor="agt_prx">
        <name>Agent Proximity Assertion</name>
        <t>"Agent proximity" is a statement in the PVR and the voucher that the registrar communicates via the Registrar-Agent as defined in <xref target="exchanges"/> and not directly to the pledge.
It is therefore a different assertion than "network proximity", which is defined in <xref section="3" sectionFormat="of" target="RFC8995"/>.
Hence, <xref target="I-D.ietf-anima-rfc8366bis"/> defines the additional assertion type <tt>agent-proximity</tt>.
This assertion type can be verified by the registrar and MASA during BRSKI-PRM voucher-request processing.</t>
        <t>In BRSKI, the pledge verifies POP of the registrar end-entity (EE) credentials via the TLS handshake and pins that public key as the <tt>proximity-registrar-cert</tt> into the voucher request.
This allows the MASA to verify the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS session is considered provisional until the pledge receives the voucher to verify POI.</t>
        <t>In contrast, in BRSKI-PRM the pledge has no direct connection to the registrar and <bcp14>MUST</bcp14> accept the supplied registrar EE certificate provisionally until it receives the voucher as described in <xref target="voucher"/> to verify both POP and POI.
The provisional registrar EE certificate is used for the object security along the authenticated self-contained objects that in BRSKI-PRM replace the direct TLS connection to the registrar available in BRSKI <xref target="RFC8995"/>.
See also <xref section="5" sectionFormat="of" target="RFC8995"/> on "provisional state".</t>
        <t>For the Agent Proximity Assertion, the Registrar-Agent EE certificate and registrar EE certificate must be signed by the same domain owner, i.e., <bcp14>MUST</bcp14> possess a common domain trust anchor in their certificate chain.
Akin to the Network Proximity Assertion in BRSKI <xref target="RFC8995"/>, the Agent Proximity Assertion provides pledge proximity evidence to the MASA.
But additionally, the Agent Proximity Assertion allows the domain registrar to be sure that the PVR supplied by the Registrar-Agent was in fact collected by the Registrar-Agent to which the registrar is connected by utilizing an agent-signed data object.</t>
      </section>
    </section>
    <section anchor="system-components">
      <name>System Components</name>
      <section anchor="agent_component">
        <name>Registrar-Agent</name>
        <t>The Registrar-Agent is a new component in BRSKI-PRM that provides a store and forward communication path with secure message passing between pledges in responder mode and the domain registrar.
It uses its own end-entity (EE) certificate and corresponding credentials (i.e., private key) for TLS client authentication and for signing agent-signed data objects.</t>
        <t>The Registrar-Agent EE certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier as defined in <xref section="4.2.1.2" sectionFormat="of" target="RFC5280"/>, which is used as a reference within agent-signed data objects as defined in <xref target="jws-asd"/>.
Note that this is an additional requirement for issuing the Registrar-Agent EE certificate.
<xref target="RFC8995"/> has a similar requirement for the registrar EE certificate.</t>
        <t>The SubjectKeyIdentifier is used in favor of providing the complete Registrar-Agent EE certificate in agent-signed data objects to accommodate also constrained environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SubjectKeyIdentifier in favor of a certificate fingerprint to avoid additional computations.</t>
        <t>The provisioning of the Registrar-Agent EE certificate is out of scope for this document, but may be done using its own BRSKI run or by other means such as configuration.
It is <bcp14>RECOMMENDED</bcp14> to use short lived Registrar-Agent EE certificates in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>
        <t>Further, the Registrar-Agent requires the registrar EE certificate to provide it to the pledge.
It <bcp14>MAY</bcp14> use the certificate verified during server authentication within an initial TLS session with the registrar;
in this case, the Registrar-Agent <bcp14>MUST</bcp14> possess the domain trust anchor (i.e., CA certificate) for the registrar EE certificate to verify the certificate chain.
Alternatively, the registrar EE certificate <bcp14>MAY</bcp14> be provided via configuration or a repository.
The registrar IP address or hostname is provided either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/> (see <xref target="discovery_uc2_reg"/>).</t>
        <t>In addition to the certificates, the Registrar-Agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow for the discovery of pledges by the Registrar-Agent using DNS-SD with mDNS (see <xref target="discovery_uc2_ppa"/>).
The list may be provided by prior administrative means or the Registrar-Agent may get the information via an (out-of-band) interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, where the product-serial-number would be initialized from the 12N B005 Product Serial Number data record.</t>
        <t>In summary, the following information <bcp14>MUST</bcp14> be available at the Registrar-Agent before the interaction with a pledge:</t>
        <ul spacing="normal">
          <li>
            <t>Registrar-Agent EE certificate and corresponding private key: own operational credentials to authenticate and sign agent-signed data</t>
          </li>
          <li>
            <t>Registrar EE certificate: certificate of the domain registrar to be provided to the pledge</t>
          </li>
          <li>
            <t>Serial number(s): product-serial-number(s) of pledge(s) to be bootstrapped; used for discovery</t>
          </li>
        </ul>
        <t>Further, the Registrar-Agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
        <t>Finally, the Registrar-Agent <bcp14>MAY</bcp14> possess the IDevID (root or issuing) CA certificate of the pledge manufacturer/vendor to validate the IDevID certificate on returned PVR or in case of optional TLS usage for pledge communication (see <xref target="pledgehttps"/>).
The distribution of IDevID CA certificates to the Registrar-Agent is out of scope of this document and may be done by a manual configuration.</t>
        <section anchor="discovery_uc2_reg">
          <name>Discovery of the Registrar</name>
          <t>While the Registrar-Agent requires the IP address of the domain registrar to initiate a TLS session, a separate discovery of the registrar is likely not needed and a configuration of the domain registrar IP address or hostname is assumed.
Registrar-Agent and registrar are domain components that already have a trust relation, as a Registrar-Agent acts as representative of the domain registrar towards the pledge or may even be collocated with the domain registrar.
Further, other communication (not part of this document) between the Registrar-Agent and the registrar is assumed, e.g., to exchange information about product-serial-number(s) of pledges to be discovered as outlined in <xref target="arch_nomadic"/>.</t>
          <t>Moreover, the standard discovery described in <xref section="4" sectionFormat="of" target="RFC8995"/> and the <xref section="A.2" sectionFormat="of" target="RFC8995"/> does not support identification of registrars with an enhanced feature set (like the support of BRSKI-PRM), and hence this standard discovery is not applicable.</t>
          <t>As a more general solution, the BRSKI discovery mechanism can be extended to provide upfront information on the capabilities of registrars, such as the mode of operation (pledge-responder-mode or registrar-responder-mode).
Defining discovery extensions is out of scope of this document.
For further discussion, see <xref target="I-D.ietf-anima-brski-discovery"/>.</t>
        </section>
        <section anchor="discovery_uc2_ppa">
          <name>Discovery of the Pledge</name>
          <t>The discovery of the pledge by the Registrar-Agent in the context of this document describes the minimum discovery approach that <bcp14>MUST</bcp14> be supported.
A more general discovery mechanism, also supporting GRASP besides DNS-SD with mDNS, is discussed in <xref target="I-D.ietf-anima-brski-discovery"/>.</t>
          <t>Discovery in BRSKI-PRM uses DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
Note that <xref section="9" sectionFormat="of" target="RFC6762"/> provides support for conflict resolution in situations when a DNS-SD with mDNS responder receives an mDNS response with inconsistent data.
Note that <xref target="RFC8990"/> does not support conflict resolution of mDNS, which may be a limitation for its application.</t>
          <t>The pledge constructs a Service Instance Name based on device local information (manufacturer/vendor name and serial number), which results in <tt>&lt;product-serial-number&gt;._brski-pledge._tcp.local</tt>.
The product-serial-number composition is manufacturer dependent and may contain information regarding the manufacturer, the product type, and further information specific to the product instance.
To allow distinction of pledges, the product-serial-number therefore needs to be sufficiently unique.</t>
          <t>Note that this goes against the naming recommendation of <xref target="RFC6763"/>.
The <tt>_brski-pledge._tcp</tt> service, however, targets machine-to-machine discovery.</t>
          <t>In the absence of a more general discovery as defined in <xref target="I-D.ietf-anima-brski-discovery"/> the Registrar-Agent <bcp14>MUST</bcp14> use</t>
          <ul spacing="normal">
            <li>
              <t><tt>&lt;product-serial-number&gt;._brski-pledge._tcp.local</tt>, to discover a specific pledge, e.g., when connected to a local network.</t>
            </li>
            <li>
              <t><tt>_brski-pledge._tcp.local</tt> to get a list of pledges to be bootstrapped.</t>
            </li>
          </ul>
          <t>A manufacturer may allow the pledge to react on DNS-SD with mDNS discovery without its product-serial-number contained.
This allows a commissioning tool to discover pledges to be bootstrapped in the domain.
The manufacturer supports this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>
          <t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply DNS-SD with mDNS.
For Ethernet, it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>
        </section>
      </section>
      <section anchor="pledge_component">
        <name>Pledge in Responder Mode</name>
        <t>In BRSKI-PRM, the pledge is triggered by the Registrar-Agent to create the PVR and PER.
It is also triggered for processing of the responses and the generation of status information once the Registrar-Agent has received the responses from the registrar later in the process.</t>
        <t>To enable interaction as responder with the Registrar-Agent, pledges in responder mode <bcp14>MUST</bcp14> act as servers and <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="pledge_ep_table"/> within the BRSKI-defined <tt>/.well-known/brski/</tt> URI path, except for the <bcp14>OPTIONAL</bcp14> endpoint "qps".
The endpoints are defined with short names to also accommodate for resource-constrained devices.</t>
        <table anchor="pledge_ep_table">
          <name>Well-Known Endpoints on a Pledge in Responder Mode</name>
          <thead>
            <tr>
              <th align="left">Endpoint</th>
              <th align="left">Operation</th>
              <th align="left">Exchange and Artifacts</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">tpvr</td>
              <td align="left">Trigger Pledge Voucher-Request</td>
              <td align="left">
                <xref target="tpvr"/></td>
            </tr>
            <tr>
              <td align="left">tper</td>
              <td align="left">Trigger Pledge Enroll-Request</td>
              <td align="left">
                <xref target="tper"/></td>
            </tr>
            <tr>
              <td align="left">svr</td>
              <td align="left">Supply Voucher to Pledge</td>
              <td align="left">
                <xref target="voucher"/></td>
            </tr>
            <tr>
              <td align="left">scac</td>
              <td align="left">Supply CA Certificates to Pledge</td>
              <td align="left">
                <xref target="cacerts"/></td>
            </tr>
            <tr>
              <td align="left">ser</td>
              <td align="left">Supply Enroll-Response to Pledge</td>
              <td align="left">
                <xref target="enroll_response"/></td>
            </tr>
            <tr>
              <td align="left">qps</td>
              <td align="left">Query Pledge Status</td>
              <td align="left">
                <xref target="query"/></td>
            </tr>
          </tbody>
        </table>
        <t>HTTP(S) uses the Host header field (or :authority in HTTP/2) to allow for name-based virtual hosting as explained in <xref section="7.2" sectionFormat="of" target="RFC9110"/>.
This header field is mandatory, and so a compliant HTTP(S) client is going to insert it, which may be just an IP address.
The pledge <bcp14>MUST</bcp14> respond to all requests regardless of the Host header field provided by the client (i.e., ignore it).
Note that there is no requirement for the pledge to operate its BRSKI-PRM service on port 80 or port 443, so there is no reason for name-based virtual hosting.</t>
        <t>For instance, when the Registrar-Agent reaches out to the "tpvr" endpoint on a pledge in responder mode with the full URI <tt>http://pledge.example.com/.well-known/brski/tpvr</tt>, it sets the Host header field to <tt>pledge.example.com</tt> and the absolute path <tt>/.well-known/brski/tpbr</tt>.
In practice, however, the pledge is usually known by a <tt>.local</tt> hostname or only its IP address as returned by a discovery protocol, which will be included in the Host header field.</t>
        <t>As BRSKI-PRM uses authenticated self-contained objects between the pledge and the domain registrar, the binding of the pledge identity to the voucher-requests is provided by the wrapping signature employing the pledge IDevID credential.
Hence, pledges <bcp14>MUST</bcp14> have an Initial Device Identifier (IDevID) installed in them at the factory.</t>
        <section anchor="pledge-with-combined-functionality">
          <name>Pledge with Combined Functionality</name>
          <t>Pledges <bcp14>MAY</bcp14> support both initiator and responder mode.</t>
          <t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-like attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>
          <t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a Pledge Enroll-Request (PER) or to provide an Enroll-Response can be used for further certificates.</t>
        </section>
      </section>
      <section anchor="registrar_component">
        <name>Domain Registrar</name>
        <t>In BRSKI-PRM, the domain registrar provides the endpoints already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
In addition, it <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="registrar_ep_table"/> within the BRSKI-defined <tt>/.well-known/brski/</tt> Well-Known URI path.
These endpoints accommodate for the authenticated self-contained objects used by BRSKI-PRM to provide Pledge Enroll-Request (PER) artifacts and signature-wrapped CA certificates via the Registrar-Agent.</t>
        <table anchor="registrar_ep_table">
          <name>Additional Well-Known Endpoints on a BRSKI-PRM Registrar</name>
          <thead>
            <tr>
              <th align="left">Endpoint</th>
              <th align="left">Operation</th>
              <th align="left">Exchange and Artifacts</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">requestenroll</td>
              <td align="left">Supply PER to Registrar</td>
              <td align="left">
                <xref target="per"/></td>
            </tr>
            <tr>
              <td align="left">wrappedcacerts</td>
              <td align="left">Obtain CA Certificates</td>
              <td align="left">
                <xref target="obtain_cacerts"/></td>
            </tr>
          </tbody>
        </table>
        <t>The registrar possesses its own EE certificate and corresponding private key for authenticating and signing.
It <bcp14>MUST</bcp14> use the same certificate/credentials for authentication in the TLS session with a Registrar-Agent and for signing artifacts for that Registrar-Agent and its pledges (see <xref target="rcv_artifact"/>).
Overall, this may have operational implications when the registrar is part of a scalable framework as described in <xref section="1.3.1" sectionFormat="of" target="I-D.richardson-anima-registrar-considerations"/>.</t>
        <t>According to <xref section="5.3" sectionFormat="of" target="RFC8995"/>, the domain registrar performs the pledge authorization for bootstrapping within its domain based on the Pledge Voucher-Request.
For this, it <bcp14>MUST</bcp14> possess the IDevID trust anchor(s) (i.e., root or issuing CA certificate(s)) of the pledge vendor(s)/manufacturer(s).
This behavior is retained in BRSKI-PRM.</t>
        <t>In its role as EST server <xref target="RFC7030"/>, the domain registrar <bcp14>MUST</bcp14> also possess the domain CA certificates as defined in <xref section="5.9" sectionFormat="of" target="RFC8995"/>.</t>
        <t>Finally, the domain registrar <bcp14>MUST</bcp14> possess the Registrar-Agent EE certificate(s) to validate agent-signed data and to provide it to the MASA.
The registrar <bcp14>MAY</bcp14> use the certificate verified during client authentication within the TLS sessions with the Registrar-Agent;
in this case, the registrar <bcp14>MUST</bcp14> possess the domain trust anchor (i.e., domain CA certificate) for the Registrar-Agent EE certificate to verify the certificate chain.
Alternatively, the Registrar-Agent EE certificate(s) <bcp14>MAY</bcp14> be provided via configuration or a repository.</t>
        <section anchor="domain-registrar-with-combined-functionality">
          <name>Domain Registrar with Combined Functionality</name>
          <t>A registrar with combined BRSKI and BRSKI-PRM functionality <bcp14>MAY</bcp14> detect if the bootstrapping is performed by the pledge directly (BRSKI case) or by a Registrar-Agent (BRSKI-PRM case) based on the utilized credentials for client authentication during the TLS session establishment and switch the operational mode from BRSKI to BRSKI-PRM.</t>
          <t>This may be supported by a specific naming in the SAN (subject alternative name) component of the Registrar-Agent EE certificate, which allows the domain registrar to explicitly detect already in the TLS session establishment that the connecting client is a Registrar-Agent.</t>
          <t>The registrar <bcp14>MAY</bcp14> be restricted by configuration, if it accepts every Registrar-Agent, which can authenticate with a domain issued certificate or only explicitly authorized ones.</t>
          <t>Note that using an EE certificate for TLS client authentication of the Registrar-Agent is a deviation from <xref target="RFC8995"/>, in which the pledge IDevID certificate is used to perform TLS client authentication.</t>
        </section>
      </section>
      <section anchor="masa">
        <name>MASA</name>
        <t>The Manufacturer Authorized Signing Authority (MASA) is a vendor service that generates and signs voucher artifacts for pledges by the same vendor.
When these pledges support BRSKI-PRM, the MASA needs to implement the following functionality in addition to BRSKI <xref target="RFC8995"/>.</t>
        <t>A MASA for pledges in responder mode <bcp14>MUST</bcp14> support the voucher format defined in <xref target="I-D.ietf-anima-jws-voucher"/> to parse and process JWS-signed voucher-request artifacts and generate JWS-signed voucher artifacts.</t>
        <t>Further, a MASA for pledges in responder mode <bcp14>MUST</bcp14> support the Agent Proximity Assertion (see <xref target="agt_prx"/>) through the validation steps defined in <xref target="masa_interaction"/> based on the Pledge Voucher-Request (PVR) and Registrar Voucher-Request (RVR) artifact fields defined in <xref target="pvr_artifact"/> and <xref target="rvr_artifact"/>, respectively.</t>
      </section>
    </section>
    <section anchor="exchanges">
      <name>Exchanges and Artifacts</name>
      <t>The interaction of the pledge with the Registrar-Agent may be accomplished using different transports (i.e., protocols and/or network technologies).
This specification utilizes HTTP(S) as default transport.
Other specifications may define alternative transports such as CoAP, Bluetooth Low Energy (BLE), or Near Field Communication (NFC).
These transports may differ from and are independent of the ones used between the Registrar-Agent and the registrar.</t>
      <t>Transport independence is realized through authenticated self-contained objects that are not bound to a specific transport security and stay the same along the communication path from the pledge via the Registrar-Agent to the registrar.
<xref target="I-D.ietf-anima-rfc8366bis"/> defines CMS-signed JSON structures as format for artifacts representing authenticated self-contained objects.
This specification utilizes JWS-signed JSON structures as default format for BRSKI-PRM.
Other specifications may define alternative formats for representing authenticated self-contained objects such as COSE-signed CBOR structures.</t>
      <t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following subsections.</t>
      <figure anchor="exchangesfig_uc2_all">
        <name>Overview pledge-responder-mode exchanges</name>
        <artset>
          <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1904" width="576" viewBox="0 0 576 1904" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
              <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
              <path d="M 16,88 L 16,192" fill="none" stroke="black"/>
              <path d="M 16,256 L 16,320" fill="none" stroke="black"/>
              <path d="M 16,384 L 16,448" fill="none" stroke="black"/>
              <path d="M 16,512 L 16,800" fill="none" stroke="black"/>
              <path d="M 16,864 L 16,960" fill="none" stroke="black"/>
              <path d="M 16,1024 L 16,1072" fill="none" stroke="black"/>
              <path d="M 16,1136 L 16,1200" fill="none" stroke="black"/>
              <path d="M 16,1264 L 16,1312" fill="none" stroke="black"/>
              <path d="M 16,1376 L 16,1440" fill="none" stroke="black"/>
              <path d="M 16,1504 L 16,1632" fill="none" stroke="black"/>
              <path d="M 16,1696 L 16,1744" fill="none" stroke="black"/>
              <path d="M 16,1808 L 16,1872" fill="none" stroke="black"/>
              <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
              <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
              <path d="M 168,88 L 168,192" fill="none" stroke="black"/>
              <path d="M 168,256 L 168,320" fill="none" stroke="black"/>
              <path d="M 168,384 L 168,448" fill="none" stroke="black"/>
              <path d="M 168,512 L 168,800" fill="none" stroke="black"/>
              <path d="M 168,864 L 168,960" fill="none" stroke="black"/>
              <path d="M 168,1024 L 168,1072" fill="none" stroke="black"/>
              <path d="M 168,1136 L 168,1200" fill="none" stroke="black"/>
              <path d="M 168,1264 L 168,1312" fill="none" stroke="black"/>
              <path d="M 168,1376 L 168,1440" fill="none" stroke="black"/>
              <path d="M 168,1504 L 168,1632" fill="none" stroke="black"/>
              <path d="M 168,1696 L 168,1744" fill="none" stroke="black"/>
              <path d="M 168,1808 L 168,1872" fill="none" stroke="black"/>
              <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
              <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
              <path d="M 312,88 L 312,192" fill="none" stroke="black"/>
              <path d="M 312,256 L 312,320" fill="none" stroke="black"/>
              <path d="M 312,384 L 312,448" fill="none" stroke="black"/>
              <path d="M 312,512 L 312,544" fill="none" stroke="black"/>
              <path d="M 312,592 L 312,624" fill="none" stroke="black"/>
              <path d="M 312,656 L 312,800" fill="none" stroke="black"/>
              <path d="M 312,864 L 312,960" fill="none" stroke="black"/>
              <path d="M 312,1024 L 312,1072" fill="none" stroke="black"/>
              <path d="M 312,1136 L 312,1200" fill="none" stroke="black"/>
              <path d="M 312,1264 L 312,1312" fill="none" stroke="black"/>
              <path d="M 312,1376 L 312,1440" fill="none" stroke="black"/>
              <path d="M 312,1504 L 312,1600" fill="none" stroke="black"/>
              <path d="M 312,1696 L 312,1744" fill="none" stroke="black"/>
              <path d="M 312,1808 L 312,1872" fill="none" stroke="black"/>
              <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
              <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
              <path d="M 456,88 L 456,192" fill="none" stroke="black"/>
              <path d="M 456,256 L 456,320" fill="none" stroke="black"/>
              <path d="M 456,384 L 456,448" fill="none" stroke="black"/>
              <path d="M 456,512 L 456,664" fill="none" stroke="black"/>
              <path d="M 456,784 L 456,800" fill="none" stroke="black"/>
              <path d="M 456,864 L 456,960" fill="none" stroke="black"/>
              <path d="M 456,1024 L 456,1072" fill="none" stroke="black"/>
              <path d="M 456,1136 L 456,1200" fill="none" stroke="black"/>
              <path d="M 456,1264 L 456,1312" fill="none" stroke="black"/>
              <path d="M 456,1376 L 456,1440" fill="none" stroke="black"/>
              <path d="M 456,1504 L 456,1544" fill="none" stroke="black"/>
              <path d="M 456,1600 L 456,1632" fill="none" stroke="black"/>
              <path d="M 456,1696 L 456,1744" fill="none" stroke="black"/>
              <path d="M 456,1808 L 456,1872" fill="none" stroke="black"/>
              <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
              <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
              <path d="M 560,88 L 560,192" fill="none" stroke="black"/>
              <path d="M 560,256 L 560,320" fill="none" stroke="black"/>
              <path d="M 560,384 L 560,448" fill="none" stroke="black"/>
              <path d="M 560,512 L 560,704" fill="none" stroke="black"/>
              <path d="M 560,752 L 560,800" fill="none" stroke="black"/>
              <path d="M 560,864 L 560,960" fill="none" stroke="black"/>
              <path d="M 560,1024 L 560,1072" fill="none" stroke="black"/>
              <path d="M 560,1136 L 560,1200" fill="none" stroke="black"/>
              <path d="M 560,1264 L 560,1312" fill="none" stroke="black"/>
              <path d="M 560,1376 L 560,1440" fill="none" stroke="black"/>
              <path d="M 560,1504 L 560,1632" fill="none" stroke="black"/>
              <path d="M 560,1696 L 560,1744" fill="none" stroke="black"/>
              <path d="M 560,1808 L 560,1872" fill="none" stroke="black"/>
              <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
              <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
              <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
              <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
              <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
              <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
              <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
              <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
              <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
              <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
              <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
              <path d="M 24,160 L 160,160" fill="none" stroke="black"/>
              <path d="M 24,176 L 160,176" fill="none" stroke="black"/>
              <path d="M 24,272 L 56,272" fill="none" stroke="black"/>
              <path d="M 128,272 L 160,272" fill="none" stroke="black"/>
              <path d="M 24,288 L 72,288" fill="none" stroke="black"/>
              <path d="M 112,288 L 160,288" fill="none" stroke="black"/>
              <path d="M 24,304 L 80,304" fill="none" stroke="black"/>
              <path d="M 112,304 L 160,304" fill="none" stroke="black"/>
              <path d="M 24,400 L 56,400" fill="none" stroke="black"/>
              <path d="M 128,400 L 160,400" fill="none" stroke="black"/>
              <path d="M 24,416 L 72,416" fill="none" stroke="black"/>
              <path d="M 112,416 L 160,416" fill="none" stroke="black"/>
              <path d="M 24,432 L 80,432" fill="none" stroke="black"/>
              <path d="M 112,432 L 160,432" fill="none" stroke="black"/>
              <path d="M 176,528 L 216,528" fill="none" stroke="black"/>
              <path d="M 256,528 L 304,528" fill="none" stroke="black"/>
              <path d="M 176,608 L 224,608" fill="none" stroke="black"/>
              <path d="M 256,608 L 304,608" fill="none" stroke="black"/>
              <path d="M 320,672 L 416,672" fill="none" stroke="black"/>
              <path d="M 456,672 L 552,672" fill="none" stroke="black"/>
              <path d="M 320,688 L 424,688" fill="none" stroke="black"/>
              <path d="M 456,688 L 552,688" fill="none" stroke="black"/>
              <path d="M 320,768 L 408,768" fill="none" stroke="black"/>
              <path d="M 472,768 L 552,768" fill="none" stroke="black"/>
              <path d="M 176,784 L 208,784" fill="none" stroke="black"/>
              <path d="M 280,784 L 304,784" fill="none" stroke="black"/>
              <path d="M 176,880 L 216,880" fill="none" stroke="black"/>
              <path d="M 256,880 L 304,880" fill="none" stroke="black"/>
              <path d="M 176,896 L 224,896" fill="none" stroke="black"/>
              <path d="M 256,896 L 304,896" fill="none" stroke="black"/>
              <path d="M 320,912 L 344,912" fill="none" stroke="black"/>
              <path d="M 424,912 L 448,912" fill="none" stroke="black"/>
              <path d="M 320,928 L 336,928" fill="none" stroke="black"/>
              <path d="M 176,944 L 192,944" fill="none" stroke="black"/>
              <path d="M 288,944 L 304,944" fill="none" stroke="black"/>
              <path d="M 176,1040 L 216,1040" fill="none" stroke="black"/>
              <path d="M 256,1040 L 304,1040" fill="none" stroke="black"/>
              <path d="M 176,1056 L 208,1056" fill="none" stroke="black"/>
              <path d="M 272,1056 L 304,1056" fill="none" stroke="black"/>
              <path d="M 24,1152 L 56,1152" fill="none" stroke="black"/>
              <path d="M 128,1152 L 160,1152" fill="none" stroke="black"/>
              <path d="M 24,1168 L 64,1168" fill="none" stroke="black"/>
              <path d="M 136,1168 L 160,1168" fill="none" stroke="black"/>
              <path d="M 24,1184 L 64,1184" fill="none" stroke="black"/>
              <path d="M 128,1184 L 160,1184" fill="none" stroke="black"/>
              <path d="M 24,1280 L 56,1280" fill="none" stroke="black"/>
              <path d="M 128,1280 L 160,1280" fill="none" stroke="black"/>
              <path d="M 24,1296 L 64,1296" fill="none" stroke="black"/>
              <path d="M 128,1296 L 160,1296" fill="none" stroke="black"/>
              <path d="M 24,1392 L 56,1392" fill="none" stroke="black"/>
              <path d="M 128,1392 L 160,1392" fill="none" stroke="black"/>
              <path d="M 24,1408 L 48,1408" fill="none" stroke="black"/>
              <path d="M 144,1408 L 160,1408" fill="none" stroke="black"/>
              <path d="M 24,1424 L 56,1424" fill="none" stroke="black"/>
              <path d="M 120,1424 L 160,1424" fill="none" stroke="black"/>
              <path d="M 176,1520 L 216,1520" fill="none" stroke="black"/>
              <path d="M 256,1520 L 304,1520" fill="none" stroke="black"/>
              <path d="M 176,1536 L 208,1536" fill="none" stroke="black"/>
              <path d="M 272,1536 L 304,1536" fill="none" stroke="black"/>
              <path d="M 320,1552 L 416,1552" fill="none" stroke="black"/>
              <path d="M 456,1552 L 552,1552" fill="none" stroke="black"/>
              <path d="M 320,1568 L 352,1568" fill="none" stroke="black"/>
              <path d="M 520,1568 L 552,1568" fill="none" stroke="black"/>
              <path d="M 320,1584 L 368,1584" fill="none" stroke="black"/>
              <path d="M 504,1584 L 552,1584" fill="none" stroke="black"/>
              <path d="M 176,1712 L 216,1712" fill="none" stroke="black"/>
              <path d="M 256,1712 L 304,1712" fill="none" stroke="black"/>
              <path d="M 176,1728 L 208,1728" fill="none" stroke="black"/>
              <path d="M 272,1728 L 304,1728" fill="none" stroke="black"/>
              <path d="M 24,1824 L 56,1824" fill="none" stroke="black"/>
              <path d="M 128,1824 L 160,1824" fill="none" stroke="black"/>
              <path d="M 24,1840 L 64,1840" fill="none" stroke="black"/>
              <path d="M 128,1840 L 160,1840" fill="none" stroke="black"/>
              <path d="M 24,1856 L 64,1856" fill="none" stroke="black"/>
              <path d="M 128,1856 L 160,1856" fill="none" stroke="black"/>
              <polygon class="arrowhead" points="560,1568 548,1562.4 548,1573.6" fill="black" transform="rotate(0,552,1568)"/>
              <polygon class="arrowhead" points="560,1552 548,1546.4 548,1557.6" fill="black" transform="rotate(0,552,1552)"/>
              <polygon class="arrowhead" points="560,688 548,682.4 548,693.6" fill="black" transform="rotate(0,552,688)"/>
              <polygon class="arrowhead" points="560,672 548,666.4 548,677.6" fill="black" transform="rotate(0,552,672)"/>
              <polygon class="arrowhead" points="456,912 444,906.4 444,917.6" fill="black" transform="rotate(0,448,912)"/>
              <polygon class="arrowhead" points="328,1584 316,1578.4 316,1589.6" fill="black" transform="rotate(180,320,1584)"/>
              <polygon class="arrowhead" points="328,1552 316,1546.4 316,1557.6" fill="black" transform="rotate(180,320,1552)"/>
              <polygon class="arrowhead" points="328,928 316,922.4 316,933.6" fill="black" transform="rotate(180,320,928)"/>
              <polygon class="arrowhead" points="328,768 316,762.4 316,773.6" fill="black" transform="rotate(180,320,768)"/>
              <polygon class="arrowhead" points="328,672 316,666.4 316,677.6" fill="black" transform="rotate(180,320,672)"/>
              <polygon class="arrowhead" points="312,1728 300,1722.4 300,1733.6" fill="black" transform="rotate(0,304,1728)"/>
              <polygon class="arrowhead" points="312,1712 300,1706.4 300,1717.6" fill="black" transform="rotate(0,304,1712)"/>
              <polygon class="arrowhead" points="312,1536 300,1530.4 300,1541.6" fill="black" transform="rotate(0,304,1536)"/>
              <polygon class="arrowhead" points="312,1520 300,1514.4 300,1525.6" fill="black" transform="rotate(0,304,1520)"/>
              <polygon class="arrowhead" points="312,1040 300,1034.4 300,1045.6" fill="black" transform="rotate(0,304,1040)"/>
              <polygon class="arrowhead" points="312,896 300,890.4 300,901.6" fill="black" transform="rotate(0,304,896)"/>
              <polygon class="arrowhead" points="312,880 300,874.4 300,885.6" fill="black" transform="rotate(0,304,880)"/>
              <polygon class="arrowhead" points="312,608 300,602.4 300,613.6" fill="black" transform="rotate(0,304,608)"/>
              <polygon class="arrowhead" points="312,528 300,522.4 300,533.6" fill="black" transform="rotate(0,304,528)"/>
              <polygon class="arrowhead" points="184,1712 172,1706.4 172,1717.6" fill="black" transform="rotate(180,176,1712)"/>
              <polygon class="arrowhead" points="184,1520 172,1514.4 172,1525.6" fill="black" transform="rotate(180,176,1520)"/>
              <polygon class="arrowhead" points="184,1056 172,1050.4 172,1061.6" fill="black" transform="rotate(180,176,1056)"/>
              <polygon class="arrowhead" points="184,1040 172,1034.4 172,1045.6" fill="black" transform="rotate(180,176,1040)"/>
              <polygon class="arrowhead" points="184,944 172,938.4 172,949.6" fill="black" transform="rotate(180,176,944)"/>
              <polygon class="arrowhead" points="184,880 172,874.4 172,885.6" fill="black" transform="rotate(180,176,880)"/>
              <polygon class="arrowhead" points="184,784 172,778.4 172,789.6" fill="black" transform="rotate(180,176,784)"/>
              <polygon class="arrowhead" points="184,528 172,522.4 172,533.6" fill="black" transform="rotate(180,176,528)"/>
              <polygon class="arrowhead" points="168,1856 156,1850.4 156,1861.6" fill="black" transform="rotate(0,160,1856)"/>
              <polygon class="arrowhead" points="168,1824 156,1818.4 156,1829.6" fill="black" transform="rotate(0,160,1824)"/>
              <polygon class="arrowhead" points="168,1424 156,1418.4 156,1429.6" fill="black" transform="rotate(0,160,1424)"/>
              <polygon class="arrowhead" points="168,1392 156,1386.4 156,1397.6" fill="black" transform="rotate(0,160,1392)"/>
              <polygon class="arrowhead" points="168,1280 156,1274.4 156,1285.6" fill="black" transform="rotate(0,160,1280)"/>
              <polygon class="arrowhead" points="168,1184 156,1178.4 156,1189.6" fill="black" transform="rotate(0,160,1184)"/>
              <polygon class="arrowhead" points="168,1152 156,1146.4 156,1157.6" fill="black" transform="rotate(0,160,1152)"/>
              <polygon class="arrowhead" points="168,432 156,426.4 156,437.6" fill="black" transform="rotate(0,160,432)"/>
              <polygon class="arrowhead" points="168,400 156,394.4 156,405.6" fill="black" transform="rotate(0,160,400)"/>
              <polygon class="arrowhead" points="168,304 156,298.4 156,309.6" fill="black" transform="rotate(0,160,304)"/>
              <polygon class="arrowhead" points="168,272 156,266.4 156,277.6" fill="black" transform="rotate(0,160,272)"/>
              <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
              <polygon class="arrowhead" points="32,1840 20,1834.4 20,1845.6" fill="black" transform="rotate(180,24,1840)"/>
              <polygon class="arrowhead" points="32,1824 20,1818.4 20,1829.6" fill="black" transform="rotate(180,24,1824)"/>
              <polygon class="arrowhead" points="32,1408 20,1402.4 20,1413.6" fill="black" transform="rotate(180,24,1408)"/>
              <polygon class="arrowhead" points="32,1392 20,1386.4 20,1397.6" fill="black" transform="rotate(180,24,1392)"/>
              <polygon class="arrowhead" points="32,1296 20,1290.4 20,1301.6" fill="black" transform="rotate(180,24,1296)"/>
              <polygon class="arrowhead" points="32,1280 20,1274.4 20,1285.6" fill="black" transform="rotate(180,24,1280)"/>
              <polygon class="arrowhead" points="32,1168 20,1162.4 20,1173.6" fill="black" transform="rotate(180,24,1168)"/>
              <polygon class="arrowhead" points="32,1152 20,1146.4 20,1157.6" fill="black" transform="rotate(180,24,1152)"/>
              <polygon class="arrowhead" points="32,416 20,410.4 20,421.6" fill="black" transform="rotate(180,24,416)"/>
              <polygon class="arrowhead" points="32,400 20,394.4 20,405.6" fill="black" transform="rotate(180,24,400)"/>
              <polygon class="arrowhead" points="32,288 20,282.4 20,293.6" fill="black" transform="rotate(180,24,288)"/>
              <polygon class="arrowhead" points="32,272 20,266.4 20,277.6" fill="black" transform="rotate(180,24,272)"/>
              <polygon class="arrowhead" points="32,160 20,154.4 20,165.6" fill="black" transform="rotate(180,24,160)"/>
              <g class="text">
                <text x="44" y="52">Pledge</text>
                <text x="172" y="52">Registrar-</text>
                <text x="308" y="52">Domain</text>
                <text x="432" y="52">Key</text>
                <text x="540" y="52">MASA</text>
                <text x="168" y="68">Agent</text>
                <text x="312" y="68">Registrar</text>
                <text x="436" y="68">Infra.</text>
                <text x="516" y="100">Internet</text>
                <text x="92" y="116">discover</text>
                <text x="92" y="132">pledge</text>
                <text x="68" y="148">mDNS</text>
                <text x="112" y="148">query</text>
                <text x="16" y="212">~</text>
                <text x="168" y="212">~</text>
                <text x="312" y="212">~</text>
                <text x="456" y="212">~</text>
                <text x="560" y="212">~</text>
                <text x="16" y="228">(1)</text>
                <text x="64" y="228">Trigger</text>
                <text x="124" y="228">Pledge</text>
                <text x="216" y="228">Voucher-Request</text>
                <text x="16" y="244">~</text>
                <text x="168" y="244">~</text>
                <text x="312" y="244">~</text>
                <text x="456" y="244">~</text>
                <text x="560" y="244">~</text>
                <text x="76" y="276">opt.</text>
                <text x="112" y="276">TLS</text>
                <text x="92" y="292">tPVR</text>
                <text x="96" y="308">PVR</text>
                <text x="16" y="340">~</text>
                <text x="168" y="340">~</text>
                <text x="312" y="340">~</text>
                <text x="456" y="340">~</text>
                <text x="560" y="340">~</text>
                <text x="16" y="356">(2)</text>
                <text x="64" y="356">Trigger</text>
                <text x="124" y="356">Pledge</text>
                <text x="212" y="356">Enroll-Request</text>
                <text x="16" y="372">~</text>
                <text x="168" y="372">~</text>
                <text x="312" y="372">~</text>
                <text x="456" y="372">~</text>
                <text x="560" y="372">~</text>
                <text x="76" y="404">opt.</text>
                <text x="112" y="404">TLS</text>
                <text x="92" y="420">tPER</text>
                <text x="96" y="436">PER</text>
                <text x="16" y="468">~</text>
                <text x="168" y="468">~</text>
                <text x="312" y="468">~</text>
                <text x="456" y="468">~</text>
                <text x="560" y="468">~</text>
                <text x="16" y="484">(3)</text>
                <text x="60" y="484">Supply</text>
                <text x="104" y="484">PVR</text>
                <text x="132" y="484">to</text>
                <text x="184" y="484">Registrar</text>
                <text x="268" y="484">(including</text>
                <text x="332" y="484">MASA</text>
                <text x="404" y="484">interaction)</text>
                <text x="16" y="500">~</text>
                <text x="168" y="500">~</text>
                <text x="312" y="500">~</text>
                <text x="456" y="500">~</text>
                <text x="560" y="500">~</text>
                <text x="236" y="532">mTLS</text>
                <text x="308" y="564">[Registrar-Agent</text>
                <text x="308" y="580">authenticated&amp;authorized?]</text>
                <text x="240" y="612">PVR</text>
                <text x="280" y="644">[accept</text>
                <text x="348" y="644">device?]</text>
                <text x="436" y="676">mTLS</text>
                <text x="440" y="692">RVR</text>
                <text x="456" y="708">~</text>
                <text x="460" y="724">[extract</text>
                <text x="536" y="724">DomainID]</text>
                <text x="456" y="740">[update</text>
                <text x="532" y="740">audit-log]</text>
                <text x="456" y="756">~</text>
                <text x="440" y="772">Voucher</text>
                <text x="244" y="788">Voucher'</text>
                <text x="16" y="820">~</text>
                <text x="168" y="820">~</text>
                <text x="312" y="820">~</text>
                <text x="456" y="820">~</text>
                <text x="560" y="820">~</text>
                <text x="16" y="836">(4)</text>
                <text x="60" y="836">Supply</text>
                <text x="104" y="836">PER</text>
                <text x="132" y="836">to</text>
                <text x="184" y="836">Registrar</text>
                <text x="268" y="836">(including</text>
                <text x="328" y="836">Key</text>
                <text x="404" y="836">Infrastructure</text>
                <text x="516" y="836">interaction)</text>
                <text x="16" y="852">~</text>
                <text x="168" y="852">~</text>
                <text x="312" y="852">~</text>
                <text x="456" y="852">~</text>
                <text x="560" y="852">~</text>
                <text x="236" y="884">mTLS</text>
                <text x="240" y="900">PER</text>
                <text x="384" y="916">[Request]</text>
                <text x="396" y="932">[Certificate]-</text>
                <text x="240" y="948">Enroll-Resp</text>
                <text x="16" y="980">~</text>
                <text x="168" y="980">~</text>
                <text x="312" y="980">~</text>
                <text x="456" y="980">~</text>
                <text x="560" y="980">~</text>
                <text x="16" y="996">(5)</text>
                <text x="60" y="996">Obtain</text>
                <text x="100" y="996">CA</text>
                <text x="164" y="996">Certificates</text>
                <text x="16" y="1012">~</text>
                <text x="168" y="1012">~</text>
                <text x="312" y="1012">~</text>
                <text x="456" y="1012">~</text>
                <text x="560" y="1012">~</text>
                <text x="236" y="1044">mTLS</text>
                <text x="240" y="1060">caCerts</text>
                <text x="16" y="1092">~</text>
                <text x="168" y="1092">~</text>
                <text x="312" y="1092">~</text>
                <text x="456" y="1092">~</text>
                <text x="560" y="1092">~</text>
                <text x="16" y="1108">(6)</text>
                <text x="60" y="1108">Supply</text>
                <text x="120" y="1108">Voucher</text>
                <text x="164" y="1108">to</text>
                <text x="204" y="1108">Pledge</text>
                <text x="16" y="1124">~</text>
                <text x="168" y="1124">~</text>
                <text x="312" y="1124">~</text>
                <text x="456" y="1124">~</text>
                <text x="560" y="1124">~</text>
                <text x="76" y="1156">opt.</text>
                <text x="112" y="1156">TLS</text>
                <text x="100" y="1172">Voucher'</text>
                <text x="96" y="1188">vStatus</text>
                <text x="16" y="1220">~</text>
                <text x="168" y="1220">~</text>
                <text x="312" y="1220">~</text>
                <text x="456" y="1220">~</text>
                <text x="560" y="1220">~</text>
                <text x="16" y="1236">(7)</text>
                <text x="60" y="1236">Supply</text>
                <text x="100" y="1236">CA</text>
                <text x="164" y="1236">Certificates</text>
                <text x="228" y="1236">to</text>
                <text x="268" y="1236">Pledge</text>
                <text x="16" y="1252">~</text>
                <text x="168" y="1252">~</text>
                <text x="312" y="1252">~</text>
                <text x="456" y="1252">~</text>
                <text x="560" y="1252">~</text>
                <text x="76" y="1284">opt.</text>
                <text x="112" y="1284">TLS</text>
                <text x="96" y="1300">caCerts</text>
                <text x="16" y="1332">~</text>
                <text x="168" y="1332">~</text>
                <text x="312" y="1332">~</text>
                <text x="456" y="1332">~</text>
                <text x="560" y="1332">~</text>
                <text x="16" y="1348">(8)</text>
                <text x="60" y="1348">Supply</text>
                <text x="152" y="1348">Enroll-Response</text>
                <text x="228" y="1348">to</text>
                <text x="268" y="1348">Pledge</text>
                <text x="16" y="1364">~</text>
                <text x="168" y="1364">~</text>
                <text x="312" y="1364">~</text>
                <text x="456" y="1364">~</text>
                <text x="560" y="1364">~</text>
                <text x="76" y="1396">opt.</text>
                <text x="112" y="1396">TLS</text>
                <text x="96" y="1412">Enroll-Resp</text>
                <text x="88" y="1428">eStatus</text>
                <text x="16" y="1460">~</text>
                <text x="168" y="1460">~</text>
                <text x="312" y="1460">~</text>
                <text x="456" y="1460">~</text>
                <text x="560" y="1460">~</text>
                <text x="16" y="1476">(9)</text>
                <text x="64" y="1476">Voucher</text>
                <text x="124" y="1476">Status</text>
                <text x="192" y="1476">Telemetry</text>
                <text x="276" y="1476">(including</text>
                <text x="352" y="1476">backend</text>
                <text x="436" y="1476">interaction)</text>
                <text x="16" y="1492">~</text>
                <text x="168" y="1492">~</text>
                <text x="312" y="1492">~</text>
                <text x="456" y="1492">~</text>
                <text x="560" y="1492">~</text>
                <text x="236" y="1524">mTLS</text>
                <text x="240" y="1540">vStatus</text>
                <text x="436" y="1556">mTLS</text>
                <text x="368" y="1572">req</text>
                <text x="412" y="1572">device</text>
                <text x="480" y="1572">audit-log</text>
                <text x="396" y="1588">device</text>
                <text x="464" y="1588">audit-log</text>
                <text x="264" y="1620">[verify</text>
                <text x="340" y="1620">audit-log]</text>
                <text x="312" y="1636">|</text>
                <text x="16" y="1652">~</text>
                <text x="168" y="1652">~</text>
                <text x="312" y="1652">~</text>
                <text x="456" y="1652">~</text>
                <text x="560" y="1652">~</text>
                <text x="20" y="1668">(10)</text>
                <text x="68" y="1668">Enroll</text>
                <text x="124" y="1668">Status</text>
                <text x="192" y="1668">Telemetry</text>
                <text x="16" y="1684">~</text>
                <text x="168" y="1684">~</text>
                <text x="312" y="1684">~</text>
                <text x="456" y="1684">~</text>
                <text x="560" y="1684">~</text>
                <text x="236" y="1716">mTLS</text>
                <text x="240" y="1732">eStatus</text>
                <text x="16" y="1764">~</text>
                <text x="168" y="1764">~</text>
                <text x="312" y="1764">~</text>
                <text x="456" y="1764">~</text>
                <text x="560" y="1764">~</text>
                <text x="20" y="1780">(11)</text>
                <text x="64" y="1780">Query</text>
                <text x="116" y="1780">Pledge</text>
                <text x="172" y="1780">Status</text>
                <text x="16" y="1796">~</text>
                <text x="168" y="1796">~</text>
                <text x="312" y="1796">~</text>
                <text x="456" y="1796">~</text>
                <text x="560" y="1796">~</text>
                <text x="76" y="1828">opt.</text>
                <text x="112" y="1828">TLS</text>
                <text x="96" y="1844">tStatus</text>
                <text x="96" y="1860">pStatus</text>
                <text x="16" y="1892">~</text>
                <text x="168" y="1892">~</text>
                <text x="312" y="1892">~</text>
                <text x="456" y="1892">~</text>
                <text x="560" y="1892">~</text>
              </g>
            </svg>
          </artwork>
          <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 |     discover     |                 |                 |            |
 |      pledge      |                 |                 |            |
 |    mDNS query    |                 |                 |            |
 |<-----------------|                 |                 |            |
 |----------------->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including MASA interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |                 |                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |                 |                 |            |
 |                  |-------PVR------>|                 |            |
 |                  |                 |                 |            |
 |                  |          [accept device?]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |                 ~            |
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit-log]
 |                  |                 |                 ~            |
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher''---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including Key Infrastructure interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |----[Request]--->|            |
 |                  |                 |<--[Certificate]-|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(5) Obtain CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |<----caCerts-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher''---|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----caCerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<-----------(mTLS)----------->|
 |                  |                 |-----req device audit-log---->|
 |                  |                 |<------device audit-log-------|
 |                  |                 |                 |            |
 |                  |        [verify audit-log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
        </artset>
      </figure>
      <t>The following subsections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>
      <ol spacing="normal" type="1"><li>
          <t><xref target="tpvr"/> describes the acquisition exchange for the Pledge Voucher-Request initiated by the Registrar-Agent to the pledge.</t>
        </li>
        <li>
          <t><xref target="tper"/> describes the acquisition exchange for the Pledge Enroll-Request initiated by the Registrar-Agent to the pledge.</t>
        </li>
        <li>
          <t><xref target="pvr"/> describes the issuing exchange for the Voucher initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA using the RVR <xref target="rvr_artifact"/>, as well as the artifact processing by these entities.</t>
        </li>
        <li>
          <t><xref target="per"/> describes the enroll exchange initiated by the Registrar-Agent to the registrar including the interaction of the registrar with the CA using the PER as well as the artifact processing by these entities.</t>
        </li>
        <li>
          <t><xref target="obtain_cacerts"/> describes the retrieval exchange for the optional CA certificate provisioning to the pledge initiated by the Registrar-Agent to the CA.</t>
        </li>
        <li>
          <t><xref target="voucher"/> describes the Voucher exchange initiated by the Registrar-Agent to the pledge and the returned status information.</t>
        </li>
        <li>
          <t><xref target="cacerts"/> describes the CA certificate exchange initiated by the Registrar-Agent to the pledge.</t>
        </li>
        <li>
          <t><xref target="enroll_response"/> describes the Enroll-Response exchange initiated by the Registrar-Agent to the pledge (containing a new pledge EE certificate) and the returned status information.</t>
        </li>
        <li>
          <t><xref target="vstatus"/> describes the Voucher Status telemetry exchange initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA.</t>
        </li>
        <li>
          <t><xref target="estatus"/> describes the Enroll Status telemetry exchange initiated by the Registrar-Agent to the registrar.</t>
        </li>
        <li>
          <t><xref target="query"/> describes the Pledge Status exchange about the general bootstrapping state initiated by the Registrar-Agent to the pledge.</t>
        </li>
      </ol>
      <section anchor="tpvr">
        <name>Trigger Pledge Voucher-Request</name>
        <t>The Registrar-Agent <bcp14>MUST</bcp14> begin the sequence of exchanges by sending the Pledge Voucher-Request Trigger (tPVR).
This assumes that the Registrar-Agent has already discovered the pledge, for instance as described in <xref target="discovery_uc2_ppa"/> based on DNS-SD or similar.</t>
        <t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_1"/> shows the acquisition of the Pledge Voucher-Request (PVR) and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_1">
          <name>PVR acquisition exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 72,192" fill="none" stroke="black"/>
                <path d="M 112,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 80,208" fill="none" stroke="black"/>
                <path d="M 112,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(1)</text>
                  <text x="64" y="132">Trigger</text>
                  <text x="124" y="132">Pledge</text>
                  <text x="216" y="132">Voucher-Request</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="92" y="196">tPVR</text>
                  <text x="96" y="212">PVR</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> trigger the pledge to create a PVR via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/tpvr</tt>.
The request body <bcp14>MUST</bcp14> contain the JSON-based Pledge Voucher-Request Trigger (tPVR) artifact as defined in <xref target="tpvr_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        <t>Upon receiving a valid tPVR, the pledge <bcp14>MUST</bcp14> reply with the PVR artifact as defined in <xref target="pvr_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        <t>Note that the pledge provisionally accepts the registrar EE certificate contained in the tPVR until it receives the voucher (see <xref target="agt_prx"/>).</t>
        <t>If the pledge is unable to create the PVR, it <bcp14>SHOULD</bcp14> respond with an HTTP error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request, e.g., missing field, wrong data types, etc. or if the request is not valid JSON even though the Content-Type request header field was set to <tt>application/json</tt></t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/voucher-jws+json</tt></t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/json</tt></t>
          </li>
        </ul>
        <t>The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="tpvr_artifact">
          <name>Request Artifact: Pledge Voucher-Request Trigger (tPVR)</name>
          <t>The Pledge Voucher-Request Trigger (tPVR) artifact <bcp14>SHALL</bcp14> be an unsigned data object, providing the necessary parameters for generating the Pledge Voucher-Request (PVR) artifact such that the Agent Proximity Assertion can be verified by registrar and MASA:
the registrar EE certificate and an agent-signed data object containing the product-serial-number and a timestamp.
The artifact is unsigned because at the time of receiving the tPVR, the pledge could not verify any signature.</t>
          <t>For the JSON-based format used by this specification, the tPVR artifact <bcp14>SHALL</bcp14> be a UTF-8 encoded JSON document <xref target="RFC8259"/> that conforms with the CDDL <xref target="RFC8610"/> data model defined in <xref target="tpvr_CDDL_def"/>:</t>
          <figure anchor="tpvr_CDDL_def">
            <name>CDDL for Pledge Voucher-Request Trigger (pledgevoucherrequesttrigger)</name>
            <artwork type="cddl" align="left"><![CDATA[
  pledgevoucherrequesttrigger = {
    "agent-provided-proximity-registrar-cert": bytes,
    "agent-signed-data": bytes
  }
]]></artwork>
          </figure>
          <t>The <tt>agent-provided-proximity-registrar-cert</tt> member <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate in X.509 v3 (DER) format.
The <tt>agent-signed-data</tt> member <bcp14>SHALL</bcp14> contain the base64-encoded JWS Agent-Signed Data as defined in <xref target="jws-asd"/>.
<xref target="tpvr_example"/> summarizes the serialization the JSON tPVR artifact:</t>
          <figure anchor="tpvr_example">
            <name>tPVR Representation in JSON</name>
            <artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": BASE64(UTF8(JWS Agent-Signed Data))
}
]]></artwork>
          </figure>
          <section anchor="jws-asd">
            <name>JWS Agent-Signed Data</name>
            <t>To enable alternative formats, the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the leaf <tt>agent-signed-data</tt> as binary.
For the JWS-signed JSON format used by this specification, the <tt>agent-signed-data</tt> leaf <bcp14>SHALL</bcp14> be a UTF-8 encoded JWS structure in "General JWS JSON Serialization Syntax" as defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/> signing the JSON Agent-Signed Data defined in <xref target="prm-asd"/>.
<xref target="asd_representation"/> summarizes this JWS structure for the <tt>agent-signed-data</tt> member of the tPVR artifact:</t>
            <figure anchor="asd_representation">
              <name>JWS Agent-Signed Data in General JWS JSON Serialization Syntax</name>
              <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Agent-Signed Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
            </figure>
            <t>The JSON Agent-Signed Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
            <section anchor="prm-asd">
              <name>JSON Agent-Signed Data</name>
              <t>The JSON Agent-Signed Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="prmasd_CDDL_def"/>:</t>
              <figure anchor="prmasd_CDDL_def">
                <name>CDDL for JSON Agent-Signed Data (prmasd)</name>
                <artwork type="cddl" align="left"><![CDATA[
  prmasd = {
    "created-on": tdate,
    "serial-number": text
  }
]]></artwork>
              </figure>
              <t>The <tt>created-on</tt> member <bcp14>SHALL</bcp14> contain the current date and time at tPVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>.</t>
              <t>The <tt>serial-number</tt> member <bcp14>SHALL</bcp14> contain the product-serial-number of the pledge with which the Registrar-Agent assumes to communicate as string.
The format <bcp14>MUST</bcp14> correspond to the X520SerialNumber field of IDevID certificates.</t>
              <t><xref target="prmasd_payload"/> below shows an example for the JSON Agent-Signed Data:</t>
              <figure anchor="prmasd_payload">
                <name>JSON Agent-Signed Data Example</name>
                <artwork type="json" align="left"><![CDATA[
{
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "vendor-pledge4711"
}
]]></artwork>
              </figure>
            </section>
            <section anchor="jws-protected-header">
              <name>JWS Protected Header</name>
              <t>The JWS Protected Header of the <tt>agent-signed-data</tt> member <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
              <ul spacing="normal">
                <li>
                  <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
                </li>
                <li>
                  <t><tt>kid</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded OCTET STRING value of the SubjectKeyIdentifier of the Registrar-Agent EE certificate as described in <xref target="agent_component"/></t>
                </li>
              </ul>
              <t><xref target="asd_header"/> below shows an example for this JWS Protected Header:</t>
              <figure anchor="asd_header">
                <name>JWS Protected Header Example for</name>
                <artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork>
              </figure>
            </section>
            <section anchor="jws-signature">
              <name>JWS Signature</name>
              <t>The Registrar-Agent <bcp14>MUST</bcp14> sign the <tt>agent-signed-data</tt> member using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
            </section>
          </section>
        </section>
        <section anchor="pvr_artifact">
          <name>Response Artifact: Pledge Voucher-Request (PVR)</name>
          <t>The Pledge Voucher-Request (PVR) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing an extended Voucher-Request artifact based on <xref section="5.2" sectionFormat="of" target="RFC8995"/>.
The BRSKI-PRM related enhancements of the <tt>ietf-voucher-request</tt> YANG module are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the PVR artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>, which <bcp14>MUST</bcp14> contain the JSON PVR Data defined in <xref target="pvr_data"/> in the JWS Payload.
<xref target="pvr_representation"/> summarizes the serialization of the JWS-signed JSON PVR artifact:</t>
          <figure anchor="pvr_representation">
            <name>PVR Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON PVR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <section anchor="pvr_data">
            <name>JSON PVR Data</name>
            <t>The JSON PVR Data <bcp14>MUST</bcp14> contain the following fields of the <tt>ietf-voucher-request</tt> YANG module as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>;
note that this makes optional leaves in the YANG definition mandatory for the PVR artifact:</t>
            <ul spacing="normal">
              <li>
                <t><tt>created-on</tt>: <bcp14>SHALL</bcp14> contain the current date and time at PVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
if the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the <tt>created-on</tt> value from the JSON Agent-Signed Data received with the tPVR artifact and <bcp14>SHOULD</bcp14> advance that value based on its local clock to reflect the PVR creation time</t>
              </li>
              <li>
                <t><tt>nonce</tt>: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number</t>
              </li>
              <li>
                <t><tt>serial-number</tt>: <bcp14>SHALL</bcp14> contain the product-serial-number in the X520SerialNumber field of the pledge IDevID certificate as string as defined in <xref section="2.3.1" sectionFormat="of" target="RFC8995"/></t>
              </li>
              <li>
                <t><tt>assertion</tt>: <bcp14>SHALL</bcp14> contain the assertion type <tt>agent-proximity</tt> to indicate the pledge request (different from BRSKI <xref target="RFC8995"/>)</t>
              </li>
              <li>
                <t><tt>agent-provided-proximity-registrar-cert</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate provided in the tPVR by the Registrar-Agent;
enables the registrar and MASA to verify the Agent Proximity Assertion</t>
              </li>
              <li>
                <t><tt>agent-signed-data</tt>: <bcp14>SHALL</bcp14> contain the same value as the <tt>agent-signed-data</tt> member in the tPVR provided by the Registrar-Agent;
enables the registrar and MASA to verify the Agent Proximity Assertion;
also enables the registrar to log which Registrar-Agent was in contact with the pledge</t>
              </li>
            </ul>
            <t><xref target="pvr_data_example"/> below shows an example for the JSON PVR Data:</t>
            <figure anchor="pvr_data_example">
              <name>JSON PVR Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "ietf-voucher-request:voucher": {
     "created-on": "2021-04-16T00:00:02.000Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "vendor-pledge4711",
     "assertion": "agent-proximity",
     "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
     "agent-signed-data": "base64encodedvalue=="
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-1">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header <bcp14>MUST</bcp14> follow the definitions of <xref section="3.3" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.
If the certificate chain is not included in the <tt>x5c</tt> Header Parameter, it <bcp14>MUST</bcp14> be available at the domain registrar for verification of the pledge IDevID certificate.</t>
          </section>
          <section anchor="jws-signature-1">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the PVR artifact using its IDevID credential following the definitions of <xref section="3.4" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.</t>
          </section>
        </section>
      </section>
      <section anchor="tper">
        <name>Trigger Pledge Enroll-Request</name>
        <t>Once the Registrar-Agent has received the PVR it can trigger the pledge to generate a Pledge Enroll-Request (PER).</t>
        <t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_2"/> shows the acquisition of the PER and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_2">
          <name>PER acquisition exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 72,192" fill="none" stroke="black"/>
                <path d="M 112,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 80,208" fill="none" stroke="black"/>
                <path d="M 112,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(2)</text>
                  <text x="64" y="132">Trigger</text>
                  <text x="124" y="132">Pledge</text>
                  <text x="212" y="132">Enroll-Request</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="92" y="196">tPER</text>
                  <text x="96" y="212">PER</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> trigger the pledge to create the PER via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/tper</tt>.
The request body <bcp14>MUST</bcp14> contain the JSON-based Pledge Enroll-Request Trigger (tPER) artifact as defined in <xref target="tper_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving a valid tPER, the pledge <bcp14>MUST</bcp14> reply with the PER artifact as defined in <xref target="per_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to create the PER, it <bcp14>SHOULD</bcp14> respond with an HTTP error status code to the Registrar-Agent.
The following client error status codes <bcp14>MAY</bcp14> be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt></t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/json</tt></t>
          </li>
        </ul>
        <t>The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="tper_artifact">
          <name>Request Artifact: Pledge Enroll-Request Trigger (tPER)</name>
          <t>The Pledge Enroll-Request Trigger (tPVR) artifact <bcp14>SHALL</bcp14> be an unsigned data object, providing enrollment parameters.
This document specifies only the basic parameter for a generic, device-related LDevID certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing Key Infrastructure.</t>
          <t>The Pledge Enroll-Request Trigger (tPER) artifact <bcp14>MAY</bcp14> be used to provide additional enrollment parameters such as CSR attributes.
How to provide and use such additional data is out of scope for this specification.</t>
          <t>For the JSON-based format used by this specification, the tPER artifact <bcp14>MUST</bcp14> be a UTF-8 encoded JSON document <xref target="RFC8259"/> that conforms with the CDDL <xref target="RFC8610"/> data model defined in <xref target="tper_CDDL_def"/>:</t>
          <figure anchor="tper_CDDL_def">
            <name>CDDL for Pledge Enroll-Request Trigger (pledgeenrollrequesttrigger)</name>
            <artwork type="cddl" align="left"><![CDATA[
pledgeenrollrequesttrigger = {
        "enroll-type": $enroll-type
}

$enroll-type /= "enroll-generic-cert"
]]></artwork>
          </figure>
          <t>The <tt>enroll-type</tt> member allows for specifying which type of certificate is to be enrolled.
As shown in <xref target="tper_CDDL_def"/>, BRSKI-PRM only defines the enumeration value <tt>enroll-generic-cert</tt> for the enrollment of the generic, device-related LDevID certificate.
Other specifications using this artifact may define further enum values, e.g., to bootstrap application-related EE certificates with additional CSR attributes.</t>
        </section>
        <section anchor="per_artifact">
          <name>Response Artifact: Pledge Enroll-Request (PER)</name>
          <t>The Pledge Enroll-Request (PER) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing a PKCS#10 Certificate Signing Request (CSR) <xref target="RFC2986"/>.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID of the pledge, POI is provided.</t>
          <t>For the JWS-signed JSON format used by this specification, the PER artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON CSR Data defined in <xref target="per_data"/> in the JWS Payload.
<xref target="per_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>
          <figure anchor="per_representation">
            <name>PER Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON CSR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON CSR Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="per_data">
            <name>JSON CSR Data</name>
            <t>The JSON CSR Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the data model described by the <tt>csr-grouping</tt> of the <tt>ietf-ztp-types</tt> YANG module defined in <xref section="3.2" sectionFormat="of" target="RFC9646"/> and <bcp14>MUST</bcp14> be encoded using the rules defined in <xref target="RFC7951"/>.
Note that <xref target="RFC9646"/> also allows for inclusion of CSRs in different formats used by CMP and CMC.
For PKCS#10 CSRs as used in BRSKI and BRSKI-PRM, the <tt>p10-csr</tt> case of the <tt>csr-grouping</tt> <bcp14>MUST</bcp14> be used.</t>
            <t><xref target="csr_example"/> below shows an example for the JSON CSR Data:</t>
            <figure anchor="csr_example">
              <name>JSON CSR Data Example</name>
              <artwork align="left"><![CDATA[
{
  "ietf-ztp-types": {
     "p10-csr": "base64encodedvalue=="
   }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-2">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the PER artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the PER artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the <tt>x5c</tt> Header Parameter, it <bcp14>MUST</bcp14> be available at the domain registrar for verification</t>
              </li>
              <li>
                <t><tt>crit</tt>: <bcp14>SHALL</bcp14> indicate the extension Header Parameter <tt>created-on</tt> to ensure that it must be understood and validated by the receiver as defined in <xref section="4.1.11" sectionFormat="of" target="RFC7515"/></t>
              </li>
            </ul>
            <t>In addition, the JWS Protected Header of the PER artifact <bcp14>MUST</bcp14> contain the following extension Header Parameter:</t>
            <ul spacing="normal">
              <li>
                <t><tt>created-on</tt>: <bcp14>SHALL</bcp14> contain the current date and time at PER creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
if the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the <tt>created-on</tt> value from the JSON Agent-Signed Data received with the tPVR artifact and <bcp14>SHOULD</bcp14> advance that value based on its local clock to reflect the PER creation time</t>
              </li>
            </ul>
            <t>The new protected Header Parameter <tt>created-on</tt> is introduced to reflect freshness of the PER.
It allows the registrar to verify the timely correlation between the PER artifact and previous exchanges, i.e., <tt>created-on</tt> of PER &gt;= <tt>created-on</tt> of PVR &gt;= <tt>created-on</tt> of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider ignoring any but the newest PER artifact from the same pledge in case the registrar has at any point in time more than one pending PER from the pledge.</t>
            <t><xref target="per_header"/> below shows an example for this JWS Protected Header:</t>
            <figure anchor="per_header">
              <name>JWS Protected Header Example within PER</name>
              <artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit": ["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-2">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the PER artifact using its IDevID credential.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
            <t>While BRSKI-PRM targets the initial enrollment, re-enrollment can be supported similarly.
In this case, the pledge <bcp14>MAY</bcp14> use its current, potentially application-related EE credential instead of its IDevID credential to sign the PER artifact.
The issuing CA can associate the re-enrollment request with the pledge based on the previously issued and still valid EE certificate.
Note that a pledge that does not have synchronized time needs to advance the last known current date and time based on its local clock over a longer period, which also requires persisting the local clock advancements across reboots.</t>
          </section>
        </section>
      </section>
      <section anchor="pvr">
        <name>Supply PVR to Registrar (including MASA interaction)</name>
        <t>Once the Registrar-Agent has acquired one or more PVR and PER object pairs, it starts the interaction with the domain registrar.
Collecting multiple pairs allows bulk bootstrapping of several pledges using the same session with the registrar.</t>
        <t>The Registrar-Agent <bcp14>MUST</bcp14> establish a TLS session to the registrar with mutual authentication.
In contrast to BRSKI <xref target="RFC8995"/>, the TLS client authentication uses the Registrar-Agent EE certificate instead of the pledge IDevID certificate.
Consequently, the domain registrar can distinguish BRSKI (pledge-initiator-mode) from BRSKI-PRM (pledge-responder-mode).</t>
        <t>The registrar <bcp14>SHOULD</bcp14> verify the TLS client authentication of the Registrar-Agent, in particular if the TLS session is used to obtain the Registrar-Agent EE certificate (see <xref target="registrar_component"/>).
Note that authentication and authorization of the pledge verified during the TLS session based on the signatures inside the PVR artifact.</t>
        <t>As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the Registrar-Agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>
        <t><xref target="exchangesfig_uc2_3"/> shows the voucher-request processing and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_3">
          <name>Voucher issuing exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="576" viewBox="0 0 576 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,448" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,448" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,192" fill="none" stroke="black"/>
                <path d="M 312,240 L 312,272" fill="none" stroke="black"/>
                <path d="M 312,304 L 312,448" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,312" fill="none" stroke="black"/>
                <path d="M 456,432 L 456,448" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,352" fill="none" stroke="black"/>
                <path d="M 560,400 L 560,448" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,256 L 224,256" fill="none" stroke="black"/>
                <path d="M 256,256 L 304,256" fill="none" stroke="black"/>
                <path d="M 320,320 L 416,320" fill="none" stroke="black"/>
                <path d="M 456,320 L 552,320" fill="none" stroke="black"/>
                <path d="M 320,336 L 424,336" fill="none" stroke="black"/>
                <path d="M 456,336 L 552,336" fill="none" stroke="black"/>
                <path d="M 320,416 L 408,416" fill="none" stroke="black"/>
                <path d="M 472,416 L 552,416" fill="none" stroke="black"/>
                <path d="M 176,432 L 208,432" fill="none" stroke="black"/>
                <path d="M 280,432 L 304,432" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="560,336 548,330.4 548,341.6" fill="black" transform="rotate(0,552,336)"/>
                <polygon class="arrowhead" points="560,320 548,314.4 548,325.6" fill="black" transform="rotate(0,552,320)"/>
                <polygon class="arrowhead" points="328,416 316,410.4 316,421.6" fill="black" transform="rotate(180,320,416)"/>
                <polygon class="arrowhead" points="328,320 316,314.4 316,325.6" fill="black" transform="rotate(180,320,320)"/>
                <polygon class="arrowhead" points="312,256 300,250.4 300,261.6" fill="black" transform="rotate(0,304,256)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,432 172,426.4 172,437.6" fill="black" transform="rotate(180,176,432)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(3)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="104" y="132">PVR</text>
                  <text x="132" y="132">to</text>
                  <text x="184" y="132">Registrar</text>
                  <text x="268" y="132">(including</text>
                  <text x="344" y="132">backend</text>
                  <text x="428" y="132">interaction)</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="308" y="212">[Registrar-Agent</text>
                  <text x="308" y="228">authenticated&amp;authorized?]</text>
                  <text x="240" y="260">PVR</text>
                  <text x="280" y="292">[accept</text>
                  <text x="348" y="292">device?]</text>
                  <text x="436" y="324">mTLS</text>
                  <text x="440" y="340">RVR</text>
                  <text x="456" y="356">~</text>
                  <text x="460" y="372">[extract</text>
                  <text x="536" y="372">DomainID]</text>
                  <text x="456" y="388">[update</text>
                  <text x="532" y="388">audit-log]</text>
                  <text x="456" y="404">~</text>
                  <text x="440" y="420">Voucher</text>
                  <text x="244" y="436">Voucher'</text>
                  <text x="16" y="468">~</text>
                  <text x="168" y="468">~</text>
                  <text x="312" y="468">~</text>
                  <text x="456" y="468">~</text>
                  <text x="560" y="468">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |                 |                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |                 |                 |            |
 |                  |-------PVR------>|                 |            |
 |                  |                 |                 |            |
 |                  |          [accept device?]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |                 ~            |
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit-log]
 |                  |                 |                 ~            |
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher''---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>As a first step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> supply the PVR artifact(s) to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/requestvoucher</tt>.
Note that this is the same endpoint as for BRSKI described in <xref section="5.2" sectionFormat="of" target="RFC8995"/>.
The request body <bcp14>MUST</bcp14> contain one previously acquired PVR artifact as defined in <xref target="pvr_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/voucher-jws+json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        <t>Upon receiving a PVR artifact, the registrar accepts or declines the request to join the domain.
For this, it <bcp14>MUST</bcp14> perform pledge authorization as defined in <xref section="5.3" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, the registrar <bcp14>MUST</bcp14> verify in addition that</t>
        <ul spacing="normal">
          <li>
            <t>the <tt>agent-provided-proximity-registrar-cert</tt> field of the PVR contains a registrar EE certificate signed by the same domain owner as the registrar EE certificate used to sign the RVR;
note that this check allows for installations with multiple domain registrars and for registrar EE certificate renewal between exchanges with the Registrar-Agent (see <xref target="arch_nomadic"/>);
in many installations with a single registrar the contained certificate is identical to the signing certificate</t>
          </li>
          <li>
            <t>the <tt>agent-signed-data</tt> field of the PVR is signed with the private key corresponding to the Registrar-Agent EE certificate as known by the registrar (see <xref target="registrar_component"/>);
this is done via the SubjectKeyIdentifier of the certificate in the <tt>kid</tt> Header Parameter of the JWS Protected Header of the <tt>agent-signed-data</tt> field.</t>
          </li>
          <li>
            <t>the product-serial-number inside the <tt>agent-signed-data</tt> is equal to the <tt>serial-number</tt> field of the PVR as well as the X520SerialNumber field of the pledge IDevID certificate, which is contained in the JWS Protected Header of the PVR.</t>
          </li>
          <li>
            <t>the Registrar-Agent EE certificate is still valid;
this is necessary to avoid that a rogue Registrar-Agent generates <tt>agent-signed-data</tt> objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.</t>
          </li>
        </ul>
        <t>If the registrar is unable to process the request or validate the PVR, it <bcp14>MUST</bcp14> respond with an HTTP client error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the registrar detects an error in the format of the request</t>
          </li>
          <li>
            <t>403 Forbidden: if the registrar detected that one or more security related fields are not valid or if the pledge-provided information could not be used with automated allowance</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported</t>
          </li>
        </ul>
        <t>Otherwise, the registrar converts the PVR artifact to a Registrar Voucher-Request (RVR) artifact (see <xref target="rvr_artifact"/>) and starts the backend interaction with the MASA.</t>
        <t>Optionally, the domain registrar <bcp14>MAY</bcp14> respond with an HTTP 202 Accepted response status code to the Registrar-Agent at this point following <xref section="5.6" sectionFormat="of" target="RFC8995"/>, while the rules defined for the pledge also apply to the Registrar-Agent;
in this case, the registrar still continues with the MASA interaction to provide the Voucher artifact to the retry request.</t>
        <t>The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="masa_interaction">
          <name>MASA Interaction</name>
          <t>The domain registrar <bcp14>MUST</bcp14> establish a TLS session with mutual authentication to the MASA of the pledge according to <xref section="5.4" sectionFormat="of" target="RFC8995"/>.
It requests the voucher from the MASA according to <xref section="5.5" sectionFormat="of" target="RFC8995"/> via HTTP-over-TLS POST to the MASA endpoint at <tt>/.well-known/brski/requestvoucher</tt>.
The request body <bcp14>MUST</bcp14> contain the RVR artifact as defined in <xref target="rvr_artifact"/>.
In the request header, the Content-Type field and the Accept field <bcp14>MUST</bcp14> be set to the same media type as the incoming PVR artifact.
For the default format used in this specification, this is <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
          <t>The assumption is that a pledge typically supports a single artifact format and creates the PVR in the supported format;
to ensure that the pledge is able to process the voucher, the registrar requests this format via the HTTP Accept header field when requesting the voucher.
Further, the RVR artifact and the PVR artifact inside should also use the same format to limit the number of required format encoders.
Note that BRSKI-PRM allows for alternative formats such as CMS-signed JSON as used in BRSKI <xref target="RFC8995"/> or COSE-signed CBOR for constrained environments, when defined by other specifications.
Overall, a MASA responsible for BRSKI-PRM capable pledges <bcp14>MUST</bcp14> support the same formats as supported by those pledges.</t>
          <t>Once the MASA receives the RVR artifact, it <bcp14>MUST</bcp14> perform the verification as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
Depending on policy, the MASA <bcp14>MAY</bcp14> choose the type of assertion to perform.
For the Agent Proximity Assertion of BRSKI-PRM (see <xref target="agt_prx"/>), the MASA <bcp14>MUST</bcp14> skip the verification described in <xref section="5.5.5" sectionFormat="of" target="RFC8995"/> and instead <bcp14>MUST</bcp14> verify for the PVR contained in the <tt>prior-signed-voucher-request</tt> field of the RVR that</t>
          <ul spacing="normal">
            <li>
              <t>the <tt>agent-provided-proximity-registrar-cert</tt> field contains an EE certificate that is signed by the same domain owner as the EE certificate/credentials used to sign the RVR;
note that this check allows for installations with multiple domain registrars and for registrar EE certificate renewal while PVRs are collected by the Registrar-Agent</t>
            </li>
            <li>
              <t>the registrar EE certificate in the <tt>agent-provided-proximity-registrar-cert</tt> field and the Registrar-Agent EE certificate in the <tt>agent-sign-cert</tt> field of the RVR are signed by the same domain owner.</t>
            </li>
            <li>
              <t>the <tt>agent-signed-data</tt> field is signed with the credentials corresponding to the Registrar-Agent EE certificate in the <tt>agent-sign-cert</tt> field of the RVR;
this is done via the SubjectKeyIdentifier of the certificate in the <tt>kid</tt> Header Parameter of the JWS Protected Header in the <tt>agent-signed-data</tt> field.</t>
            </li>
            <li>
              <t>the product-serial-number inside the <tt>agent-signed-data</tt> is equal to the <tt>serial-number</tt> field of PVR and the <tt>serial-number</tt> field of the RVR as well as the X520SerialNumber field of the pledge IDevID certificate, which is contained in the JWS Protected Header of the PVR.</t>
            </li>
          </ul>
          <t>If the <tt>agent-sign-cert</tt> field in the RVR is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value instead of failing the verification, e.g., "logged" or "verified".</t>
          <t>If the verification fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP client error status code to the registrar.
The client error status codes are kept the same as defined in <xref section="5.6" sectionFormat="of" target="RFC8995"/>:</t>
          <ul spacing="normal">
            <li>
              <t>403 Forbidden: if the voucher-request is not signed correctly or is stale or if the pledge has another outstanding voucher that cannot be overridden</t>
            </li>
            <li>
              <t>404 Not Found: if the request is for a device that is not known to the MASA</t>
            </li>
            <li>
              <t>406 Not Acceptable: if a voucher of the desired type or that uses the desired algorithms (as indicated by the "Accept" header fields and algorithms used in the signature) cannot be issued as such because the MASA knows the pledge cannot process that type</t>
            </li>
            <li>
              <t>415 Unsupported Media Type: if the request uses an artifact format or Accept header value that is not supported by the MASA</t>
            </li>
          </ul>
          <t>Otherwise, the MASA creates a Voucher artifact as defined in <xref target="voucher_artifact"/> and updates the audit-log as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
The Voucher is then supplied to the registrar within the body of an HTTP 200 OK response according to <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to the media type of the incoming RVR artifact.
For the default format used in this specification, this is <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        </section>
        <section anchor="supply-voucher-to-registrar-agent">
          <name>Supply Voucher to Registrar-Agent</name>
          <t>After receiving the Voucher from the MASA, the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
It then countersigns the Voucher for delivery to the pledge via the Registrar-Agent.</t>
          <t>The registrar <bcp14>MUST</bcp14> reply to the Registrar-Agent with the Registrar-Countersigned Voucher artifact (Voucher') as defined in <xref target="rcv_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to the media type of the incoming PVR artifact.
For the default format used in this specification, this is <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
          <t>If the domain registrar is unable to return the Voucher, it <bcp14>MUST</bcp14> respond with an HTTP server error status code to the Registrar-Agent.
The following server error status codes <bcp14>SHOULD</bcp14> be used:</t>
          <ul spacing="normal">
            <li>
              <t>500 Internal Server Error: if both Registrar-Agent request and MASA response are valid, but the registrar still failed to return the Voucher, e.g., due to missing configuration or a program failure</t>
            </li>
            <li>
              <t>502 Bad Gateway: if the registrar received an invalid response from the MASA</t>
            </li>
            <li>
              <t>503 Service Unavailable: if a simple retry of the Registrar-Agent request might lead to a successful response;
this error response <bcp14>SHOULD</bcp14> include the <tt>Retry-After</tt> response header field with an appropriate value</t>
            </li>
            <li>
              <t>504 Gateway Timeout: if the backend request to the MASA timed out</t>
            </li>
          </ul>
        </section>
        <section anchor="request-artifact-pledge-voucher-request-pvr">
          <name>Request Artifact: Pledge Voucher-Request (PVR)</name>
          <t>Identical to the PVR artifact received from the pledge as defined in <xref target="pvr_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify PVRs.</t>
        </section>
        <section anchor="rvr_artifact">
          <name>Backend Request Artifact: Registrar Voucher-Request (RVR)</name>
          <t>The Registrar Voucher-Request (RVR) artifact <bcp14>SHALL</bcp14> be an extended Voucher-Request artifact based on <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
The BRSKI-PRM related enhancements of the <tt>ietf-voucher-request</tt> YANG module are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the RVR artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>, which <bcp14>MUST</bcp14> contain the JSON RVR Data defined in <xref target="rvr_data"/> in the JWS Payload.
<xref target="rvr_representation"/> summarizes the serialization of the JWS-signed JSON RVR artifact:</t>
          <figure anchor="rvr_representation">
            <name>RVR Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON RVR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <section anchor="rvr_data">
            <name>JSON RVR Data</name>
            <t>The JSON RVR Data <bcp14>MUST</bcp14> contain the following fields of the <tt>ietf-voucher-request</tt> YANG module as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>;
note that this makes optional leaves in the YANG definition mandatory for the RVR artifact:</t>
            <ul spacing="normal">
              <li>
                <t><tt>created-on</tt>: <bcp14>SHALL</bcp14> contain the current date and time at RVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/></t>
              </li>
              <li>
                <t><tt>nonce</tt>: <bcp14>SHALL</bcp14> contain a copy of the <tt>nonce</tt> field from the JSON PVR Data
the registrar provides this information to assure successful verification of Registrar-Agent proximity based on the agent-signed-data</t>
              </li>
              <li>
                <t><tt>serial-number</tt>: <bcp14>SHALL</bcp14> contain the product-serial-number of the pledge;
note the required verification by the registrar defined in <xref target="pvr"/></t>
              </li>
              <li>
                <t><tt>idevid-issuer</tt>: <bcp14>SHALL</bcp14> contain the issuer value from the pledge IDevID certificate obtained from the PVR JWS Protected Header <tt>x5c</tt> field</t>
              </li>
              <li>
                <t><tt>prior-signed-voucher-request</tt>: <bcp14>SHALL</bcp14> contain the PVR artifact as received from the Registrar-Agent, see <xref target="tpvr"/></t>
              </li>
            </ul>
            <t>As BRSKI-PRM uses the Agent Proximity Assertion (see <xref target="agt_prx"/>), the JSON RVR Data <bcp14>MUST</bcp14> also contain the following fields:</t>
            <ul spacing="normal">
              <li>
                <t><tt>assertion</tt>: <bcp14>SHALL</bcp14> contain the value <tt>agent-proximity</tt> to indicate successful verification of the Agent Proximity Assertion (see <xref target="agt_prx"/>) by the registrar</t>
              </li>
              <li>
                <t><tt>agent-sign-cert</tt>: <bcp14>SHALL</bcp14> be a JSON array that contains the base64-encoded Registrar-Agent EE certificate as possessed by the registrar (see <xref target="registrar_component"/>) as the first item;
subsequent items <bcp14>MUST</bcp14> contain the corresponding certificate chain for verification at the MASA;
the field is used for verification of the <tt>agent-signed-data</tt> field of the contained PVR</t>
              </li>
            </ul>
            <t>Note that the <tt>ietf-voucher-request</tt> YANG module defines the leaf <tt>agent-sign-cert</tt> as binary;
this specification refines it as a JSON array structure similar to the <tt>x5c</tt> Header Parameter defined in <xref section="4.1.6" sectionFormat="of" target="RFC7515"/>.</t>
            <t><xref target="rvr_data_example"/> below shows an example for the JSON RVR Data:</t>
            <figure anchor="rvr_data_example">
              <name>JSON RVR Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "ietf-voucher-request:voucher": {
     "created-on": "2022-01-04T02:37:39.235Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "vendor-pledge4711",
     "idevid-issuer": "base64encodedvalue==",
     "prior-signed-voucher-request": "base64encodedvalue==",
     "assertion": "agent-proximity",
     "agent-sign-cert": [
       "base64encodedvalue==",
       "base64encodedvalue==",
       "..."
     ]
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-3">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header <bcp14>MUST</bcp14> follow the definitions of <xref section="3.3" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.
However, the <tt>x5c</tt> Header Parameter <bcp14>MUST</bcp14> also contain the certificate chain for verification at the MASA.</t>
          </section>
          <section anchor="jws-signature-3">
            <name>JWS Signature</name>
            <t>The domain registrar <bcp14>MUST</bcp14> sign the RVR artifact using its EE credentials following the definitions of <xref section="3.4" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.</t>
          </section>
        </section>
        <section anchor="voucher_artifact">
          <name>Backend Response Artifact: Voucher</name>
          <t>The Voucher artifact is defined in <xref section="5.6" sectionFormat="of" target="RFC8995"/> (cf. "voucher response").
The only difference for BRSKI-PRM is that the <tt>assertion</tt> field <bcp14>MAY</bcp14> contain the value <tt>agent-proximity</tt> as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>, when the Agent-Proximity Assertion (see <xref target="agt_prx"/>) is performed by the MASA.</t>
          <t>For the JWS-signed JSON format used by this specification, the Voucher artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
It contains JSON Voucher Data in the JWS Payload, for which an example is given in <xref target="voucher_data_example"/>:</t>
          <figure anchor="voucher_data_example">
            <name>JSON RVR Data Example</name>
            <artwork type="json" align="left"><![CDATA[
{
  "ietf-voucher:voucher": {
    "created-on": "2022-01-04T00:00:02.000Z",
    "nonce": "base64encodedvalue==",
    "assertion": "agent-proximity",
    "pinned-domain-cert": "base64encodedvalue==",
    "serial-number": "vendor-pledge4711"
  }
}
]]></artwork>
          </figure>
        </section>
        <section anchor="rcv_artifact">
          <name>Response Artifact: Registrar-Countersigned Voucher</name>
          <t>The Registrar-Countersigned Voucher (Voucher') artifact <bcp14>SHALL</bcp14> be an extended Voucher artifact based on <xref section="5.6" sectionFormat="of" target="RFC8995"/> using the format defined in <xref target="voucher_artifact"/>.</t>
          <t>For BRSKI-PRM, the domain registrar <bcp14>MUST</bcp14> add an JWS Protected Header and JWS Signature to the MASA-provided Voucher.
<xref target="rcv_representation"/> summarizes the serialization of the JWS-signed JSON Voucher' artifact:</t>
          <figure anchor="rcv_representation">
            <name>Voucher' Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(JSON Voucher Data),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (MASA))),
      "signature": BASE64URL(JWS Signature (MASA))
    },
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (Registrar))),
      "signature": BASE64URL(JWS Signature (Registrar))
    }
  ]
}
]]></artwork>
          </figure>
          <t>In BRSKI <xref target="RFC8995"/>, the registrar proves possession of its credential through the server authentication within the TLS session with the pledge.
While the pledge cannot verify the registrar certificate at the time of TLS session establishment, it can verify the TLS server certificate through the certificate in the <tt>pinned-domain-cert</tt> field upon receiving the Voucher artifact (see <xref section="5.6.2" sectionFormat="of" target="RFC8995"/>).</t>
          <t>In BRSKI-PRM with the Registrar-Agent mediating all communication, this second signature provides verification and POP of the private key for the registrar EE certificate provided in the initial tPVR artifact from the Registrar-Agent (see <xref target="tpvr_artifact"/>).</t>
          <t>Depending on the security policy of the operator, this signature can also be interpreted as explicit authorization of the registrar to install the contained trust anchor (i.e., pinned domain certificate).</t>
          <section anchor="json-voucher-data">
            <name>JSON Voucher Data</name>
            <t>As provided by the MASA inside the JWS Payload.
The domain registrar <bcp14>MUST NOT</bcp14> modify the JWS Payload.</t>
          </section>
          <section anchor="jws-protected-header-registrar">
            <name>JWS Protected Header (Registrar)</name>
            <t>The registrar-added JWS Protected Header (Registrar) <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate used to sign the voucher as well as the certificate chain up to (but not including) the pinned domain certificate (the initial domain trust anchor);
the pinned domain certificate is already contained in the JSON Voucher Data</t>
              </li>
            </ul>
            <t>Note that for many installations with a single registrar credential, the registrar EE certificate is pinned.</t>
          </section>
          <section anchor="jws-signature-registrar">
            <name>JWS Signature (Registrar)</name>
            <t>The signature is created by signing the registrar-added JWS Protected Header (Registrar) and the original JWS Payload produced by the MASA as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
The registrar <bcp14>MUST</bcp14> use its EE credentials to sign.</t>
            <t>Note that the credentials need to be the same as used for server authentication in the TLS session with the Registrar-Agent receiving this artifact (see <xref target="registrar_component"/>).</t>
          </section>
        </section>
      </section>
      <section anchor="per">
        <name>Supply PER to Registrar (including Key Infrastructure interaction)</name>
        <t>After receiving the Voucher artifact, the Registrar-Agent sends the PER to the domain registrar within the same TLS session.</t>
        <t>In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.
The registrar is able to correlate the PVR and PER artifacts based on the signatures and the contained product-serial-number.
Note that this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.</t>
        <t><xref target="exchangesfig_uc2_4"/> depicts exchanges for the PER-request handling and the following subsections describe the corresponding artifacts.
Note that "Request" and "Certificate" do not denote BRSKI-PRM defined artifacts, but are data objects depending on the certificate management protocol used by the domain Key Infrastructure.</t>
        <figure anchor="exchangesfig_uc2_4">
          <name>Enroll exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="288" width="576" viewBox="0 0 576 288" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,256" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,256" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,256" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,256" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,256" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 224,192" fill="none" stroke="black"/>
                <path d="M 256,192 L 304,192" fill="none" stroke="black"/>
                <path d="M 320,208 L 344,208" fill="none" stroke="black"/>
                <path d="M 424,208 L 448,208" fill="none" stroke="black"/>
                <path d="M 320,224 L 336,224" fill="none" stroke="black"/>
                <path d="M 176,240 L 192,240" fill="none" stroke="black"/>
                <path d="M 288,240 L 304,240" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="456,208 444,202.4 444,213.6" fill="black" transform="rotate(0,448,208)"/>
                <polygon class="arrowhead" points="328,224 316,218.4 316,229.6" fill="black" transform="rotate(180,320,224)"/>
                <polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,240 172,234.4 172,245.6" fill="black" transform="rotate(180,176,240)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(4)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="104" y="132">PER</text>
                  <text x="132" y="132">to</text>
                  <text x="184" y="132">Registrar</text>
                  <text x="268" y="132">(including</text>
                  <text x="328" y="132">Key</text>
                  <text x="404" y="132">Infrastructure</text>
                  <text x="516" y="132">interaction)</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">PER</text>
                  <text x="384" y="212">[Request]</text>
                  <text x="396" y="228">[Certificate]-</text>
                  <text x="240" y="244">Enroll-Resp</text>
                  <text x="16" y="276">~</text>
                  <text x="168" y="276">~</text>
                  <text x="312" y="276">~</text>
                  <text x="456" y="276">~</text>
                  <text x="560" y="276">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including Key Infrastructure interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |----[Request]--->|            |
 |                  |                 |<--[Certificate]-|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>As a second step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> supply the PER artifact(s) to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/requestenroll</tt>.
The request body <bcp14>MUST</bcp14> contain one previously acquired PER artifact as defined in <xref target="per_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Note that this is different from the EST <xref target="RFC7030"/> endpoint used in BRSKI, as the PER artifact is signature-wrapped.
Hence, upon receiving a PER artifact, the registrar <bcp14>MUST</bcp14> verify that</t>
        <ul spacing="normal">
          <li>
            <t>the PER was signed with the private key corresponding to the pledge EE certificate, which is contained in the JWS Protected Header of the PER.</t>
          </li>
          <li>
            <t>the pledge identified by its EE certificate is accepted to join the domain after successful validation of the corresponding PVR.</t>
          </li>
        </ul>
        <t>If the registrar is unable to process the request or validate the PER, it <bcp14>MUST</bcp14> respond with an HTTP client error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the registrar detects an error in the format of the request</t>
          </li>
          <li>
            <t>401 Unauthorized: if the signature of the PER cannot be verified</t>
          </li>
          <li>
            <t>404 Not Found: if the PER is for a device that is not known to the registrar</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt></t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the PER uses an artifact format that is not supported by the registrar, e.g., a type other than <tt>application/jose+json</tt></t>
          </li>
        </ul>
        <t>Otherwise, the registrar extracts the PKCS#10 Certificate Signing Request (CSR) inside the PER (see <xref target="per_artifact"/>) and uses the CSR to request a new pledge EE certificate from the domain Key Infrastructure.
The exact interaction and exchanged data objects depends on the certificate management protocol used by the Key Infrastructure, and is out of scope for this document.</t>
        <t>A successful interaction with the Key Infrastructure will result in a pledge EE certificate signed by the domain owner (e.g., LDevID certificate).
The registrar <bcp14>MUST</bcp14> reply to the Registrar-Agent with the Enroll-Response (Enroll-Resp) as defined in <xref target="er_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/pkcs7-mime</tt>.</t>
        <t>If the domain registrar is unable to return the Enroll-Resp, it <bcp14>MUST</bcp14> respond with an HTTP server error status code to the Registrar-Agent.
The following server error status codes <bcp14>SHOULD</bcp14> be used:</t>
        <ul spacing="normal">
          <li>
            <t>500 Internal Server Error: if the Key Infrastructure response is valid, but the registrar still failed to return the Enroll-Resp, e.g., due to missing configuration or a program failure</t>
          </li>
          <li>
            <t>502 Bad Gateway: if the registrar received an invalid response from the Key Infrastructure</t>
          </li>
          <li>
            <t>503 Service Unavailable: if a simple retry of the Registrar-Agent request might lead to a successful response; this error response <bcp14>SHOULD</bcp14> include the Retry-After response header field with an appropriate value</t>
          </li>
          <li>
            <t>504 Gateway Timeout: if the backend request to the Key Infrastructure timed out</t>
          </li>
        </ul>
        <t>Note that while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported similarly with the exception that the current, potentially application-related pledge EE certificate is used instead of the IDevID certificate to sign the PER artifact (see also <xref target="tper"/>).
Hence, there is no verification whether the pledge is accepted to join the domain, as the still valid EE certificate signed by the domain owner identifies the pledge as already accepted component of the domain.</t>
        <section anchor="request-artifact-pledge-enroll-request-per">
          <name>Request Artifact: Pledge Enroll-Request (PER)</name>
          <t>Identical to the PER artifact defined in <xref target="per_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify PERs received from pledges.</t>
        </section>
        <section anchor="er_artifact">
          <name>Response Artifact: Registrar Enroll-Response (Enroll-Resp)</name>
          <t>The Enroll-Response (Enroll-Resp) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the domain owner, containing a pledge EE certificate.</t>
          <t>For this specification, the Enroll-Resp artifact <bcp14>MUST</bcp14> be a certs-only CMC Simple PKI Response (PKCS#7) as defined in <xref section="4.1" sectionFormat="of" target="RFC5272"/> (following EST <xref target="RFC7030"/>).
Note that it only contains the pledge EE certificate, but not the certificate chain.
The chain is provided with the CA certificates.</t>
        </section>
      </section>
      <section anchor="obtain_cacerts">
        <name>Obtain CA Certificates</name>
        <t>The pinned domain certificate in the voucher is only the initial trust anchor for only the domain registrar.
To fully trust the domain and also to verify its own EE certificate, the pledge also needs the corresponding domain CA certificate(s).
A bag of CA certificates signed by the registrar will allow the pledge to verify the authorization to install the received CA certificate(s) through the pinned domain certificate in the voucher.</t>
        <t>Note that this is a deviation from EST <xref target="RFC7030"/> used in BRSKI <xref target="RFC8995"/>.</t>
        <t>The Registrar-Agent obtains this artifact within the same TLS session.
In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.
The CA certificates do not need to be correlated to a specific voucher or Enroll-Response; they only need to be fresh.</t>
        <t><xref target="exchangesfig_uc2_5"/> shows the acquisition of the CA certificate(s) and the following subsections describe the corresponding artifact.</t>
        <figure anchor="exchangesfig_uc2_5">
          <name>CA certificates retrieval exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,208" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,208" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,208" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,208" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,208" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 208,192" fill="none" stroke="black"/>
                <path d="M 272,192 L 304,192" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,192 172,186.4 172,197.6" fill="black" transform="rotate(180,176,192)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(5)</text>
                  <text x="60" y="132">Obtain</text>
                  <text x="100" y="132">CA</text>
                  <text x="164" y="132">Certificates</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">caCerts</text>
                  <text x="16" y="228">~</text>
                  <text x="168" y="228">~</text>
                  <text x="312" y="228">~</text>
                  <text x="456" y="228">~</text>
                  <text x="560" y="228">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(5) Obtain CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |<----caCerts-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>As a third step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> obtain the CA-Certificates artifact from the registrar via HTTP-over-TLS GET to the registrar endpoint at <tt>/.well-known/brski/wrappedcacerts</tt>.
In the request header, the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving a GET request at <tt>/.well-known/brski/wrappedcacerts</tt>, the domain registrar <bcp14>MUST</bcp14> reply with the CA-Certificates artifact as defined in <xref target="cacerts_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <section anchor="request-no-artifact">
          <name>Request (no artifact)</name>
          <t>In this exchange, the request is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the registrar.</t>
        </section>
        <section anchor="cacerts_artifact">
          <name>Response Artifact: CA-Certificates (caCerts)</name>
          <t>The CA-Certificates (caCerts) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the registrar, containing the domain trust anchors and the certificate chain for the pledge domain EE certificate, i.e., the root CA certificate(s) and possibly intermediate certificate(s) as described in <xref section="4.1.3" sectionFormat="of" target="RFC7030"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the caCerts artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON CA Data defined in <xref target="cacerts_data"/> in the JWS Payload.</t>
          <t><xref target="cacerts_representation"/> summarizes the serialization of the JWS-signed JSON caCerts artifact:</t>
          <figure anchor="cacerts_representation">
            <name>Voucher' Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON CA Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON CA Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="cacerts_data">
            <name>JSON CA Data</name>
            <t>The JSON CA Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="cacerts_CDDL_def"/>:</t>
            <figure anchor="cacerts_CDDL_def">
              <name>CDDL for JSON CA Data (cacerts)</name>
              <artwork type="cddl" align="left"><![CDATA[
cacerts = {
        "x5bag": bytes / [2* bytes]
}
]]></artwork>
            </figure>
            <t>The <tt>x5bag</tt> member <bcp14>MUST</bcp14> follow the definition of the <tt>x5bag</tt> COSE Header Parameter in <xref section="2" sectionFormat="of" target="RFC9360"/>.
It is either a single X.509 v3 certificate or an array of at least two X.509 v3 certificates in DER format.
For JSON syntax, the octet-based certificates <bcp14>MUST</bcp14> be base64-encoded.
It <bcp14>SHALL</bcp14> contain one or more domain CA (root or issuing) certificates.</t>
            <t>Note that as per <xref target="RFC8995"/>, the domain registrar acts as EST server, and hence is expected to possess the CA certificates applicable for the domain and can thus deliver them to the pledge (see <xref target="registrar_component"/>).</t>
            <t><xref target="cacerts_data_example"/> below shows an example for the JSON CA Data:</t>
            <figure anchor="cacerts_data_example">
              <name>JSON CA Data Example</name>
              <artwork align="left"><![CDATA[
{
  "x5bag": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-4">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the caCerts artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate used to sign the caCerts artifact as well as the certificate chain up to (but not including) the pinned domain certificate</t>
              </li>
            </ul>
            <t><xref target="cacerts_header"/> below shows an example for this JWS Protected Header:</t>
            <figure anchor="cacerts_header">
              <name>JWS Protected Header Example within PER</name>
              <artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-4">
            <name>JWS Signature</name>
            <t>The registrar <bcp14>MUST</bcp14> sign the caCerts artifact using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
          </section>
        </section>
      </section>
      <section anchor="voucher">
        <name>Supply Voucher to Pledge</name>
        <t>Once the Registrar-Agent has acquired the following three bootstrapping artifacts, it can supply them to the pledge starting with the Voucher':</t>
        <ul spacing="normal">
          <li>
            <t>Voucher': voucher countersigned by the registrar (from MASA via Registrar)</t>
          </li>
          <li>
            <t>Enroll-Resp: pledge EE certificate signed by the domain owner (from Key Infrastructure via registrar)</t>
          </li>
          <li>
            <t>caCerts: domain trust anchors (from Key Infrastructure via Registrar)</t>
          </li>
        </ul>
        <t>Reconnecting to the pledge might require to re-discover the pledge as described in <xref target="discovery_uc2_ppa"/>.
The Registrar-Agent <bcp14>MAY</bcp14> store information from the first connection with the pledge to optimize.</t>
        <t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_6"/> shows the provisioning of the voucher to the pledge and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_6">
          <name>Voucher exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 64,192" fill="none" stroke="black"/>
                <path d="M 136,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 64,208" fill="none" stroke="black"/>
                <path d="M 128,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(6)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="120" y="132">Voucher</text>
                  <text x="164" y="132">to</text>
                  <text x="204" y="132">Pledge</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="100" y="196">Voucher'</text>
                  <text x="96" y="212">vStatus</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher''---|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> supply the voucher to the pledge via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/svr</tt>.
The request body <bcp14>MUST</bcp14> contain the Registrar-Countersigned Voucher (Voucher') artifact previously acquired from the domain registrar as defined in <xref target="rcv_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving the voucher, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>
        <ol spacing="normal" type="1"><li>
            <t>Verify the MASA signature as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/> against the pre-installed manufacturer trust anchor (e.g., IDevID).</t>
          </li>
          <li>
            <t>Provisionally install the initial domain trust anchor contained in the <tt>pinned-domain-cert</tt> field of the voucher.</t>
          </li>
          <li>
            <t>Validate the registrar EE certificate received in the <tt>agent-provided-proximity-registrar-cert</tt> field of the previously received tPVR artifact using the pinned domain certificate;
this terminates the "provisional state" for the object security within the authenticated self-contained objects that in BRSKI-PRM replace the direct TLS connection to the registrar in BRSKI <xref target="RFC8995"/> (see <xref target="agt_prx"/>).</t>
          </li>
          <li>
            <t>Verify registrar signature of the Voucher' artifact similar as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/>, but using the pinned domain certificate instead of the MASA certificate for the verification.</t>
          </li>
        </ol>
        <t>If all steps above complete successfully, the pledge <bcp14>SHALL</bcp14> terminate the "provisional state" for the initial domain trust anchor (i.e., the pinned domain certificate).</t>
        <t>A nonceless voucher <bcp14>MAY</bcp14> be accepted as in <xref target="RFC8995"/> if allowed by the pledge implementation of the manufacturer.</t>
        <t>After voucher validation and verification, the pledge needs to reply with a status telemetry message as defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.
The pledge <bcp14>MUST</bcp14> generate the Voucher Status (vStatus) artifact as defined in <xref target="vstatus_artifact"/> and <bcp14>MUST</bcp14> provide it to the Registrar-Agent in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to validate or verify the voucher, it <bcp14>MUST</bcp14> report the reason in the corresponding field of the Voucher Status.</t>
        <t>If the pledge did not provide voucher status telemetry information after processing the voucher, the Registrar-Agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="query"/>.
It <bcp14>MAY</bcp14> resend the voucher depending on the Pledge status following the same procedure.</t>
        <section anchor="request-artifact-registrar-countersigned-voucher">
          <name>Request Artifact: Registrar-Countersigned Voucher</name>
          <t>Identical to the Registrar-Countersigned Voucher (Voucher') artifact received from the registrar as defined in <xref target="rcv_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify countersigned vouchers.</t>
        </section>
        <section anchor="vstatus_artifact">
          <name>Response Artifact: Voucher Status (vStatus)</name>
          <t>The Voucher Status (vStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry as defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the vStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Voucher Status Data defined in <xref target="vstatus_data"/> in the JWS Payload.
<xref target="vstatus_representation"/> summarizes the serialization of the JWS-signed JSON vStatus artifact:</t>
          <figure anchor="vstatus_representation">
            <name>vStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Voucher Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="vstatus_data">
            <name>JSON Voucher Status Data</name>
            <t>The JSON Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the <tt>voucherstatus-post</tt> CDDL <xref target="RFC8610"/> data model defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>version</tt>: contains a version number for the format and semantics of the other fields;
this specification assumes version <tt>1</tt> just like BRSKI <xref target="RFC8995"/></t>
              </li>
              <li>
                <t><tt>status</tt>: contains the boolean value <tt>true</tt> in case of success and <tt>false</tt> in case of failure</t>
              </li>
              <li>
                <t><tt>reason</tt>: contains a human-readable message;
<bcp14>SHOULD NOT</bcp14> provide information beneficial to an attacker</t>
              </li>
              <li>
                <t><tt>reason-context</tt>: contains a JSON object that provides additional information specific to a failure;
in contrast to <xref section="5.7" sectionFormat="of" target="RFC8995"/>, <bcp14>MUST</bcp14> be provided;
<bcp14>SHOULD NOT</bcp14> provide information beneficial to an attacker</t>
              </li>
            </ul>
            <t>BRSKI-PRM implementations utilize the <tt>reason-context</tt> field to provide a distinguishable token, which enables the registrar to detect status artifacts provided to the wrong endpoint.
For vStatus artifacts, the JSON object in the <tt>reason-context</tt> field <bcp14>MUST</bcp14> contain the member <tt>pvs-details</tt>.</t>
            <t><xref target="vstatus_data_example_success"/> below shows an example for the JSON Voucher Status Data in case of success and <xref target="vstatus_data_example_error"/> in case of failure:</t>
            <figure anchor="vstatus_data_example_success">
              <name>JSON Voucher Status Data Success Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed.",
  "reason-context": {
    "pvs-details": "Current date 5/23/2024"
  }
}
]]></artwork>
            </figure>
            <figure anchor="vstatus_data_example_error">
              <name>JSON Voucher Status Data Failure Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate.",
  "reason-context": {
    "pvs-details": "Current date 1/1/1970 < valid from 1/1/2023"
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-5">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the vStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge IDevID certificate used to sign the vStatus artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the <tt>x5c</tt> Header Parameter, it <bcp14>MUST</bcp14> be available at the domain registrar for verification</t>
              </li>
            </ul>
            <t><xref target="vstatus_header"/> below shows an example for this JWS Protected Header:</t>
            <figure anchor="vstatus_header">
              <name>JWS Protected Header Example within vStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-5">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the vStatus artifact using its IDevID credential.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
          </section>
        </section>
      </section>
      <section anchor="cacerts">
        <name>Supply CA Certificates to Pledge</name>
        <t>Before supplying the pledge EE certificate, the Registrar-Agent supplies the domain CA certificates to the pledge, so the pledge can verify its EE certificate in the next exchange.
As the CA certificate provisioning is crucial from a security perspective, this exchange <bcp14>SHOULD</bcp14> only be done, if supplying the voucher in the previous exchange (<xref target="voucher"/>) has been successfully processed by the pledge as reflected in the vStatus artifact.</t>
        <t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_7"/> shows the provisioning of the CA certificates to the pledge and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_7">
          <name>Certificate provisioning exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,208" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,208" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,208" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,208" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,208" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 64,192" fill="none" stroke="black"/>
                <path d="M 128,192 L 160,192" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(7)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="100" y="132">CA</text>
                  <text x="164" y="132">Certificates</text>
                  <text x="228" y="132">to</text>
                  <text x="268" y="132">Pledge</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="96" y="196">caCerts</text>
                  <text x="16" y="228">~</text>
                  <text x="168" y="228">~</text>
                  <text x="312" y="228">~</text>
                  <text x="456" y="228">~</text>
                  <text x="560" y="228">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----caCerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> provide the bag of CA certificates requested from and signed by the registrar to the pledge by HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/scac</tt>.
The request body <bcp14>MUST</bcp14> contain the caCerts artifact as defined in <xref target="cacerts_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving valid caCerts artifact, the pledge <bcp14>MUST</bcp14> first verify the signature of the registrar using the initial trust anchor (pinned domain certificate).
In the case of success, the pledge <bcp14>MUST</bcp14> install the contained CA certificates as trust anchors as described in <xref section="4.1.3" sectionFormat="of" target="RFC7030"/>.
This includes the verification of all intermediate CA certificates (i.e., not self-signed CA certificates).</t>
        <t>If the pledge is unable to process the caCerts, it <bcp14>SHOULD</bcp14> respond with an HTTP error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request</t>
          </li>
          <li>
            <t>401 Unauthorized: if the signature of the registrar cannot be verified against the installed initial trust anchor (pinned domain certificate)</t>
          </li>
          <li>
            <t>403 Forbidden: if one of the intermediate CA certificates cannot be verified against the available trust anchors (e.g., self-signed CA certificates)</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt></t>
          </li>
        </ul>
        <t>Otherwise, if processing completes successfully, the pledge <bcp14>SHOULD</bcp14> reply with HTTP 200 OK without a response body.
The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="request-artifact-ca-certificates-cacerts">
          <name>Request Artifact: CA-Certificates (caCerts)</name>
          <t>Identical to the CA-Certificates (caCerts) artifact received from the registrar as defined in <xref target="cacerts_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify CA-Certificates artifacts.</t>
        </section>
        <section anchor="response-no-artifact">
          <name>Response (no artifact)</name>
          <t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>
        </section>
      </section>
      <section anchor="enroll_response">
        <name>Supply Enroll-Response to Pledge</name>
        <t>After supplying the CA certificates, the Registrar-Agent supplies the pledge EE certificate to the pledge.</t>
        <t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_8"/> shows the provisioning of the domain-owner signed EE certificate to the pledge and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_8">
          <name>Enroll-Response exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 48,192" fill="none" stroke="black"/>
                <path d="M 144,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 56,208" fill="none" stroke="black"/>
                <path d="M 120,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(8)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="152" y="132">Enroll-Response</text>
                  <text x="228" y="132">to</text>
                  <text x="268" y="132">Pledge</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="96" y="196">Enroll-Resp</text>
                  <text x="88" y="212">eStatus</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> send the domain-owner signed EE certificate to the pledge by HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/ser</tt>.
The request body <bcp14>MUST</bcp14> contain the Enroll-Response (Enroll-Resp) artifact previously acquired from the domain registrar as defined in <xref target="er_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/pkcs7-mime</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received EE certificate using the installed trust anchors.
After Enroll-Resp validation and verification, the pledge needs to reply with a status telemetry message as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
The pledge <bcp14>MUST</bcp14> generate the Enroll Status (eStatus) artifact as defined in <xref target="estatus_artifact"/> and <bcp14>MUST</bcp14> provide it to the Registrar-Agent in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to validate or verify the Enroll-Response, it <bcp14>MUST</bcp14> report the reason in the corresponding field of the Enroll Status.</t>
        <section anchor="request-artifact-enroll-response-enroll-resp">
          <name>Request Artifact: Enroll-Response (Enroll-Resp)</name>
          <t>Identical to the Enroll-Response (Enroll-Resp) artifact received from the registrar as defined in <xref target="er_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify Enroll-Response artifacts.</t>
        </section>
        <section anchor="estatus_artifact">
          <name>Response Artifact: Enroll Status (eStatus)</name>
          <t>The Enroll Status (eStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the eStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Enroll Status Data defined in <xref target="estatus_data"/> in the JWS Payload.
<xref target="estatus_representation"/> summarizes the serialization of the JWS-signed JSON eStatus artifact:</t>
          <figure anchor="estatus_representation">
            <name>eStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Enroll Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Enroll Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="estatus_data">
            <name>JSON Enroll Status Data</name>
            <t>The JSON Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the <tt>enrollstatus-post</tt> CDDL <xref target="RFC8610"/> data model defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
The members are the same as for the JSON Voucher Status Data and follow the same definitions as given in <xref target="vstatus_data"/> (incl. making <tt>reason-context</tt> mandatory).</t>
            <t>BRSKI-PRM implementations again utilize the <tt>reason-context</tt> field to provide a distinguishable token.
For eStatus artifacts, the JSON object in the <tt>reason-context</tt> field <bcp14>MUST</bcp14> contain the member <tt>pes-details</tt>.</t>
            <t><xref target="estatus_data_example_success"/> below shows an example for the JSON Enroll Status Data in case of success and <xref target="estatus_data_example_error"/> in case of failure:</t>
            <figure anchor="estatus_data_example_success">
              <name>JSON Enroll Status Data Success Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Enroll-Response successfully processed.",
  "reason-context": {
    "pes-details": "Success"
  }
}
]]></artwork>
            </figure>
            <figure anchor="estatus_data_example_error">
              <name>JSON Enroll Status Data Failure Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": false,
  "reason": "Enroll-Response could not be verified.",
  "reason-context": {
    "pes-details": "No matching trust anchor"
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-6">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the eStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the eStatus artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the <tt>x5c</tt> Header Parameter, it <bcp14>MUST</bcp14> be available at the domain registrar for verification</t>
              </li>
            </ul>
            <t><xref target="estatus_header"/> below shows an example for this JWS Protected Header:</t>
            <figure anchor="estatus_header">
              <name>JWS Protected Header Example within eStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-6">
            <name>JWS Signature</name>
            <t>If the pledge verified the received EE certificate successfully, it <bcp14>MUST</bcp14> sign the eStatus artifact using its new EE credentials.
In failure case, the pledge <bcp14>MUST</bcp14> sign it using its IDevID credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
          </section>
        </section>
      </section>
      <section anchor="vstatus">
        <name>Voucher Status Telemetry (including MASA interaction)</name>
        <t>Once the Registrar-Agent has collected both status artifacts from one or more pledges, it <bcp14>SHALL</bcp14> provide the status information to the domain registrar for further processing, beginning with the voucher status telemetry.</t>
        <t>In case the TLS session to the registrar is closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.</t>
        <t><xref target="exchangesfig_uc2_9"/> shows the provisioning of the voucher status information from the pledge(s) to the registrar and the following subsections describe the corresponding artifact and MASA interaction.</t>
        <figure anchor="exchangesfig_uc2_9">
          <name>Voucher Status telemetry exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="576" viewBox="0 0 576 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,288" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,288" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,256" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,200" fill="none" stroke="black"/>
                <path d="M 456,256 L 456,288" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,288" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 208,192" fill="none" stroke="black"/>
                <path d="M 272,192 L 304,192" fill="none" stroke="black"/>
                <path d="M 320,208 L 416,208" fill="none" stroke="black"/>
                <path d="M 456,208 L 552,208" fill="none" stroke="black"/>
                <path d="M 320,224 L 352,224" fill="none" stroke="black"/>
                <path d="M 520,224 L 552,224" fill="none" stroke="black"/>
                <path d="M 320,240 L 368,240" fill="none" stroke="black"/>
                <path d="M 504,240 L 552,240" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="560,224 548,218.4 548,229.6" fill="black" transform="rotate(0,552,224)"/>
                <polygon class="arrowhead" points="560,208 548,202.4 548,213.6" fill="black" transform="rotate(0,552,208)"/>
                <polygon class="arrowhead" points="328,240 316,234.4 316,245.6" fill="black" transform="rotate(180,320,240)"/>
                <polygon class="arrowhead" points="328,208 316,202.4 316,213.6" fill="black" transform="rotate(180,320,208)"/>
                <polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(9)</text>
                  <text x="64" y="132">Voucher</text>
                  <text x="124" y="132">Status</text>
                  <text x="192" y="132">Telemetry</text>
                  <text x="276" y="132">(including</text>
                  <text x="352" y="132">backend</text>
                  <text x="436" y="132">interaction)</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">vStatus</text>
                  <text x="436" y="212">mTLS</text>
                  <text x="368" y="228">req</text>
                  <text x="412" y="228">device</text>
                  <text x="480" y="228">audit-log</text>
                  <text x="396" y="244">device</text>
                  <text x="464" y="244">audit-log</text>
                  <text x="264" y="276">[verify</text>
                  <text x="340" y="276">audit-log]</text>
                  <text x="312" y="292">|</text>
                  <text x="16" y="308">~</text>
                  <text x="168" y="308">~</text>
                  <text x="312" y="308">~</text>
                  <text x="456" y="308">~</text>
                  <text x="560" y="308">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<----------((mTLS))---------->|
 |                  |                 |-----req device audit-log---->|
 |                  |                 |<------device audit-log-------|
 |                  |                 |                 |            |
 |                  |        [verify audit-log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>First, the Registrar-Agent <bcp14>SHALL</bcp14> supply the voucher status telemetry to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/voucher_status</tt>.
The request body <bcp14>MUST</bcp14> contain one previously acquired vStatus artifact as defined in <xref target="vstatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving a vStatus artifact, the registrar <bcp14>MUST</bcp14> process it as described in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, the registrar <bcp14>MUST</bcp14> in addition verify the signature of the vStatus and that it belongs to an accepted device of the domain based on the <tt>serial-number</tt> field of the IDevID certificate contained in the JWS Protected Header of the vStatus.</t>
        <t>According to <xref section="5.7" sectionFormat="of" target="RFC8995"/>, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK without a response body in the success case or fail with an HTTP error status code.
The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <t>The registrar <bcp14>SHOULD</bcp14> proceed with the audit-log request to the MASA as in BRSKI described in <xref section="5.8" sectionFormat="of" target="RFC8995"/>.</t>
        <section anchor="request-artifact-voucher-status-vstatus">
          <name>Request Artifact: Voucher Status (vStatus)</name>
          <t>Identical to the Voucher Status (vStatus) artifact received from the pledge as defined in <xref target="vstatus_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify vStatus artifacts.</t>
        </section>
        <section anchor="response-no-artifact-1">
          <name>Response (no artifact)</name>
          <t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>
        </section>
      </section>
      <section anchor="estatus">
        <name>Enroll Status Telemetry</name>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> complete the sequence of exchanges for bootstrapping with providing the enroll status telemetry to the domain registrar.
This status indicates whether the pledge could process the Enroll-Response (pledge EE certificate signed by the domain owner) and holds the corresponding private key.</t>
        <t>In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.</t>
        <t><xref target="exchangesfig_uc2_10"/> shows the provisioning of the enroll status information from the pledge(s) to the registrar and the following subsections describe the corresponding artifact.</t>
        <figure anchor="exchangesfig_uc2_10">
          <name>Enroll Status telemetry exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,208" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,208" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,208" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,208" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,208" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 208,192" fill="none" stroke="black"/>
                <path d="M 272,192 L 304,192" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="20" y="132">(10)</text>
                  <text x="68" y="132">Enroll</text>
                  <text x="124" y="132">Status</text>
                  <text x="192" y="132">Telemetry</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">eStatus</text>
                  <text x="16" y="228">~</text>
                  <text x="168" y="228">~</text>
                  <text x="312" y="228">~</text>
                  <text x="456" y="228">~</text>
                  <text x="560" y="228">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> supply the enroll status telemetry to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/enrollstatus</tt>.
The request body <bcp14>MUST</bcp14> contain one previously acquired eStatus artifact as defined in <xref target="estatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving an eStatus artifact, the registrar <bcp14>MUST</bcp14> process it as described in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, instead of the BRSKI TLS session with the pledge, the registrar <bcp14>MUST</bcp14> verify the signature of the eStatus artifact and that it belongs to an accepted device of the domain based on the <tt>serial-number</tt> field of the EE certificate contained in the JWS Protected Header of the eStatus.
Note that if the Enroll Status indicates success, the eStatus artifact is signed with the new pledge EE credentials;
if it indicates failure, the pledge was unable to process the supplied EE certificate and therefore signed with its IDevID credentials.</t>
        <t>According to <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or <bcp14>MAY</bcp14> fail with an HTTP 404 client error status code.
The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <t>If the eStatus indicates failure, the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain.
In this case, the registrar <bcp14>MUST</bcp14> revoke the pledge EE certificate.
An example case for the registrar revoking the issued certificate is when the pledge was not able to verify the received EE certificate and therefore did not accept it for installation.</t>
        <section anchor="request-artifact-enroll-status-estatus">
          <name>Request Artifact: Enroll Status (eStatus)</name>
          <t>Identical to the Enroll Status (eStatus) artifact received from the pledge as defined in <xref target="estatus_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify eStatus artifacts.</t>
        </section>
        <section anchor="response-no-artifact-2">
          <name>Response (no artifact)</name>
          <t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>
        </section>
      </section>
      <section anchor="query">
        <name>Query Pledge Status</name>
        <t>The following assumes that a Registrar-Agent <bcp14>MAY</bcp14> need to query the overall status of a pledge.
This information can be useful to solve errors, when the pledge was not able to connect to the target domain during bootstrapping.
A pledge <bcp14>MAY</bcp14> omit the dedicated endpoint for the Query Pledge Status operation (see <xref target="pledge_component"/>).</t>
        <t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_11"/> shows the query and response for the overall pledge status and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_11">
          <name>Pledge Status exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 64,192" fill="none" stroke="black"/>
                <path d="M 128,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 64,208" fill="none" stroke="black"/>
                <path d="M 128,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="20" y="132">(11)</text>
                  <text x="64" y="132">Query</text>
                  <text x="116" y="132">Pledge</text>
                  <text x="172" y="132">Status</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="96" y="196">tStatus</text>
                  <text x="96" y="212">pStatus</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> query the pledge via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/qps</tt>.
The request body <bcp14>MUST</bcp14> contain the Status Trigger (tStatus) artifact as defined in <xref target="tstatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge implements the Query Pledge Status endpoint, it <bcp14>MUST</bcp14> first verify the signature of the tStatus artifact using its trust anchors.
If the pledge does not possess any domain trust anchor yet, it <bcp14>MAY</bcp14> skip the signature verification and choose to reply without it.
In the case of success, it <bcp14>MUST</bcp14> reply with the Pledge Status (pStatus) artifact as defined in <xref target="pstatus_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to create the pStatus artifact, the pledge <bcp14>SHOULD</bcp14> respond with an HTTP error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request</t>
          </li>
          <li>
            <t>401 Unauthorized: if the signature of the Registrar-Agent cannot be verified using the installed trust anchors</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt></t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt></t>
          </li>
        </ul>
        <t>The pledge <bcp14>MAY</bcp14> use the response body to signal failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="tstatus_artifact">
          <name>Request Artifact: Status Trigger (tStatus)</name>
          <t>The Status Query (tStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, providing status query parameters.</t>
          <t>For the JWS-signed JSON format used by this specification, the tStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Status Trigger Data defined in <xref target="tstatus_data"/> in the JWS Payload.
<xref target="tstatus_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>
          <figure anchor="tstatus_representation">
            <name>tStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Status Trigger Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Status Trigger Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="tstatus_data">
            <name>JSON Status Trigger Data</name>
            <t>The JSON Status Trigger Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="stat_req_def"/>:</t>
            <figure anchor="stat_req_def">
              <name>CDDL for JSON Status Trigger Data (statustrigger)</name>
              <artwork type="cddl" align="left"><![CDATA[
  statustrigger = {
      "version": uint,
      "serial-number": text,
      "created-on": tdate,
      "status-type": $status-type
  }

  $status-type /= "bootstrap"
  $status-type /= "operation"
]]></artwork>
            </figure>
            <t>The <tt>version</tt> member is included to permit significant changes to the pledge status artifacts in the future.
The format and semantics in this document follow the status telemetry definitions of <xref target="RFC8995"/>.
Hence, the <tt>version</tt> <bcp14>SHALL</bcp14> be set to <tt>1</tt>.
A pledge (or Registrar-Agent) that receives a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>
            <t>The <tt>serial-number</tt> member <bcp14>SHALL</bcp14> contain the product-serial-number corresponding to the X520SerialNumber field of the pledge IDevID certificate;
it can be correlated with the product-serial-number in the signing certificate contained in the JWS Protected Header of the Pledge Status response artifact.</t>
            <t>The <tt>created-on</tt> member <bcp14>SHALL</bcp14> contain the current date and time at tStatus creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
it can be used as reference time for the corresponding Pledge Status response artifact after correlating via the product-serial-number;
note that pledges may not have synchronized time to provide the created-on date and time on their own.</t>
            <t>The <tt>status-type</tt> allows for specifying which status information is to be returned.
As shown in <xref target="stat_req_def"/>, BRSKI-PRM defines two enumeration values:</t>
            <ul spacing="normal">
              <li>
                <t><tt>bootstrap</tt> to query current status information regarding the bootstrapping status (e.g., voucher processing and enrollment of the pledge into a domain)</t>
              </li>
              <li>
                <t><tt>operation</tt> to query current status information regarding the operational status (e.g., utilization of the bootstrapped EE credentials in communication with other peers)</t>
              </li>
            </ul>
            <t>Other specifications using this artifact may define further enumeration values, e.g., to query application-related status.</t>
            <t><xref target="stat_req_data"/> below shows an example for the JSON Status Trigger Data using the status type <tt>bootstrap</tt>:</t>
            <figure anchor="stat_req_data">
              <name>JSON Status Trigger Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "vendor-pledge4711",
  "status-type": "bootstrap"
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-7">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the tStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded Registrar-Agent EE certificate used to sign the tStatus artifact as well as the certificate chain</t>
              </li>
            </ul>
            <t><xref target="tstatus_header"/> below shows an example for this JWS Protected Header:</t>
            <figure anchor="tstatus_header">
              <name>JWS Protected Header Example within tStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-7">
            <name>JWS Signature</name>
            <t>The Registrar-Agent <bcp14>MUST</bcp14> sign the tStatus artifact using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
          </section>
        </section>
        <section anchor="pstatus_artifact">
          <name>Response Artifact: Pledge Status (pStatus)</name>
          <t>The Pledge Status (pStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry information.
The exact content depends on the Status Trigger parameter <tt>status-type</tt>.</t>
          <t>For the JWS-signed JSON format used by this specification, the pStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Pledge Status Data defined in <xref target="pstatus_data"/> in the JWS Payload.
<xref target="pstatus_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>
          <figure anchor="pstatus_representation">
            <name>pStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Pledge Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Pledge Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="pstatus_data">
            <name>JSON Pledge Status Data</name>
            <t>The JSON Pledge Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="stat_res_def"/>, which has the same members as the <tt>voucherstatus-post</tt> CDDL defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/> and the  <tt>enrollstatus-post</tt> CDDL defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.</t>
            <figure anchor="stat_res_def">
              <name>CDDL for JSON Pledge Status Data (pledgestatus)</name>
              <artwork type="cddl" align="left"><![CDATA[
  pledgestatus = {
    "version": uint,
    "status": bool,
    ?"reason" : text,
    "reason-context": { * $$arbitrary-map }
  }
]]></artwork>
            </figure>
            <t>The <tt>version</tt> member follows the definition in <xref target="tstatus_data"/> (same as in JSON Status Query Data).</t>
            <t>The <tt>reason</tt> and <tt>reason-context</tt> members follow the definitions in <xref target="vstatus_data"/>, i.e., in contrast to <xref target="RFC8995"/>, <tt>reason-context</tt> <bcp14>MUST</bcp14> be provided.</t>
            <t>The new pStatus artifact also utilizes the <tt>reason-context</tt> field to provide a distinguishable token.
For pStatus artifacts, the JSON object in the <tt>reason-context</tt> field <bcp14>MUST</bcp14> contain either the</t>
            <ul spacing="normal">
              <li>
                <t><tt>pbs-details</tt> member for status information corresponding to the status-type <tt>bootstrap</tt>, or the</t>
              </li>
              <li>
                <t><tt>pos-details</tt> member for status information corresponding to the status-type <tt>operation</tt> (see <xref target="tstatus_data"/>)</t>
              </li>
            </ul>
            <t>Other documents may add additional <tt>reason-context</tt> members correlating to other <tt>statustrigger</tt> status-types or to include further status information.</t>
            <t>For the <tt>pbs-details</tt> member, the following values with the given semantics are defined, while additional information <bcp14>MAY</bcp14> be provided in the top-level <tt>reason</tt> member:</t>
            <ul spacing="normal">
              <li>
                <t><tt>factory-default</tt>: Pledge has not been bootstrapped.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
              <li>
                <t><tt>voucher-success</tt>: Pledge processed the voucher exchange successfully.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
              <li>
                <t><tt>voucher-error</tt>: Pledge voucher processing terminated with error.
Additional information may be provided in the <tt>reason</tt> or <tt>reason-context</tt> members.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
              <li>
                <t><tt>enroll-success</tt>: Pledge processed the enrollment exchange successfully.
Additional information may be provided in the <tt>reason</tt> or <tt>reason-context</tt> members.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
              </li>
              <li>
                <t><tt>enroll-error</tt>: Pledge enrollment-response processing terminated with error.
Additional information may be provided in the <tt>reason</tt> or <tt>reason-context</tt> members.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
            </ul>
            <t>The <tt>pbs-details</tt> values <bcp14>SHALL</bcp14> be cumulative in the sense that <tt>enroll-success</tt> and <tt>enroll-error</tt> imply <tt>voucher-success</tt>.
<xref target="stat_example_bootstrap"/> below provides an example for bootstrap status information in the JSON Pledge Status Data:</t>
            <figure anchor="stat_example_bootstrap">
              <name>status-bootstrap JSON Pledge Status Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Pledge processed enrollment exchange successfully.",
  "reason-context": {
    "pbs-details": "Pledge processed enrollment exchange successfully."
  }
}
]]></artwork>
            </figure>
            <t>For the <tt>pos-details</tt> member, the following values with the given semantics are defined, while additional information <bcp14>MAY</bcp14> be provided in the top-level <tt>reason</tt> member:</t>
            <ul spacing="normal">
              <li>
                <t><tt>connect-success</tt>: Pledge could successfully establish a connection to another peer.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
              </li>
              <li>
                <t><tt>connect-error</tt>: Pledge connection establishment terminated with error.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
              </li>
            </ul>
            <t><xref target="stat_example_operation"/> below provides an example for operational status information in the JSON Pledge Status Data:</t>
            <figure anchor="stat_example_operation">
              <name>status-operation JSON Pledge Status Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": "connect-error",
  "reason": "TLS certificate could not be verified.",
  "reason-context": {
    "connect-error" : "Connection establishment terminated with error."
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-8">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the pStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the pStatus artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the x5c Header Parameter, it <bcp14>MUST</bcp14> be available at the Registrar-Agent for verification</t>
              </li>
            </ul>
            <t><xref target="pstatus_header"/> below shows an example for this JWS Protected Header:</t>
            <figure anchor="pstatus_header">
              <name>JWS Protected Header Example within pStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-8">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the tStatus artifact using its IDevID or domain-owner signed EE credentials according to its bootstrapping status as defined in <xref target="pstatus_data"/>.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
          </section>
        </section>
      </section>
    </section>
    <section anchor="log_hints">
      <name>Logging Considerations</name>
      <t>The registrar <bcp14>SHOULD</bcp14> log certain events to provide an audit trail for the onboarding of pledges into its domain.
This audit trail may support the root cause analysis in case of device or system failures.
Recommend key events for logging comprise</t>
      <ul spacing="normal">
        <li>
          <t>Communication attempts between the pledge, Registrar-Agent, and registrar.</t>
        </li>
        <li>
          <t>Protocol handshakes and onboarding steps.</t>
        </li>
        <li>
          <t>Voucher requests and responses.</t>
        </li>
        <li>
          <t>Authentication successes or failures.</t>
        </li>
      </ul>
      <t>The logging <bcp14>SHOULD</bcp14> include the identity of the pledge, the identity of the Registrar-Agent that was interacting with the pledge, and relevant artifact fields, in particular telemetry information:</t>
      <ul spacing="normal">
        <li>
          <t>PVR received from Registrar-Agent</t>
        </li>
        <li>
          <t>Acceptance of a pledge into the domain</t>
        </li>
        <li>
          <t>Voucher provided to Registrar-Agent</t>
        </li>
        <li>
          <t>PER received from Registrar-Agent</t>
        </li>
        <li>
          <t>Pledge EE certificate requested</t>
        </li>
        <li>
          <t>Pledge EE certificate received from Domain CA</t>
        </li>
        <li>
          <t>Pledge EE certificate provided to Registrar-Agent</t>
        </li>
        <li>
          <t>CA Certificates provided to Registrar-Agent</t>
        </li>
        <li>
          <t>Voucher Status received from Registrar-Agent</t>
        </li>
        <li>
          <t>Enroll Status received from Registrar-Agent</t>
        </li>
        <li>
          <t>Pledge Status received from Registrar-Agent</t>
        </li>
        <li>
          <t>Pledge EE certificate revoked</t>
        </li>
      </ul>
      <t>Furthermore, it is recommended to</t>
      <ul spacing="normal">
        <li>
          <t>support adjustable logging levels (severity) to cater to different operational needs or failure situations.</t>
        </li>
        <li>
          <t>include meta information to distinguish logs that relate to different BRSKI approaches (e.g., BRSKI, BRSKI-AE, BRSKI-PRM, constraint BRSKI) that are likely supported in the same domain in parallel.</t>
        </li>
        <li>
          <t>include detailed error codes and diagnostics information as defined throughout the document or stemming from other used components or libraries also in the logging information.</t>
        </li>
        <li>
          <t>support synchronized time (e.g., via NTP) to include timestamps in logging to enable sequencing and  correlation of events.</t>
        </li>
        <li>
          <t>utilize standard logging formats (e.g., syslog) to allow for easy integration into log analysis tools and SIEM systems.</t>
        </li>
        <li>
          <t>utilize secure transmission of logs to centralized log servers, particularly in cloud or distributed environments (e.g., in case of syslog, <xref target="RFC9662"/> updates the utilized cipher suites for TLS and DTLS).</t>
        </li>
        <li>
          <t>allow for definition of key operational thresholds (e.g., high latency, failed onboarding attempts) to trigger alerts for proactive issue resolution.</t>
        </li>
        <li>
          <t>avoid inclusion of sensitive information (see also <xref target="priv_cons"/>)</t>
        </li>
      </ul>
      <t>For log analysis the following may be considered:</t>
      <ul spacing="normal">
        <li>
          <t>The registrar knows which Registrar-Agent collected which PVR from the included agent-signed-data object.</t>
        </li>
        <li>
          <t>The registrar always knows the connecting Registrar-Agent from the TLS client authentication using the Registrar-Agent EE certificate and can log it accordingly.</t>
        </li>
        <li>
          <t>The telemetry information from the pledge can be correlated to the voucher through the product-serial-number in the EE certificate contained in the JWS Protected Header of the status artifacts and the product-serial-number contained in the voucher. By this it can also be related to the PER.</t>
        </li>
      </ul>
      <t>With this, it can for instance be analyzed if multiple Registrar-Agents are involved in bootstrapping devices.
In addition, within the domain it can be analyzed, if the onboarding involved different Registrar-Agents or if different registrars have been used.</t>
    </section>
    <section anchor="op_cons">
      <name>Operational Considerations</name>
      <t>As outlined in <xref target="architecture"/> BRSKI-PRM introduces an additional component with the Registrar-Agent in the BRSKI architecture in addition to new modes of interaction to facilitate the communication between the pledge and the registrar. 
This has an influence on the configuration and operation not only of the Registrar-Agent, but also for the registrar and the pledge.</t>
      <t>As outlined in <xref target="system-components"/> there are additional configuration items dues to the introduction of the Registrar-Agent. This may increase operational complexity and potential misconfigurations in deploying and managing this entity.</t>
      <ul spacing="normal">
        <li>
          <t>A Registrar-Agent needs to be provided with a Registrar-Agent EE certificate, the domain registrar EE certificate and the list of pledges. BRSKI-PRM is open regarding the selected provisioning method, which may be automated or by configuration.</t>
        </li>
        <li>
          <t>Pledges may support either BRSKI-PRM only or combined with other modes of operation.</t>
        </li>
        <li>
          <t>Registrars may support either BRSKI-PRM only or combined with other BRSKI modes of operation. The distinction of BRSKI and BRSKI-PRM is done based on the provided endpoints of the registrar. An operator deploying pledges with a mixed set of operation need to ensure that the domain registrar supports all necessary options to ensure bootstrapping of pledges depending of the supported operational mode.</t>
        </li>
        <li>
          <t>In addition, registrars may  support a co-located Registrar-Agent, if nomadic operation of the Registrar-Agent is not required. This facilitates situations in which an operator wants to deploy BRSKI pledges acting as clients and BSKI pledges acting as servers.</t>
        </li>
      </ul>
      <t>With the Registrar-Agent enhancement a new component is introduced in the communication path between the pledge and the registrar. 
This likely increases the latency of the communication between the pledge and the registrar.
The increase in latency due to this additional component may be neglected given that the Registrar-Agent operates with nomadic connectivity as outlined in <xref target="arch_nomadic"/>.</t>
      <t>Besides the above, also consider the existing documents on operational modes for</t>
      <ul spacing="normal">
        <li>
          <t>BRSKI registrars in <xref target="I-D.richardson-anima-registrar-considerations"/></t>
        </li>
        <li>
          <t>BRSKI MASA in <xref target="I-D.richardson-anima-masa-considerations"/></t>
        </li>
      </ul>
    </section>
    <section anchor="iana_con">
      <name>IANA Considerations</name>
      <t>This document requires the following IANA actions.</t>
      <section anchor="brski-well-known-registry">
        <name>BRSKI well-known Registry</name>
        <t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>
        <table anchor="iana_table_uri">
          <name>BRSKI Well-Known URIs Additions</name>
          <thead>
            <tr>
              <th align="left">Path Segment</th>
              <th align="left">Description</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">requestenroll</td>
              <td align="left">Supply PER to registrar</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">wrappedcacerts</td>
              <td align="left">Obtain wrapped CA certificates</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">tpvr</td>
              <td align="left">Trigger Pledge Voucher-Request</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">tper</td>
              <td align="left">Trigger Pledge Enroll-Request</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">svr</td>
              <td align="left">Supply voucher to pledge</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">scac</td>
              <td align="left">Supply CA certificates to pledge</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">ser</td>
              <td align="left">Supply Enroll-Response to pledge</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">qps</td>
              <td align="left">Query pledge status</td>
              <td align="left">[THISRFC]</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="dns-service-names">
        <name>DNS Service Names</name>
        <t>IANA has registered the following service names:</t>
        <t><strong>Service Name:</strong> brski-pledge<br/>
          <strong>Transport Protocol(s):</strong> tcp<br/>
          <strong>Assignee:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br/>
          <strong>Contact:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br/>
          <strong>Description:</strong> The Bootstrapping Remote Secure Key Infrastructure Pledge<br/>
          <strong>Reference:</strong> [THISRFC]</t>
      </section>
    </section>
    <section anchor="priv_cons">
      <name>Privacy Considerations</name>
      <t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>
      <ul spacing="normal">
        <li>
          <t>the introduction of the additional component Registrar-Agent</t>
        </li>
        <li>
          <t>potentially no transport layer security between Registrar-Agent and pledge</t>
        </li>
      </ul>
      <t><xref target="tpvr"/> describes to optionally apply TLS to protect the communication between the Registrar-Agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>
      <t>The credentials used by the Registrar-Agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an EE certificate associated with the commissioning device instead of an EE certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>
      <t>As logging is recommended to better handle failure situations, it is necessary to avoid capturing  sensitive or personal data.
Privacy-preserving measures in logs <bcp14>SHOULD</bcp14> be applied, such as:
* Avoid logging personally identifiable information unless unavoidable.
* Anonymize or pseudonymize data where possible.</t>
      <t>The communication between the pledge and the Registrar-Agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>
      <ul spacing="normal">
        <li>
          <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the Registrar-Agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is not encrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
        </li>
        <li>
          <t>the Timestamp data could reveal the activation time of the device.</t>
        </li>
        <li>
          <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
        </li>
      </ul>
    </section>
    <section anchor="sec_cons">
      <name>Security Considerations</name>
      <t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>
      <ul spacing="normal">
        <li>
          <t>the introduction of the additional component Registrar-Agent</t>
        </li>
        <li>
          <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
        </li>
        <li>
          <t>no transport layer security between Registrar-Agent and pledge</t>
        </li>
      </ul>
      <section anchor="sec_cons-dos">
        <name>Denial of Service (DoS) Attack on Pledge</name>
        <t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.
Because in BRSKI-PRM the pledge responds to requests from real or illicit Registrar-Agents, pledges are more subject to DoS-attacks from Registrar-Agents in BRSKI-PRM than they are from illicit registrars in <xref target="RFC8995"/>, where pledges do initiate the connections.</t>
        <t>A DoS attack with a faked Registrar-Agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limit the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>
        <t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the Registrar-Agent.
In that case the pledge <bcp14>MAY</bcp14> simply resend the PVR previously sent.
Note that in case of re-sending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>
      </section>
      <section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent">
        <name>Misuse of acquired PVR and PER by Registrar-Agent</name>
        <t>A Registrar-Agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the <tt>proximity-registrar-cert</tt> field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the pledge IDevID certificate. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the Registrar-Agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the Registrar-Agent EE certificate data contained in the PVR.</t>
        <t>Mis-binding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref section="11.4" sectionFormat="of" target="RFC8995"/>.</t>
      </section>
      <section anchor="sec_cons_reg-agt">
        <name>Misuse of Registrar-Agent</name>
        <t>Concerns of misuse of a Registrar-Agent with a valid Registrar-Agent EE certificate may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the Registrar-Agent against the domain registrar.
The Registrar-Agent EE certificate may have been acquired by a prior BRSKI run for the Registrar-Agent, if an IDevID is available on Registrar-Agent.
Alternatively, the Registrar-Agent EE certificate may be acquired by a service technician from the domain PKI system in an authenticated way.</t>
        <t>In addition, it is required that the Registrar-Agent EE certificate is valid for the complete bootstrapping phase.
This avoids that a Registrar-Agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the Registrar-Agent EE certificate, due to missing trusted timestamp in the Registrar-Agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".</t>
        <t>Furthermore, the registrar also verifies the Registrar-Agent EE certificate used in the TLS handshake with the Registrar-Agent. 
If both certificates are verified successfully, the Registrar-Agent's signature can be considered as valid.
If the registrar detects a mismatch in the utilized certificates, it may conclude the usage of either an outdated "agent-signed-data" component in the PVR or a man-in-the-middle attack by a potentially unauthorized Registrar-Agent.</t>
      </section>
      <section anchor="sec_cons_mDNS">
        <name>Misuse of DNS-SD with mDNS to obtain list of pledges</name>
        <t>To discover a specific pledge a Registrar-Agent may query the Service Type in combination with the product-serial-number of a specific pledge, e.g., in the Service Instance Name or Service Subtype.
The pledge reacts on this if its product-serial-number is part of the query message.</t>
        <t>If the Registrar-Agent performs DNS-based Service Discovery without a specific product-serial-number, all pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing an LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>
      </section>
      <section anchor="yang-module-security-considerations">
        <name>YANG Module Security Considerations</name>
        <t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref section="11.7" sectionFormat="of" target="RFC8995"/> (Security Considerations) apply.</t>
        <t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>
        <t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the common use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref section="3.7" sectionFormat="of" target="RFC8407"/> (Security Considerations).</t>
      </section>
    </section>
    <section anchor="acknowledgments">
      <name>Acknowledgments</name>
      <t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Charlie Kaufman (Early SECDIR review), Martin BjÃ¶rklund (Early YANGDOCTORS review), Marco Tiloca (Early IOTDIR review), Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, Christian Spindler, and Julian Krieger.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Another special thanks for the detailed Shepherad review and connected discussions to Matthias Kovatsch.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.
Review comments in the context of a formal analysis of BRSKI-PRM have been provided by Marco Calipari.</t>
    </section>
  </middle>
  <back>
    <references anchor="sec-combined-references">
      <name>References</name>
      <references anchor="sec-normative-references">
        <name>Normative References</name>
        <reference anchor="RFC5272">
          <front>
            <title>Certificate Management over CMS (CMC)</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <author fullname="M. Myers" initials="M." surname="Myers"/>
            <date month="June" year="2008"/>
            <abstract>
              <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
              <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
              <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
              <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5272"/>
          <seriesInfo name="DOI" value="10.17487/RFC5272"/>
        </reference>
        <reference anchor="RFC5280">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <author fullname="D. Cooper" initials="D." surname="Cooper"/>
            <author fullname="S. Santesson" initials="S." surname="Santesson"/>
            <author fullname="S. Farrell" initials="S." surname="Farrell"/>
            <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="W. Polk" initials="W." surname="Polk"/>
            <date month="May" year="2008"/>
            <abstract>
              <t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5280"/>
          <seriesInfo name="DOI" value="10.17487/RFC5280"/>
        </reference>
        <reference anchor="RFC6762">
          <front>
            <title>Multicast DNS</title>
            <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
            <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
            <date month="February" year="2013"/>
            <abstract>
              <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
              <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
              <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6762"/>
          <seriesInfo name="DOI" value="10.17487/RFC6762"/>
        </reference>
        <reference anchor="RFC6763">
          <front>
            <title>DNS-Based Service Discovery</title>
            <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
            <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
            <date month="February" year="2013"/>
            <abstract>
              <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6763"/>
          <seriesInfo name="DOI" value="10.17487/RFC6763"/>
        </reference>
        <reference anchor="RFC7030">
          <front>
            <title>Enrollment over Secure Transport</title>
            <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
            <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
            <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
            <date month="October" year="2013"/>
            <abstract>
              <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7030"/>
          <seriesInfo name="DOI" value="10.17487/RFC7030"/>
        </reference>
        <reference anchor="RFC7515">
          <front>
            <title>JSON Web Signature (JWS)</title>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <author fullname="J. Bradley" initials="J." surname="Bradley"/>
            <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
            <date month="May" year="2015"/>
            <abstract>
              <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7515"/>
          <seriesInfo name="DOI" value="10.17487/RFC7515"/>
        </reference>
        <reference anchor="RFC8610">
          <front>
            <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
            <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
            <author fullname="C. Vigano" initials="C." surname="Vigano"/>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <date month="June" year="2019"/>
            <abstract>
              <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8610"/>
          <seriesInfo name="DOI" value="10.17487/RFC8610"/>
        </reference>
        <reference anchor="RFC8615">
          <front>
            <title>Well-Known Uniform Resource Identifiers (URIs)</title>
            <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
            <date month="May" year="2019"/>
            <abstract>
              <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
              <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8615"/>
          <seriesInfo name="DOI" value="10.17487/RFC8615"/>
        </reference>
        <reference anchor="RFC8995">
          <front>
            <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
            <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
            <author fullname="M. Richardson" initials="M." surname="Richardson"/>
            <author fullname="T. Eckert" initials="T." surname="Eckert"/>
            <author fullname="M. Behringer" initials="M." surname="Behringer"/>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <date month="May" year="2021"/>
            <abstract>
              <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8995"/>
          <seriesInfo name="DOI" value="10.17487/RFC8995"/>
        </reference>
        <reference anchor="RFC9360">
          <front>
            <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="February" year="2023"/>
            <abstract>
              <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9360"/>
          <seriesInfo name="DOI" value="10.17487/RFC9360"/>
        </reference>
        <reference anchor="RFC9646">
          <front>
            <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero-Touch Provisioning (SZTP) Bootstrapping Request</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="S. Turner" initials="S." surname="Turner"/>
            <date month="October" year="2024"/>
            <abstract>
              <t>This document extends the input to the "get-bootstrapping-data" RPC defined in RFC 8572 to include an optional certificate signing request (CSR), enabling a bootstrapping device to additionally obtain an identity certificate (e.g., a Local Device Identifier (LDevID) from IEEE 802.1AR) as part of the "onboarding information" response provided in the RPC-reply.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9646"/>
          <seriesInfo name="DOI" value="10.17487/RFC9646"/>
        </reference>
        <reference anchor="I-D.ietf-anima-jws-voucher">
          <front>
            <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
            <author fullname="Thomas Werner" initials="T." surname="Werner">
              <organization>Siemens AG</organization>
            </author>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <date day="29" month="November" year="2024"/>
            <abstract>
              <t>   I-D.ietf-anima-rfc8366bis defines a digital artifact (known as a
   voucher) as a YANG-defined JSON document that is signed using a
   Cryptographic Message Syntax (CMS) structure.  This document
   introduces a variant of the voucher artifact in which CMS is replaced
   by the JSON Object Signing and Encryption (JOSE) mechanism described
   in RFC7515 to support deployments in which JOSE is preferred over
   CMS.  In addition to specifying the format, the "application/voucher-
   jws+json" media type is registered and examples are provided.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-14"/>
        </reference>
        <reference anchor="I-D.ietf-anima-rfc8366bis">
          <front>
            <title>A Voucher Artifact for Bootstrapping Protocols</title>
            <author fullname="Kent Watsen" initials="K." surname="Watsen">
              <organization>Watsen Networks</organization>
            </author>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software</organization>
            </author>
            <author fullname="Max Pritikin" initials="M." surname="Pritikin">
              <organization>Cisco Systems</organization>
            </author>
            <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
              <organization>Futurewei Technologies Inc.</organization>
            </author>
            <author fullname="Qiufang Ma" initials="Q." surname="Ma">
              <organization>Huawei</organization>
            </author>
            <date day="8" month="July" year="2024"/>
            <abstract>
              <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge's manufacturer.  This artifact is known as a "voucher".

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge's
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-12"/>
        </reference>
        <reference anchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8259">
          <front>
            <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
            <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
            <date month="December" year="2017"/>
            <abstract>
              <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
              <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="90"/>
          <seriesInfo name="RFC" value="8259"/>
          <seriesInfo name="DOI" value="10.17487/RFC8259"/>
        </reference>
        <reference anchor="RFC3339">
          <front>
            <title>Date and Time on the Internet: Timestamps</title>
            <author fullname="G. Klyne" initials="G." surname="Klyne"/>
            <author fullname="C. Newman" initials="C." surname="Newman"/>
            <date month="July" year="2002"/>
            <abstract>
              <t>This document defines a date and time format for use in Internet protocols that is a profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3339"/>
          <seriesInfo name="DOI" value="10.17487/RFC3339"/>
        </reference>
        <reference anchor="RFC7951">
          <front>
            <title>JSON Encoding of Data Modeled with YANG</title>
            <author fullname="L. Lhotka" initials="L." surname="Lhotka"/>
            <date month="August" year="2016"/>
            <abstract>
              <t>This document defines encoding rules for representing configuration data, state data, parameters of Remote Procedure Call (RPC) operations or actions, and notifications defined using YANG as JavaScript Object Notation (JSON) text.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7951"/>
          <seriesInfo name="DOI" value="10.17487/RFC7951"/>
        </reference>
      </references>
      <references anchor="sec-informative-references">
        <name>Informative References</name>
        <reference anchor="RFC2986">
          <front>
            <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
            <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
            <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
            <date month="November" year="2000"/>
            <abstract>
              <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2986"/>
          <seriesInfo name="DOI" value="10.17487/RFC2986"/>
        </reference>
        <reference anchor="RFC3629">
          <front>
            <title>UTF-8, a transformation format of ISO 10646</title>
            <author fullname="F. Yergeau" initials="F." surname="Yergeau"/>
            <date month="November" year="2003"/>
            <abstract>
              <t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems. The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo. UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values. This memo obsoletes and replaces RFC 2279.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="63"/>
          <seriesInfo name="RFC" value="3629"/>
          <seriesInfo name="DOI" value="10.17487/RFC3629"/>
        </reference>
        <reference anchor="RFC9525">
          <front>
            <title>Service Identity in TLS</title>
            <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
            <author fullname="R. Salz" initials="R." surname="Salz"/>
            <date month="November" year="2023"/>
            <abstract>
              <t>Many application technologies enable secure communication between two entities by means of Transport Layer Security (TLS) with Internet Public Key Infrastructure using X.509 (PKIX) certificates. This document specifies procedures for representing and verifying the identity of application services in such interactions.</t>
              <t>This document obsoletes RFC 6125.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9525"/>
          <seriesInfo name="DOI" value="10.17487/RFC9525"/>
        </reference>
        <reference anchor="RFC6241">
          <front>
            <title>Network Configuration Protocol (NETCONF)</title>
            <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
            <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
            <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
            <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
            <date month="June" year="2011"/>
            <abstract>
              <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6241"/>
          <seriesInfo name="DOI" value="10.17487/RFC6241"/>
        </reference>
        <reference anchor="RFC7252">
          <front>
            <title>The Constrained Application Protocol (CoAP)</title>
            <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
            <author fullname="K. Hartke" initials="K." surname="Hartke"/>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <date month="June" year="2014"/>
            <abstract>
              <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
              <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7252"/>
          <seriesInfo name="DOI" value="10.17487/RFC7252"/>
        </reference>
        <reference anchor="RFC8040">
          <front>
            <title>RESTCONF Protocol</title>
            <author fullname="A. Bierman" initials="A." surname="Bierman"/>
            <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <date month="January" year="2017"/>
            <abstract>
              <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8040"/>
          <seriesInfo name="DOI" value="10.17487/RFC8040"/>
        </reference>
        <reference anchor="RFC8407">
          <front>
            <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
            <author fullname="A. Bierman" initials="A." surname="Bierman"/>
            <date month="October" year="2018"/>
            <abstract>
              <t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules. Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules. This document obsoletes RFC 6087.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="216"/>
          <seriesInfo name="RFC" value="8407"/>
          <seriesInfo name="DOI" value="10.17487/RFC8407"/>
        </reference>
        <reference anchor="RFC8792">
          <front>
            <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
            <author fullname="A. Farrel" initials="A." surname="Farrel"/>
            <author fullname="Q. Wu" initials="Q." surname="Wu"/>
            <date month="June" year="2020"/>
            <abstract>
              <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8792"/>
          <seriesInfo name="DOI" value="10.17487/RFC8792"/>
        </reference>
        <reference anchor="RFC8990">
          <front>
            <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
            <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
            <date month="May" year="2021"/>
            <abstract>
              <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8990"/>
          <seriesInfo name="DOI" value="10.17487/RFC8990"/>
        </reference>
        <reference anchor="RFC9052">
          <front>
            <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="August" year="2022"/>
            <abstract>
              <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
              <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="96"/>
          <seriesInfo name="RFC" value="9052"/>
          <seriesInfo name="DOI" value="10.17487/RFC9052"/>
        </reference>
        <reference anchor="RFC9110">
          <front>
            <title>HTTP Semantics</title>
            <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
            <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
            <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
            <date month="June" year="2022"/>
            <abstract>
              <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
              <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="97"/>
          <seriesInfo name="RFC" value="9110"/>
          <seriesInfo name="DOI" value="10.17487/RFC9110"/>
        </reference>
        <reference anchor="RFC9238">
          <front>
            <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
            <author fullname="M. Richardson" initials="M." surname="Richardson"/>
            <author fullname="J. Latour" initials="J." surname="Latour"/>
            <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
            <date month="May" year="2022"/>
            <abstract>
              <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
              <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9238"/>
          <seriesInfo name="DOI" value="10.17487/RFC9238"/>
        </reference>
        <reference anchor="RFC9662">
          <front>
            <title>Updates to the Cipher Suites in Secure Syslog</title>
            <author fullname="C. Lonvick" initials="C." surname="Lonvick"/>
            <author fullname="S. Turner" initials="S." surname="Turner"/>
            <author fullname="J. Salowey" initials="J." surname="Salowey"/>
            <date month="October" year="2024"/>
            <abstract>
              <t>RFCs 5425 and 6012 describe using TLS and DTLS to securely transport syslog messages. This document updates the cipher suites required by RFC 5245 (TLS Transport Mapping for Syslog) and RFC 6012 (DTLS Transport Mapping for Syslog). It also updates the protocol recommended by RFC 6012 for secure datagram transport.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9662"/>
          <seriesInfo name="DOI" value="10.17487/RFC9662"/>
        </reference>
        <reference anchor="I-D.ietf-anima-brski-ae">
          <front>
            <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
            <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
              <organization>Siemens AG</organization>
            </author>
            <author fullname="Steffen Fries" initials="S." surname="Fries">
              <organization>Siemens AG</organization>
            </author>
            <author fullname="Hendrik Brockhaus" initials="H." surname="Brockhaus">
              <organization>Siemens AG</organization>
            </author>
            <date day="17" month="September" year="2024"/>
            <abstract>
              <t>   This document defines enhancements to the Bootstrapping Remote Secure
   Key Infrastructure (BRSKI) protocol, known as BRSKI-AE (Alternative
   Enrollment).
   BRSKI-AE extends BRSKI to support certificate enrollment mechanisms
   instead of the originally specified use of EST.  It supports
   certificate enrollment protocols, such as CMP, that use authenticated
   self-contained signed objects for certification messages, allowing
   for flexibility in network device onboarding scenarios.
   The enhancements address use cases where the existing enrollment
   mechanism may not be feasible or optimal, providing a framework for
   integrating suitable alternative enrollment protocols.
   This document also updates the BRSKI reference architecture to
   accommodate these alternative methods, ensuring secure and scalable
   deployment across a range of network environments.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-ae-13"/>
        </reference>
        <reference anchor="I-D.richardson-emu-eap-onboarding">
          <front>
            <title>EAP defaults for devices that need to onboard</title>
            <author fullname="Alan DeKok" initials="A." surname="DeKok">
              <organization>FreeRADIUS</organization>
            </author>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <date day="2" month="April" year="2023"/>
            <abstract>
              <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-richardson-emu-eap-onboarding-03"/>
        </reference>
        <reference anchor="I-D.richardson-anima-masa-considerations">
          <front>
            <title>Operational Considerations for Voucher infrastructure for BRSKI MASA</title>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <author fullname="Wei Pan" initials="W." surname="Pan">
              <organization>Huawei Technologies</organization>
            </author>
            <date day="9" month="May" year="2023"/>
            <abstract>
              <t>   This document describes a number of operational modes that a BRSKI
   Manufacturer Authorized Signing Authority (MASA) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the MASA is
   deployed into.  This document does not change any protocol
   mechanisms.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-richardson-anima-masa-considerations-08"/>
        </reference>
        <reference anchor="I-D.richardson-anima-registrar-considerations">
          <front>
            <title>Operational Considerations for BRSKI Registrar</title>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <author fullname="Wei Pan" initials="W." surname="Pan">
              <organization>Huawei Technologies</organization>
            </author>
            <date day="14" month="February" year="2024"/>
            <abstract>
              <t>   This document describes a number of operational modes that a BRSKI
   Registration Authority (Registrar) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the Registrar is
   deployed into.  This document does not change any protocol
   mechanisms.

   This document includes operational advice about avoiding unwanted
   consequences.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-richardson-anima-registrar-considerations-08"/>
        </reference>
        <reference anchor="I-D.ietf-anima-brski-discovery">
          <front>
            <title>BRSKI discovery and variations</title>
            <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
              <organization>Futurewei USA</organization>
            </author>
            <author fullname="Esko Dijk" initials="E." surname="Dijk">
              <organization>IoTconsultancy.nl</organization>
            </author>
            <date day="21" month="October" year="2024"/>
            <abstract>
              <t>   This document specifies how BRSKI entities, such as registrars,
   proxies, pledges or others that are acting as responders, can be
   discovered and selected by BRSKI entities acting as initiators,
   especially in the face of variations in the protocols that can
   introduce non-interoperability when not equally supported by both
   responder and initiator.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-discovery-05"/>
        </reference>
        <reference anchor="IEEE-802.1AR">
          <front>
            <title>IEEE 802.1AR Secure Device Identifier</title>
            <author>
              <organization>Institute of Electrical and Electronics Engineers</organization>
            </author>
            <date year="2018" month="June"/>
          </front>
          <seriesInfo name="IEEE" value="802.1AR"/>
        </reference>
        <reference anchor="BRSKI-PRM-abstract" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00">
          <front>
            <title>Abstract BRSKI-PRM Protocol Overview</title>
            <author>
              <organization/>
            </author>
            <date year="2022" month="March"/>
          </front>
        </reference>
        <reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
          <front>
            <title>can an on-path attacker drop traffic?</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
          <front>
            <title>Android Developer: Connect devices wirelessly</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
          <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
        </reference>
        <reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
          <front>
            <title>Security with Network Protocols</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
          <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
        </reference>
        <reference anchor="RFC9483">
          <front>
            <title>Lightweight Certificate Management Protocol (CMP) Profile</title>
            <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
            <author fullname="D. von Oheimb" initials="D." surname="von Oheimb"/>
            <author fullname="S. Fries" initials="S." surname="Fries"/>
            <date month="November" year="2023"/>
            <abstract>
              <t>This document aims at simple, interoperable, and automated PKI management operations covering typical use cases of industrial and Internet of Things (IoT) scenarios. This is achieved by profiling the Certificate Management Protocol (CMP), the related Certificate Request Message Format (CRMF), and transfer based on HTTP or Constrained Application Protocol (CoAP) in a succinct but sufficiently detailed and self-contained way. To make secure certificate management for simple scenarios and constrained devices as lightweight as possible, only the most crucial types of operations and options are specified as mandatory. More specialized or complex use cases are supported with optional features.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9483"/>
          <seriesInfo name="DOI" value="10.17487/RFC9483"/>
        </reference>
        <reference anchor="RFC4648">
          <front>
            <title>The Base16, Base32, and Base64 Data Encodings</title>
            <author fullname="S. Josefsson" initials="S." surname="Josefsson"/>
            <date month="October" year="2006"/>
            <abstract>
              <t>This document describes the commonly used base 64, base 32, and base 16 encoding schemes. It also discusses the use of line-feeds in encoded data, use of padding in encoded data, use of non-alphabet characters in encoded data, use of different encoding alphabets, and canonical encodings. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4648"/>
          <seriesInfo name="DOI" value="10.17487/RFC4648"/>
        </reference>
        <reference anchor="RFC8971">
          <front>
            <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
            <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
            <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
            <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
            <author fullname="V. Govindan" initials="V." surname="Govindan"/>
            <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
            <date month="December" year="2020"/>
            <abstract>
              <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8971"/>
          <seriesInfo name="DOI" value="10.17487/RFC8971"/>
        </reference>
        <reference anchor="I-D.irtf-t2trg-taxonomy-manufacturer-anchors">
          <front>
            <title>A Taxonomy of operational security considerations for manufacturer installed keys and Trust Anchors</title>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <date day="2" month="January" year="2025"/>
            <abstract>
              <t>   This document provides a taxonomy of methods used by manufacturers of
   silicon and devices to secure private keys and public trust anchors.
   This deals with two related activities: how trust anchors and private
   keys are installed into devices during manufacturing, and how the
   related manufacturer held private keys are secured against
   disclosure.

   This document does not evaluate the different mechanisms, but rather
   just serves to name them in a consistent manner in order to aid in
   communication.

   RFCEDITOR: please remove this paragraph.  This work is occurring in
   https://github.com/mcr/idevid-security-considerations

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-taxonomy-manufacturer-anchors-05"/>
        </reference>
      </references>
    </references>
    <?line 2800?>

<section anchor="examples">
      <name>Examples</name>
      <t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>
      <section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent">
        <name>Example Pledge Voucher-Request (PVR) - from Pledge to Registrar-Agent</name>
        <t>The following is an example request sent from a Pledge to the Registrar-Agent, in "General JWS JSON Serialization".
The message size of this PVR is: 2973 bytes</t>
        <figure anchor="ExamplePledgeVoucherRequestfigure">
          <name>Example Pledge-Voucher-Request - PVR</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsIm5vbmNlIjoia2hOeUtwTXRoY2NpYTFyWHc0NC92UT09IiwiY3JlYXRlZC1vbi\
I6IjIwMjQtMDYtMjRUMDk6MDE6MjQuNTU2WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbW\
l0eS1yZWdpc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW\
9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQm\
dOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd0\
5qRTRNVEphRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVn\
phVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibE\
psWjJsemRISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNk\
svaTc5b1JrSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1\
dSZmZlV2t5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUU\
dDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQV\
lEVlIwUkJFRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1Wl\
hTQ0huSmxaMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncW\
hrak9QUVFEQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUm\
F1YnBDN01hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaD\
R4SVhrMSIsImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRn\
BZVW0xTVdGcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VV\
hSak1teHVZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSm\
FrbDNUV3BKZEUxRWEzUk5ha3BWVFVSVk5rNUVUVFpPVkVGMVRWUkpNVmRwU1hOSmJrNX\
NZMjFzYUdKRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaX\
dpYzJsbmJtRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYV\
VwVlZFZE5NMWRZYUV4V2JGWldaVzVLTTFKVVRsSlhWRlpEV2xaa2IyTXlNVVZOTW1NNV\
NXbDNhVmxYZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrd3\
lZVEJsY3pWZkxXZHNZVjkwTjFVME1VbFJXRmxJU1RSQlMxVldVRkZmTTFSbGQxUTFiMF\
ZWWVVOdFVIQktaMmRyU0c1d09WTk1aVFZ1YWkxbldGbFRiMk5sT1RoeFFXSnROa0YwZF\
MxRlIxUkxZMDVSSW4xZGZRMEsifX0",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNV\
NU1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RB\
eEthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJN\
Q0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3\
Q1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZ\
RFZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRt\
bGpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpj\
RUVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2\
TXgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcx\
aGMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1C\
YUFGRlFMak56UC9TL2tvdWpRd2pnNUU1ZnZ3Y1liTUJNR0ExVWRKUVFNTUFvR0NDc0dB\
UVVGQndNQ01BNEdBMVVkRHdFQi93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBREJF\
QWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnWENt\
SkxUekVsdkQycG9LNmR4NmwxL3V5bVRuYlFERGZKbGF0dVgyUm9PRT0iXSwidHlwIjoi\
dm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0",
      "signature": "ntAgC7GT7xIDYcHBXoYej8uIUI6WR2Iv-7T1CaR-J6-xS60D\
iWS1-vfc5Uu5INZS1dyWZ4vVH6uaoPceRxNc8g"
    }
  ]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa">
        <name>Example Parboiled Registrar Voucher-Request (RVR) - from Registrar to MASA</name>
        <t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a pledge-voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>
        <t>The following is an example registrar-voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 7533 bytes</t>
        <figure anchor="ExampleRegistrarVoucherRequestfigure">
          <name>Example Registrar-Voucher-Request - RVR</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsImlkZXZpZC1pc3N1ZXIiOiJCQmd3Rm9BVVZBdU0zTS85TCtTaTZORENPRGtUbC\
svQnhocz0iLCJub25jZSI6ImtoTnlLcE10aGNjaWExclh3NDQvdlE9PSIsInByaW9yLX\
NpZ25lZC12b3VjaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbT\
FNV0ZwMlpGZE9iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYV\
VrMlpYbEthR016VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1\
pFaHJhVXhEU25wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFVMUVSWGxOZWxFeFRtcG\
pORTlUU1hOSmJUVjJZbTFPYkVscWIybGhNbWhQWlZWMGQxUllVbTlaTWs1d1dWUkdlVm\
RJWXpCT1F6a3lWVlF3T1VscGQybFpNMHBzV1ZoU2JGcERNWFppYVVrMlNXcEpkMDFxVV\
hSTlJGbDBUV3BTVlUxRWF6Wk5SRVUyVFdwUmRVNVVWVEpYYVVselNXMUdibHBYTlRCTV\
dFSjVZak5hY0ZwSFZtdE1XRUo1WWpOb2NHSlhiREJsVXpGNVdsZGtjR016VW5sWldFbD\
BXVEpXZVdSRFNUWkphekZLVTFWSk1HRnJUa1JSVm14d1dqQkdNMU5WU2tKYU1HeElVVl\
pvV2s1NlNtbFpiSEJPVVZjNVNGRXdUbmhTTVU1T1RrUnNRMUZWTVVSVVZWSldaVVZXTm\
xGV1NrTmFNRFZYVVd0R2RsUlZUbkpOVkZaU1lteGFObGxXWXpGaVIwMTZWRmhvUlZaRl\
JrMVJiV1JQVm10S1Fsa3dNVU5TYXpWM1drVmtWbVZGVWpaUlZUVkRXakExVjFGclJrNV\
VWVXB6VlcxNGFrMHhTa1ZWVmxKQ1dsVmFNMDFJYkU1U1JWWTFWRlZTYW1Rd05YRlNWRk\
pPVmtWd2FGSnVZM2RsYXpGRlVsaHNUbEpIVGpOVWJYQkdUa1V4VlZOdFJrNVNSRkkwVW\
xod1FsVnJTbTVVYkZwRFVWYzVUbEV5YzNoT1ZrWjFWbTV3YUZaNlZuTlplazVPWlVWU1\
ZWRlZlRU5hTURWWFVXdEdhbFJWU2tkVWJrSnJVakZXTkZJd1VrSldNRXB1Vkd4YVExRl\
ZNVTVTUkVKVFpHMUtXRkp1UW1saVJYQnpWMnBLYzJWdFVrbFRiV2hxWVd0S1lWUlZTaz\
VTTUVvMVkxVmtWRlJVVVRWUlYyUkdVakJPUkdOVlpGUlVWRkUxVVZoa1JsTkZSWGRUVl\
VaRFVXMXplRTVyYzNaaFZHTTFZakZLY2xONlZscFpiVlpSV25wb1ZsVXhTVFJNTTFaNl\
RWZFNVVlpYYkdGVFJURXdZakowVkZwSVJreFdlbFp0WW14a2VsRnRVWEpqVmtwTlRqRm\
tVMXB0V214V01uUTFXakpXYVdJd2NHMVRWM2h6WkZoS2FtRlVTVEZrTWpWdllWVTVWMU\
V3WkhGYVdIQkRUbFV4UTAxRlpFSk5WbFpyVTJ4R1VsWXdNVU5WVldSRVVUTk9TRkZXUm\
xaU2Ewb3pWRlZLUTFveVpIbFJiV1JHVW10S1Vsa3dVa2xTUlVaUVVXMWtUMVpyYUZKUF\
JVcENXbXBvUmxGclJrNVJNRWt3VVZoa1ZGRldiRVZXYkVsM1ZXdEtSbEpZWkZGT1JXeH\
JXVEl4VjJKdFJsbFVha0pxWWxWYU5WUkdhRk5pUjAxNlZWaFdhazF0ZUhOWmJHUlhaRm\
RPTlUxWGJHdFJlbFl4VjJ4b1ZGRXdhSFZUYlhoaFRXMTRObHBGYUV0aFIwNXdUVlJDWV\
ZkRk5IZFViV3N4WlcxR1dGWnVVbUZXZWxZMlZFWmtTMDFGZUhST1YzaHJVa1ZHVEZGdF\
pHNWpWMmh5WVdzNVVWVldSa1ZSVjJSUFUxVkdSVkZyV2tKaFZVbzBZa2RTUTJGR2NIaE\
5SVll5VGxWd1RVMXNRbmxXTUU0d1pWWk5NbUZGVWxwV2VrWTFVVEE0ZGxWdFJqRlpia0\
pFVGpBeGFGTlZVbTVUVjJoQ1ZFWk9TMWx0WkUxaWJXUnZXVzFLUWxwNlFtdFpNV1JIVm\
xaYWRrd3laRWhVYWtGMllXNWtObE5zYjNkVk1uZDVZVVJTTkZOV2FISk5VMGx6U1cxR2\
JscFhOVEJNV0U1d1dqSTFiRnBETVd0WldGSm9TV3B2YVZwWWJFdGtNV3haWWtoT2FVMX\
JXbkpUVjNCMllWWndXV0pGZEdwU2JrSmFWbGN3ZUZSV1pFZGpSRXBoVW0xU1VGbHFSbm\
RYVms1WlZXMXdhVlpzYnpCWGExcHJWakpXZEZWclVrNVhSMUp4V1d4U1FrMXNaRmRhUj\
NScFVqQndNVlpXYUZOaGF6RjBaVWhXV21KVVJsaFpWRUkwVjBaV2RHRkhkRk5OUmxwM1\
ZrUkpNV1Z0UmxkaE0zQlVZbGhvWVZZd1drdGpNV1J5VkZob2EySlZjSGRWTVZKaFUyMU\
djbUpFVGxWV00wSkxXa1ZWZUZKWFJYcFZhelZvWVROQ1YxWkdWbE5XYXpWeVRsVldWVl\
pHY0ZCV2ExWkhUVlpTVjFWcmNFNVdiVkozVlRGb1QxTnRTbkpPV0U1YVRXcEdlbGxWWk\
V0U1JURlpWbTEwVjJWclduZFdNbmh2VTIxR1ZrOVlRbFJYUjFKUFZtdFdjMDVzVW5KVm\
JGcE9ZWHBWTWxkdWNGZFRiVXB4VWxSV1NtRllaSEJaZWtwelltMUtkRkpxUW10WFJYQn\
pXVE5zU2s1c1kzcGpNbXhxVTBWd01scEZaRmRoYlZKSVZtMTBTbUZ0T1hCWGJHaHpVek\
pPZEZKc2FGWldNbmhSV1ZaV2QxWnNXa1phUlRWT1RWZFNXbGxWVmpSV01rcEhWMnhrWV\
ZaNlZreFVWRVpMVmxaU2MxTnNhRmRTYkhCRlZqSjRZV0V5U1hsVVdHeE9WbFphVDFSWE\
1VNU9WazVZWWtST2FGWnRlRmxhVldNeFUyMUdkRTlZUWxaaVJuQlBXbFpWTVZaV1pGaG\
lSekZXVlRCc2VsTlhOVTlqUm05NVRsZG9hMU5HV2pWWGJFNUtUbXRzY21RemJGcFdSVX\
B6V1ROd1YxcHJlRmhhU0U1YVZtcHJkMVJxUmxaTlJURldZa1pLV0ZKdGVFcFZNVkpUVV\
d4TmVGWnNaRlpTYTFwdFZGUkdVMkpIVVhoVlZFWnBUVVphVjFkV1ZrOWtSbFpKVVd0MF\
lVMXRVbmxWTUdNeFpEQTVWMVJyTVdGV1Jsb3hXVmRyZUdKc1pFZGlSbEpwVFdzMWMxUX\
hVbTlsUmtaWVUyNVNUMkV3V1hkYVJrMTRVbXhKZUZWcmVGcE5SRlpUVTFjMGVGcEhXbE\
pOUlhOcFpsZ3dJaXdpYzJsbmJtRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWl\
hsS05FNVhUV2xQYkhOcFZGVnNTbEZwZEZWUk1FNUNXVlZPYmxGWVpFcFJhMFp1VTFWa1\
FsZEhOVmRoYms1V1RsVXhRbUl3WkVSUk0wWklWVEF3TUU5VlNrSlVWVTVPVWtSQ05GRX\
pjRUpUYTBwdVZHeGFRMUZXYkZWUlYzUkhWV3N4VTFaWVpFWmtNV3hGVm14R1VsTXdVa0\
psUlhSb1ZucFdkVlV5TVhOa1ZtOTNWRzVhYW1KclJqUlNibkJDVm10S2JsUnNXa05SVl\
RGT1VrZDBkMk5IU25SYVJYUm9WbnBXZFZaclpGZGxiVkpHVkd0S1RsRXdSbGxTUmxKS1\
pVVXhSVmRZWkU5U1JVVjRWR3RTV21WRk5VZGlNV3hGWlcxek1WUXhVbkpsUlRGeFZGaG\
9UbUZyTUhoVU1WSldUbFprY1ZGc1RrNVZXRTR6VVRGR1dsSkdXbEpWVldSR1pEQndRMV\
pXVWtaV2F6RkRWRlZrUWsxV1ZrWlJNbVF6VkZaT2RHSklWbUZOU0VKM1dXMHhhMUpIU1\
hwVGJtUk9WV3N4TTFKV1JscFNSbHBTVlZWYVJtUXlPVE5VVmxKS1pXczFSVlpVU2s5bG\
JXTXhWRlpLYW1Rd1dsSlhWVkpYVlZaR1JWSkZSVEZUTWtaWVRsYzFWR0pYZURGWGFrSl\
RZa2RTZEdKSGNHRldSVXBoVkZWS1RsSXdTalZqVldSVVZGUlJOVkZYWkVaU01FNUVZMV\
ZrVkZSVVVUVlJXR1JHVTBWRmQxTlZSa05SZW1NMVlrZHNhRlZ0VGtOaGJIQnFVbFZXV1\
dSNlpIbFdWMVpvWkc1U1NGTnJSakZUUkZKM1lYcFNTazVFU2pKWlZVcE9ZekZWZUUxWG\
JFMVNSVTVFVkVkMFYyRklVbFpXYWtsNFlsaGFhRk13VGpKVVdHZDVWMU4wVkZSWFpGSl\
BSMXB0WkRCM2VVMHpiM3BXUld4WFVXeGtjVnBHVWtObGF6RkVZekJrUkZFelRraFJWa1\
pXVW10S00xSlhaRU5SYW1oWVUwWmplR0ZIVFhsU1dGSnJVakZhTmxwRlRURmxiVVpZVm\
01U1lWWjZWalpVUm1STFRVVjRkRTVYZUd0U1J6Z3hWR3RTVW1Wck1VTlBSV1JDVFZaV2\
ExTllaRkpYVlRGRFdWVkdSMUpzUmsxaGF6VTJWVU01VkV3eWRIWmtWM0JTWkRKd2JrNV\
ZWVEZhYmxveldURnNhVlJWU2s1U01FVjRWbGRTUzFWV1JrNVVWVVoyVWpCT1JHTXdaRU\
pWVmxaSFVXNWtUbEV3TVVKT1JXUkNUVlpXYTFKSVpFWlJhVGt6VlZWV1FtUXdiRWxhTU\
ZKQ1V6QktibG96Um05aE1uQlFWVVpHVWxKRlJtNVVhMmhDVWtWS1JsRlhiRU5rVkU0el\
ZXdEtUV013Y0U1VlJGWjZWRlJCTTAxRlozSldWVnA1WlZVMVZrNXRaRXhsYTNoUVZXMU\
9SMlZXU2xOVU1uaDRZMVZvY0Zvd2JHNVhSVTUwVTJ0NFZXVnJWbk5rYTFGNVkwYzVURT\
V0VWpST2JYZDRURE5XTldKV1VuVlpiRVpGVWtkYVMySkhSakJrVm1kNVZXMDVVRkpVTU\
dsWVUzZHBaRWhzZDBscWIybGtiVGt4V1RKb2JHTnBNWEZrTTAxeVlXNU9kbUpwU1hOSm\
JVWnpXbmxKTmtsclZsUk5hbFV5U1c0d0lpd2ljMmxuYm1GMGRYSmxJam9pYm5SQlowTT\
NSMVEzZUVsRVdXTklRbGh2V1dWcU9IVkpWVWsyVjFJeVNYWXROMVF4UTJGU0xVbzJMWG\
hUTmpCRWFWZFRNUzEyWm1NMVZYVTFTVTVhVXpGa2VWZGFOSFpXU0RaMVlXOVFZMlZTZU\
U1ak9HY2lmVjE5IiwiY3JlYXRlZC1vbiI6IjIwMjQtMDYtMjRUMDk6MDI6MTUuNTczWi\
IsImFnZW50LXNpZ24tY2VydCI6WyJNSUlCOWpDQ0FaMmdBd0lCQWdJRVl4WHM3VEFLQm\
dncWhrak9QUVFEQWpBK01STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRF\
ZRUUhEQVJUYVhSbE1SZ3dGZ1lEVlFRRERBOVVaWE4wVUhWemFFMXZaR1ZzUTBFd0hoY0\
5Nakl3T1RBMU1USXpORFV6V2hjTk1qVXdPVEExTVRJek5EVXpXakJnTVFzd0NRWURWUV\
FHRXdKQlVURVNNQkFHQTFVRUNnd0pUWGxEYjIxd1lXNTVNUlV3RXdZRFZRUUxEQXhOZV\
ZOMVluTnBaR2xoY25reEpqQWtCZ05WQkFNTUhVMTVVMmwwWlZCMWMyaE5iMlJsYkZKbF\
oybHpkSEpoY2tGblpXNTBNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQU\
V4aHZuYWtDSmVpZ3pqWkFVYU5adVAwMWUrUWxVY1E5UjJMSWs2UkI2dmtjdFdMS3BaWC\
85TGthNEdxckFWWmhhM3ZKcmhGc0l4OEdUQkhqWnZLMVd1Nk5uTUdVd0RnWURWUjBQQV\
FIL0JBUURBZ09JTUI4R0ExVWRJd1FZTUJhQUZHK2hQVzUxN1ovb3NSQ0ZUc2NlUDY4bj\
kzc2pNQjBHQTFVZERnUVdCQlJNdHp0akVwVlJUT3ZBVGRCamtGNWFHeVlQZURBVEJnTl\
ZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQmJoRG\
pwbDJ2cWNONnBSVjRuZVU0dFFsWWFOTit4ZjNnSnUrMHBKblNBL1FJZ0ljcXpsZmhYaU\
Qxc0g3VTVQdUtwVVpzSWpkRjRSenhzQTZxSnRFTEQyUHM9Il19fQ",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQm96Q0NBVXFnQXdJQkFnSUdBVzBlTHVJ\
Rk1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERU\
QUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweE9UQTVN\
VEV3TWpNM016SmFGdzB5T1RBNU1URXdNak0zTXpKYU1GUXhFekFSQmdOVkJBb01DazE1\
UW5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhMakFzQmdOVkJBTU1KVkpsWjJs\
emRISmhjaUJXYjNWamFHVnlJRkpsY1hWbGMzUWdVMmxuYm1sdVp5QkxaWGt3V1RBVEJn\
Y3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVQ2eFZ2QXZxVHoxWlVpdU5XaFhwUXNr\
YVB5N0FISFFMd1hpSjBpRUx0NnVOUGFuQU4wUW5XTVlPLzBDREVqSWtCUW9idzhZS3Fq\
dHhKSFZTR1RqOUtPb3ljd0pUQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RIREFPQmdO\
VkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdZcjJMZnFvYUNL\
REY0UkFjTW1KaStOQ1pxZFNpdVZ1Z0lTQTdPaEtScTNZQ0lEeG5QTU1ucFhBTVRyUEp1\
UFd5Y2VFUjExUHhIT24rMENwU0hpMnFncFdYIl0sInR5cCI6InZvdWNoZXItandzK2pz\
b24iLCJhbGciOiJFUzI1NiJ9",
      "signature": "_mcsO5vo0g2rFmBvTb-UsOWkEmhYNfQ5XmbuKHKH0ZLjea-7\
911BilAMdFORmT4vCzWKBSH6HSqtpIRcSSxx7Q"
    }
  ]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-voucher-from-masa-to-pledge-via-registrar-and-registrar-agent">
        <name>Example Voucher - from MASA to Pledge, via Registrar and Registrar-Agent</name>
        <t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>
        <figure anchor="ExampleVoucherResponsefigure">
          <name>Example Voucher-Response from MASA</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-voucher-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent">
        <name>Example Voucher, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-Agent)</name>
        <t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 2994 bytes</t>
        <figure anchor="ExampleVoucherResponseWithRegSignfigure">
          <name>Example Voucher-Response from MASA, with additional Registrar signature</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2\
VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIj\
oia2hOeUtwTXRoY2NpYTFyWHc0NC92UT09IiwiY3JlYXRlZC1vbiI6IjIwMjQtMDYtMj\
RUMDk6MDI6MTYuMjQ0WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0\
F3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMT\
VRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1\
JEUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RX\
pBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTk\
JnTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSU\
FCT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2\
NZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRX\
dFQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0\
JCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQk\
dBaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUU\
RHMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNr\
WU1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RB\
eEthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJN\
QjRYRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtH\
QTFVRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFV\
RUF3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dU\
QVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJz\
OFIwWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZP\
S0dCSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29a\
SXpqMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4L3R6VW9RL1NzeWRMMzBEUUlO\
RXRjTjltQ1RYUEFpRUF2SWIzbytGTzNCVG5jTEZzYUpaUkFrZDd6T3Vzbi8vWktPYUVL\
YnNWRGlVPSJdLCJ0eXAiOiJ2b3VjaGVyLWp3cytqc29uIiwiYWxnIjoiRVMyNTYifQ",
      "signature": "SFtc2xqK8xN2KVqkYKJl7EUU8UJAai3VvCuK8LIfH8HZFvrr\
hqGiY8vK5cbQHQCjVcroFLn7IyhH708XAdstAQ"
    },
    {
      "protected": "eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJi\
Wk1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERU\
QUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlN\
RGN3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1\
UW5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldG\
cGJsSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJC\
azE2Sy9pNzlvUmtLNVliZVBnOFVTUjgvdXMxZFBVaVpITXRva1NkcUtXNWZuV3NCZCtx\
Ukw3V1JmZmVXa3lnZWJvSmZJbGx1cmNpMjV3bmhpT1ZDR2plekI1TUIwR0ExVWRKUVFX\
TUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREhEQU9CZ05WSFE4QkFmOEVCQU1DQjRB\
d1NBWURWUjBSQkVFd1A0SWRjbVZuYVhOMGNtRnlMWFJsYzNRdWMybGxiV1Z1Y3kxaWRD\
NXVaWFNDSG5KbFoybHpkSEpoY2kxMFpYTjBOaTV6YVdWdFpXNXpMV0owTG01bGREQUtC\
Z2dxaGtqT1BRUURBZ05JQURCRkFpQnhsZEJoWnEwRXY1SkwyUHJXQ3R5UzZoRFlXMXlD\
Ty9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm8vZ0dOMC9qd3pKWjBT\
bDJoNHhJWGsxIl0sInR5cCI6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9\
",
      "signature": "0Q7_a7L4ahn2vmfSxxkKg1xsOMMc8_D7B_Ilzqv5DKzCMkc7\
8YeeezDsuh4Z5JNVQUYHPp7LsK_AS_WH8TdVzA"
    }
  ]
}

]]></artwork>
        </figure>
      </section>
    </section>
    <section anchor="pledgehttps">
      <name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>
      <t>The use of HTTP-over-TLS between Registrar-Agent and pledge has been identified as an optional mechanism.</t>
      <t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the Registrar-Agent.
The authenticity of the onboarding and enrollment is not dependent upon the security of the TLS connection.</t>
      <t>The use of HTTP-over-TLS is not mandated by this document for two main reasons:</t>
      <ol spacing="normal" type="1"><li>
          <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods, and raw public key, they do not help as there is no previous relationship between the Registrar-Agent and the pledge.</t>
        </li>
        <li>
          <t>The pledge can use its IDevID certificate to authenticate itself, but <xref target="RFC9525"/> DNS-ID methods do not apply, as the pledge does not have a FQDN, and hence cannot be identified by DNS name.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute that must be present in every IDevID.</t>
        </li>
      </ol>
      <t>If the Registrar-Agent has a pre-configured list of which product-serial-number(s), from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>
      <t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that product-serial-number.
The use of scannable QR codes may help automate this in some cases.</t>
      <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref section="4.1" sectionFormat="of" target="I-D.irtf-t2trg-taxonomy-manufacturer-anchors"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A Registrar-Agent application will need to use different APIs in order to initiate an HTTPS connection without performing WebPKI verification.
The application will then have to do its own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involves use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures (see <xref target="androidtrustfail"/>).</t>
      <t>Also note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge IDevID certificate.
IDevID certificates are intended to be widely usable and EKU does not support that use.</t>
    </section>
    <section anchor="app_history">
      <name>History of Changes [RFC Editor: please delete]</name>
      <t>Proof of Concept Code available</t>
      <t>From IETF draft 16 -&gt; IETF draft 17:</t>
      <ul spacing="normal">
        <li>
          <t>updated formatting of key events in <xref target="log_hints"/></t>
        </li>
      </ul>
      <t>From IETF draft 15 -&gt; IETF draft 16:</t>
      <ul spacing="normal">
        <li>
          <t>issue #135: corrections from IOTDIR review (clarification regarding minimum supported discovery in <xref target="discovery_uc2_ppa"/>, clarification regarding CDDl notation in <xref target="cacerts_CDDL_def"/> and editorial nits.</t>
        </li>
        <li>
          <t>updated references (draft-ietf-netconf-sztp-csr became RFC 9646, included RFC 9662, operational considerations drafts for registrar and MASA)</t>
        </li>
        <li>
          <t>AD review: included term Registrar-Agent in Terminology section</t>
        </li>
        <li>
          <t>AD review: enhanced interaction information in <xref target="uc2figure"/> and <xref target="uc3figure"/></t>
        </li>
        <li>
          <t>AD review: included new section on <xref target="op_cons"/> to outline operational considerations</t>
        </li>
        <li>
          <t>AD review: enhanced <xref target="log_hints"/> with more detailed recommendations on logging</t>
        </li>
        <li>
          <t>AD review: enhanced <xref target="priv_cons"/> with enhanced recommendations concerning logging</t>
        </li>
        <li>
          <t>AD review: enhanced <xref target="sec_cons_reg-agt"/> with more information about misuse of the Registrar-Agent</t>
        </li>
        <li>
          <t>IOTDIR/OPSDIR/AD review: addressed various nits received throughout the draft</t>
        </li>
      </ul>
      <t>From IETF draft 14 -&gt; IETF draft 15:</t>
      <ul spacing="normal">
        <li>
          <t>issue #134: editorial clarifications on references to <xref target="I-D.ietf-anima-brski-discovery"/> in <xref target="discovery_uc2_reg"/> and  <xref target="discovery_uc2_ppa"/></t>
        </li>
      </ul>
      <t>From IETF draft 13 -&gt; IETF draft 14:</t>
      <ul spacing="normal">
        <li>
          <t>Update of the examples in <xref target="examples"/> to align with the defined prototypes</t>
        </li>
        <li>
          <t>Changes incorporated based on Shepherd review PR #133:
          </t>
          <ul spacing="normal">
            <li>
              <t>Terminology alignment and clarification throughout the document to use terms more consistently</t>
            </li>
            <li>
              <t>Restructuring of <xref target="exchanges"/> for protocol steps to align to the general approach: Overview, data description, CDDL description (if necessary), JWS Header an Signature. This lead to some movement of text between existing and new subsections.</t>
            </li>
            <li>
              <t>Inclusion of new section on logging hints <xref target="log_hints"/> to give recommendations on which events to be logged for auditing</t>
            </li>
            <li>
              <t>Alignment of pledge status response data across <xref target="vstatus_data"/>, <xref target="estatus_data"/>, and <xref target="pstatus_data"/>.</t>
            </li>
            <li>
              <t>Included MASA component in description of affected components in <xref target="system-components"/></t>
            </li>
            <li>
              <t>Moved host header field handling from <xref target="pledgehttps"/> to <xref target="pledge_component"/> as generally applicable</t>
            </li>
            <li>
              <t>Updated status artifacts (vStatus, eStatus, pStatus) to align with BRSKI CDDL definition, but made reason-context mandatory  to have distinguishable objects for the registrar-agent</t>
            </li>
            <li>
              <t>Correction of terminology of local host name vs. service instance name in <xref target="discovery_uc2_ppa"/></t>
            </li>
          </ul>
        </li>
        <li>
          <t>Update of informative references and nits</t>
        </li>
      </ul>
      <t>From IETF draft 12 -&gt; IETF draft 13:</t>
      <ul spacing="normal">
        <li>
          <t>Deleted figure in Section "Request Artifact: Pledge Voucher-Request Trigger (tPVR)" for JSON representation of tPVR, as it has been replaced by CDDL</t>
        </li>
        <li>
          <t>Updated reason-content description in status response messages (enroll-status, voucher-status, and status-response).</t>
        </li>
        <li>
          <t>Updated CDDL source code integration to allow for automatic verification</t>
        </li>
        <li>
          <t>Reordered description in <xref target="pvr"/> in <xref target="tper"/> to better match the order of communication and artifact processing.</t>
        </li>
        <li>
          <t>Updated CDDL for the request-enroll trigger in <xref target="tper_CDDL_def"/> according to the outcome of the interim ANIMA WG meeting discussions on April 19, 2024</t>
        </li>
        <li>
          <t>Included statement in <xref target="per_artifact"/> for using the advanced created-on time from the agent-signed-data also for the PER, when the pledge has no synchronized clock</t>
        </li>
      </ul>
      <t>From IETF draft 11 -&gt; IETF draft 12:</t>
      <ul spacing="normal">
        <li>
          <t>Updated acknowledgments to reflect early reviews</t>
        </li>
        <li>
          <t>Addressed Shepherd review part 2 (Pull Request #132); containing: terminology alignment, structural improvements of the document; deletion of leftovers from previous draft versions; change of definitions to CDDL, when no YANG is available</t>
        </li>
      </ul>
      <t>From IETF draft 10 -&gt; IETF draft 11:</t>
      <ul spacing="normal">
        <li>
          <t>issue #79, clarified that BRSKI discovery in the context of BRSKI-PRM is not needed in <xref target="discovery_uc2_reg"/>.</t>
        </li>
        <li>
          <t>issue #103, removed step 6 in verification handling for the wrapped CA certificate provisioning as only applicable after enrollment <xref target="cacerts"/></t>
        </li>
        <li>
          <t>issue #128: included notation of nomadic operation of the Registrar-Agent in <xref target="architecture"/>, including proposed text from PR #131</t>
        </li>
        <li>
          <t>issue #130, introduced DNS service discovery name for brski_pledge to enable discovery by the Registrar-Agent in <xref target="iana_con"/></t>
        </li>
        <li>
          <t>removed unused reference RFC 5280</t>
        </li>
        <li>
          <t>removed site terminology</t>
        </li>
        <li>
          <t>deleted duplicated text in <xref target="pledge_component"/></t>
        </li>
        <li>
          <t>clarified registrar discovery and relation to BRSKI-Discovery in <xref target="discovery_uc2_reg"/></t>
        </li>
        <li>
          <t>clarified discovery of pledges by the Registrar-Agent in <xref target="discovery_uc2_ppa"/>, deleted reference to GRASP as handled in BRSKI-Discovery</t>
        </li>
        <li>
          <t>addressed comments from SECDIR early review</t>
        </li>
      </ul>
      <t>From IETF draft 09 -&gt; IETF draft 10:</t>
      <ul spacing="normal">
        <li>
          <t>issue #79, clarified discovery in the context of BRSKI-PRM and included information about future discovery enhancements in a separate draft in <xref target="discovery_uc2_reg"/>.</t>
        </li>
        <li>
          <t>issue #93, included information about conflict resolution in mDNS and GRASP in <xref target="discovery_uc2_ppa"/></t>
        </li>
        <li>
          <t>issue #103, included verification handling for the wrapped CA certificate provisioning in <xref target="cacerts"/></t>
        </li>
        <li>
          <t>issue #106, included additional text to elaborate more the registrar status handling in <xref target="vstatus"/> and <xref target="estatus"/></t>
        </li>
        <li>
          <t>issue #116, enhanced DoS description in <xref target="sec_cons-dos"/></t>
        </li>
        <li>
          <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_component"/></t>
        </li>
        <li>
          <t>issue #122, availability of product-serial-number information on registrar agent clarified in <xref target="tpvr"/></t>
        </li>
        <li>
          <t>issue #123, Clarified usage of alternative voucher formats in  <xref target="rvr_artifact"/></t>
        </li>
        <li>
          <t>issue #124, determination of pinned domain certificate done as in RFC 8995 included in <xref target="voucher_artifact"/></t>
        </li>
        <li>
          <t>issue #125, remove strength comparison of voucher assertions in <xref target="agt_prx"/> and <xref target="exchanges"/></t>
        </li>
        <li>
          <t>issue #130, aligned the usage of site and domain throughout the document</t>
        </li>
        <li>
          <t>changed naming of registrar certificate from LDevID(RegAgt) to Registrar-Agent EE certificate throughout the document</t>
        </li>
        <li>
          <t>change x5b to x5bag according to <xref target="RFC9360"/></t>
        </li>
        <li>
          <t>updated JSON examples -&gt; "signature": BASE64URL(JWS Signature)</t>
        </li>
      </ul>
      <t>From IETF draft 08 -&gt; IETF draft 09:</t>
      <ul spacing="normal">
        <li>
          <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the product-serial-number and the inclusion of GRASP</t>
        </li>
        <li>
          <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
        </li>
        <li>
          <t>issue #82, included optional TLS protection of the communication link between Registrar-Agent and pledge in the introduction <xref target="req-sol"/>, and <xref target="tpvr"/></t>
        </li>
        <li>
          <t>issue #83, enhanced <xref target="tper"/> and <xref target="pvr"/> with note to re-enrollment</t>
        </li>
        <li>
          <t>issue #87, clarified available information at the Registrar-Agent in <xref target="tpvr"/></t>
        </li>
        <li>
          <t>issue #88, clarified, that the PVR in <xref target="tpvr"/> and PER in <xref target="tper"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
        </li>
        <li>
          <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="per"/></t>
        </li>
        <li>
          <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
        </li>
        <li>
          <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="obtain_cacerts"/></t>
        </li>
        <li>
          <t>issue #94: clarified terminology (possess vs. obtained)</t>
        </li>
        <li>
          <t>issue #95: clarified optional IDevID CA certificates on Registrar-Agent</t>
        </li>
        <li>
          <t>issue #96: updated exchangesfig_uc2_3 to correct to just one CA certificate provisioning</t>
        </li>
        <li>
          <t>issue #97: deleted format explanation in exchanges_uc2_3 as it may be misleading</t>
        </li>
        <li>
          <t>issue #99: motivated verification of second signature on voucher in <xref target="voucher"/></t>
        </li>
        <li>
          <t>issue #100: included negative example in <xref target="vstatus_data_example_error"/></t>
        </li>
        <li>
          <t>issue #101: included handling if <xref target="voucher"/> voucher telemetry information has not been received by the Registrar-Agent</t>
        </li>
        <li>
          <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="cacerts"/></t>
        </li>
        <li>
          <t>issue #105: included negative example in <xref target="estatus_data_example_error"/></t>
        </li>
        <li>
          <t>issue #107: included example for certificate revocation in <xref target="estatus"/></t>
        </li>
        <li>
          <t>issue #108: renamed heading to Pledge-Status Request of <xref target="query"/></t>
        </li>
        <li>
          <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="query"/></t>
        </li>
        <li>
          <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_example_bootstrap"/></t>
        </li>
        <li>
          <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="query"/></t>
        </li>
        <li>
          <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
        </li>
        <li>
          <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
        </li>
        <li>
          <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
        </li>
        <li>
          <t>updated references</t>
        </li>
      </ul>
      <t>From IETF draft 07 -&gt; IETF draft 08:</t>
      <ul spacing="normal">
        <li>
          <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
        </li>
        <li>
          <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
        </li>
      </ul>
      <t>From IETF draft 06 -&gt; IETF draft 07:</t>
      <ul spacing="normal">
        <li>
          <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
        </li>
        <li>
          <t>smaller editorial corrections</t>
        </li>
      </ul>
      <t>From IETF draft 05 -&gt; IETF draft 06:</t>
      <ul spacing="normal">
        <li>
          <t>Update of list of reviewers</t>
        </li>
        <li>
          <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
        </li>
        <li>
          <t>Included table for new endpoints on the registrar in the overview of the Registrar-Agent</t>
        </li>
        <li>
          <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
        </li>
        <li>
          <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
        </li>
      </ul>
      <t>From IETF draft 04 -&gt; IETF draft 05:</t>
      <ul spacing="normal">
        <li>
          <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
        </li>
        <li>
          <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
        </li>
        <li>
          <t>Clarified pledge-status responses are cumulative, issue #73</t>
        </li>
        <li>
          <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
        </li>
        <li>
          <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
        </li>
        <li>
          <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
        </li>
        <li>
          <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
        </li>
        <li>
          <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
        </li>
        <li>
          <t>Enhanced security considerations and privacy considerations, issue #59</t>
        </li>
        <li>
          <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
        </li>
        <li>
          <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
        </li>
        <li>
          <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
        </li>
        <li>
          <t>Reworked all message representations to align with encoding</t>
        </li>
        <li>
          <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
        </li>
        <li>
          <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="query"/>, IANA considerations and section <xref target="pledge_component"/></t>
        </li>
        <li>
          <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
        </li>
        <li>
          <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
        </li>
        <li>
          <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
        </li>
        <li>
          <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
        </li>
        <li>
          <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
        </li>
        <li>
          <t>Several editorial changes and enhancements to increasing readability.</t>
        </li>
      </ul>
      <t>From IETF draft 03 -&gt; IETF draft 04:</t>
      <ul spacing="normal">
        <li>
          <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
        </li>
        <li>
          <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
        </li>
        <li>
          <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
        </li>
        <li>
          <t>Added clarification that Registrar-Agent may collect PVR or PER or both in one run, issue #17</t>
        </li>
        <li>
          <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
        </li>
        <li>
          <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
        </li>
        <li>
          <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
        </li>
        <li>
          <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="cacerts"/>; also added new required registrar endpoint (section <xref target="pvr"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
        </li>
        <li>
          <t>utilized defined abbreviations in the document consistently, issue #22</t>
        </li>
        <li>
          <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
        </li>
        <li>
          <t>Added several clarifications based on review comments</t>
        </li>
      </ul>
      <t>From IETF draft 02 -&gt; IETF draft 03:</t>
      <ul spacing="normal">
        <li>
          <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
        </li>
        <li>
          <t>Include link to SVG graphic as general overview</t>
        </li>
        <li>
          <t>Restructuring of section 5 to flatten hierarchy</t>
        </li>
        <li>
          <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
        </li>
        <li>
          <t>Several editorial improvements based on review comments</t>
        </li>
      </ul>
      <t>From IETF draft 01 -&gt; IETF draft 02:</t>
      <ul spacing="normal">
        <li>
          <t>Issue #15 included additional signature on voucher from registrar in section <xref target="pvr"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="voucher"/></t>
        </li>
        <li>
          <t>Included representation for General JWS JSON Serialization for examples</t>
        </li>
        <li>
          <t>Included error responses from pledge if it is not able to create a Pledge-Voucher-Request or an enrollment request in section <xref target="tpvr"/></t>
        </li>
        <li>
          <t>Removed open issue regarding handling of multiple CSRs and Enroll-Responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
        </li>
      </ul>
      <t>From IETF draft 00 -&gt; IETF draft 01:</t>
      <ul spacing="normal">
        <li>
          <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the Registrar-Agent to support verification of POP of the registrars private key in section <xref target="pvr"/> and exchanges_uc2_3.</t>
        </li>
        <li>
          <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
        </li>
        <li>
          <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the Enroll-Response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
        </li>
        <li>
          <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
        </li>
        <li>
          <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section <xref target="tpvr"/>.</t>
        </li>
        <li>
          <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
        </li>
        <li>
          <t>Reworked text in from introduction to section pledge-responder-mode</t>
        </li>
        <li>
          <t>Fixed "serial-number" encoding in PVR/RVR</t>
        </li>
        <li>
          <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="pvr"/>.</t>
        </li>
        <li>
          <t>Note added in <xref target="pvr"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
        </li>
        <li>
          <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but Registrar-Agent is not available) (Issue #10).</t>
        </li>
        <li>
          <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
        </li>
        <li>
          <t>Included table for endpoints in <xref target="pledge_component"/> for better readability.</t>
        </li>
        <li>
          <t>Included registrar authorization check for Registrar-Agent during
TLS handshake  in section <xref target="pvr"/>. Also enhanced figure
<xref target="exchangesfig_uc2_all"/> with the authorization step on TLS level.</t>
        </li>
        <li>
          <t>Enhanced description of registrar authorization check for Registrar-Agent
based on the agent-signed-data in section <xref target="pvr"/>. Also
enhanced figure <xref target="exchangesfig_uc2_all"/> with the authorization step
on Pledge-Voucher-Request level.</t>
        </li>
        <li>
          <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the Registrar-Agent have different
issuing CAs in <xref target="exchangesfig_uc2_all"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
        </li>
        <li>
          <t>Addressed YANG warning (issue #1)</t>
        </li>
        <li>
          <t>Inclusion of examples for a trigger to create a Pledge-Voucher-Request
and a Pledge Enroll-Request.</t>
        </li>
      </ul>
      <t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>
      <ul spacing="normal">
        <li>
          <t>Moved UC2 related parts defining the Pledge in Responder Mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
        </li>
        <li>
          <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review, meanwhile moved to <xref target="I-D.ietf-anima-rfc8366bis"/> as well as in the security considerations (formerly named ietf-async-voucher-request).</t>
        </li>
        <li>
          <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
        </li>
        <li>
          <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
        </li>
        <li>
          <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
        </li>
      </ul>
      <t>From IETF draft 02 -&gt; IETF draft 03:</t>
      <ul spacing="normal">
        <li>
          <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="tpvr"/> as voucher-request was
enhanced with additional leaf.</t>
        </li>
        <li>
          <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
        </li>
      </ul>
      <t>From IETF draft 01 -&gt; IETF draft 02:</t>
      <ul spacing="normal">
        <li>
          <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges"/>.</t>
        </li>
        <li>
          <t>Terminology change: issue #2 pledge-agent -&gt; Registrar-Agent to
better underline Registrar-Agent relation.</t>
        </li>
        <li>
          <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
        </li>
        <li>
          <t>Communication approach between pledge and Registrar-Agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the Pledge-Voucher-Request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
        </li>
        <li>
          <t>Details on trust relationship between Registrar-Agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Recommendation regarding short-lived certificates for
Registrar-Agent authentication towards registrar (issue #7) in
the security considerations.</t>
        </li>
        <li>
          <t>Introduction of reference to Registrar-Agent signing certificate using
SubjectKeyIdentifier in Registrar-Agent signed data (issue #37).</t>
        </li>
        <li>
          <t>Enhanced objects in exchanges between pledge and Registrar-Agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges"/>.</t>
        </li>
        <li>
          <t>Details on trust relationship between Registrar-Agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Split of use case 2 call flow into sub sections in <xref target="exchanges"/>.</t>
        </li>
      </ul>
      <t>From IETF draft 00 -&gt; IETF draft 01:</t>
      <ul spacing="normal">
        <li>
          <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
        </li>
        <li>
          <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
        </li>
        <li>
          <t>First description of exchanged object types (needs more work)</t>
        </li>
        <li>
          <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
        </li>
        <li>
          <t>Updated references.</t>
        </li>
        <li>
          <t>Included Thomas Werner as additional author for the document.</t>
        </li>
      </ul>
      <t>From individual version 03 -&gt; IETF draft 00:</t>
      <ul spacing="normal">
        <li>
          <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
        </li>
        <li>
          <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
        </li>
        <li>
          <t>Updated CMP example in to use lightweight CMP instead of CMP, as the
draft already provides the necessary /.well-known endpoints.</t>
        </li>
        <li>
          <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
        </li>
        <li>
          <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
        </li>
        <li>
          <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
        </li>
      </ul>
      <t>From individual version 02 -&gt; 03:</t>
      <ul spacing="normal">
        <li>
          <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
        </li>
        <li>
          <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
        </li>
        <li>
          <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
        </li>
      </ul>
      <t>From individual version 01 -&gt; 02:</t>
      <ul spacing="normal">
        <li>
          <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
        </li>
        <li>
          <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
        </li>
      </ul>
      <t>From individual version 00 -&gt; 01:</t>
      <ul spacing="normal">
        <li>
          <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
        </li>
        <li>
          <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
        </li>
        <li>
          <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
        </li>
      </ul>
    </section>
    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
      <name>Contributors</name>
      <contact initials="E." surname="Dijk" fullname="Esko Dijk">
        <organization>IoTconsultancy.nl</organization>
        <address>
          <email>esko.dijk@iotconsultancy.nl</email>
        </address>
      </contact>
      <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
        <organization>Futurewei</organization>
        <address>
          <email>tte@cs.fau.de</email>
        </address>
      </contact>
      <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
        <organization>Siemens Schweiz AG</organization>
        <address>
          <email>ietf@kovatsch.net</email>
        </address>
      </contact>
    </section>
  </back>
  <!-- ##markdown-source:
H4sIAAAAAAAAA+y9+XYcx7E++D/P4TuUwXtGgNXdxMbVlm0IBCVcczMASdc/
jYYodBeAMru72lXVoGBK91nmWebJJtbcKqsXAKQoibSPTQJVWZmRkZGxfBHR
7XZv36rzepg9Tr48OPz7fvI2r8+TV8NscJYl+Tg5yKpJMR5kZfK8GGTJKj3U
fXXwfO32rfTkpMwu5EX82e1bg6I/Tkcw2KBMT+tuntWn3XScj9LuSVm9ybuT
ctTdeACvlln6OHk5ycq0zotxlaTjQfI8Hadn2Sgb17dvvT17nOy82H++k3z3
FQyb1jDm5vrmvdu3qhqefZ0OizH8qC6n2e1b+aSkv1b15vr6o/VNeGh6Msqr
CoY+upzAc/t7R0/DQefOoZ/Wj5OqHty+Nckf376VJHXRf5x8dplVn+G/+sVo
kvZr5yfV5ajMTiv3J0VZBz+CyY6LOj/NswH8dFzwc3WZO0Ol0/q8KOGbXdgD
ePmwlzwt86zCR5m+h3V2epqN7Y+LEhZ3mOPUq2TnK/yR7o/8VL6TZfCdl3Vd
dL9Oz8fdg3x8ltyn9eT15ePk+XSc9895fQP40GcPNx5sPZIFT8d1Cc98lZWj
dHyJP8tGaT5EKtF0eqc4nb9V/MEeUAifmZb54+S8rifV47t3375923N+f9es
8aiXfJeV46y0izw6L0Zp5fz4l11kTdPpvqXpXG2Re73kWZY6S9wb5kVtfkbr
282rfpEcXgJNR956DmDOdQ7/SqsqSx7Y5XyXDod5lQ2H2diuaffr7sOt9W1v
TYdwuv+TlUPgdPz55JwO0crn2xvJ9nby8MHD5BGcoBVnzUOY2d/6OCNeqKzj
eY9mk5aDqhjb1TzHn2XDZDf8NW8cfDYbAlGTw+K0fgvnL/muKN9UzudG/fJz
FBp/q/TZXj/1yKvUdX4P5O0XsMD8ZFq7pwaI/ST/1xuH2NWbwvyIprRfHMGr
1XQIQqV/2RsPnblk8HRvAE//DbYofKqrLFoAObOqSvb6b7KyNgM/ndbTMnub
5S7/1Nnf+lXvNJ32BplLyr8XF2ldMUMKIdO6Ps+B991fedx/2D+H0f8jp0C+
QKR7I6/0xhnM5yIbTzOSXmdlMZ2IAKSTg3I54Rff0T/+hu/34DM/0/NwE0xP
HvNz3bdndwNBfvvWuIAjUucXPP7B0917mw827d8fruvf7z+4v+n8fUv//mB9
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
FY7OtOkSYYxJUrHyPC7Yw4OQiRxORY3AApAfZQY2DasgdEOdTxFKCvwwID0I
RBoY5eQjhFsjm8BsiiqzkwPDtGSHCro/2KFdF2/gbBzzbGQyoDdNsy++OCbp
CWcQWOy8GOLAqA4L64j+TnbZFExg58eJDbAajxXKGLBQZPGete55Gw5BOtAO
HkoomX4MP2c/Cwy4N77Iy2LM4BE8Mt/AUnbh68meLvTdnWo6AdJe/GziQORg
4bAEKptCQhsSYjCFunfQ23OeXmS4E7wDjj+07QrseK/hBubjaTGtnFfppKKA
hTHhxwWiET0Hu4h8o5OEZmIRk/uGO8WBNCpqUh1IduuSBtlkWFzyhmQuCdHR
d5mZBWbGsi00LwCFSRAvHDM6qZOwsUJBpJNpPqQzjmhIwh7gwqq8ZgHlfTQn
7qaxgbcpAK9fN8J/Hw1K+JB+BOz0mmCMYE1PUQ7BX+UuzclE3RmzEBSGV8GF
WPHRyZDunMyCIYEJQJzWlZr6qOPDCZukpboTLhCkpI5DFsgOpIDW3AyAMb/e
Sb5Uauww5kFYGc6ooVNqfoPqMhurdDDRMQiryJEDmDHRfq1TuJ8H9nUxufDg
ub5fusxJjICgq4oSnVLoOqj5r2OWTKjqZviDk6lY7B4eCsZmHg54Hs4LsNzQ
TsJRvVh1UxsgiqzCA0LrUtCOR1EKPqJNiIEBecAwIf2W6PvE4n38cBFKJ/oJ
3SmpNfSz/vk47+cpGtHDoUXQkOXTdRAjFlxhuNCQV1jeRxTAE6PladOnC+IE
RchYdYY0GaaTuph0KLRHiLGTfKiTpBMEEkD8WZHoH07CmE5MG7MakdMReuCG
gKJMlu1FRtcMEWgmbRBUZ8I9cF7qSsWXWbocGt18mmRcjaQrZTp843ujaaN3
mk+rGx4+at1b88jO+vIQ70l62xVscj15fCg7LVRbYHyUu+huNK4u9wsw13SU
oR5mAogB2sIoqobXjD5nTj2malU8o6p1fKQO6Qk5PEO3ON+QoIHiHlR69Zhb
2RsH0XJKVBEdd13JMSr41CGC0XcbVVPHM0BDFqSEuE7YJD1D/b+WhVlvlsyQ
WHPuClOWxGPvSrRnuUlJG783M2weg88qOXyy5Q2MYhsYo6MMWU7H1r3dGLbp
HpVb2bkvAsjeflUIN74qQGG5NHc8IU9IMUC9km4KD86iYir3x6OIHhxgvG5z
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
rbH2MXJMZBze/JFw0Pw9u8kdmjnO96GOvPw4nl74f1l/019/+PDrWlZsfjA6
J99LaUOGGwttfsH56E88bcYyqJJv4XF8VebA3H/LjtP4iXdOrzrO99mPNTXH
Y7V8/8kPVx1oOuHYEsijujsszq46UHLllbk7pqqV/TNTAsnjn302//b5GO+I
7bVWMIRzR0SqWv9Kb4zVVTyQa2vXkWTLagvLnfjvRXH7oTHyUvz8vYNB+aG7
KH0cZNivk5/vrbXAcH5FPNplHr0Wb9E4/RQpUC2iGX+Me3l/rTWl5WPczZu1
apa4V1rGYeF0wZktvx2r5sHa3Byk3z53LHGyW8ZpPPLL7urDtblJX7/1XV3q
7m0Zhxgis0f+N3LmH62FXcOOMozc1+Wlq6aeYO/p8eDXqpvexL2/rMy/mo3k
THRpa5SeL7N/aw0WY/YtOY7MJzbKDJtt2Z/MG+d7wfVZ4/Vq4ywznxsLK6yv
ibRtnKrf46nJ3sepmT/Oje3mxlospflj3Mmb1YVq57q7jqY8+Y1pyraZVwwX
oCklLxUQEK98Z16d28crihdIqskw10LE5lL2emO1gBZclI0FLzllMLGJ0GPp
7WsKNPjF59L+v6e5lM8yhSAVst0CE9M0yVmVUSwuhvAQmz1bvGH5CQRZWVf4
/lbPNJ31P68pEY1PqzK16MfcTFKjbdVxjFoAEzeoS5sUefDtQQQzl1YJps1p
bUYDwnOKyvAkKWGupuKOtPztnknZ8pcv+V5OCdAlV3ulxe66S0Wn6pUXdq8X
Sxvz12h7Sjc22VQWDooae20Swt61i1Fod4cmeL/nFRTxZ6Y8tjT5g9R1k2Lf
rBVEk3jQ8wqO+JMIln7FudB3HvaiNUf874XG61UXvyowMC4tNTbiOQCVry1M
pUc9r1FyfKtEC6yNbXX1o3N1QUHT3VjvuY2co1S+yenyR+km0Yov/if9MjHm
Q1xJGB/QEn9+Zgs19roKtwn8fk5xond36N5r6wEkxVXPBNFX4VtSmNDi/rBi
WzY2G9XyJZ3IKuJwDBaY6y1XNs8jVrNLs0WcKsp2sR2u7KlVOpu5kJGGCRbu
LdXpKPeTWvhwJYCJ7eqFSQ6SQ2LyHyRVjbJZ+5e254vZ1UUQvnpQW0qyR+GY
G9j+81xzbVzlwK/W2w5dbwVmGrIJoNdN2/Ux/Z/Qm78QevMTGvATGrBtnPdv
8m2IwbdCtRwjdsnKPAOv2ZNj59kzU4LEkYm2dmRKyDPMHdD0kFcv4UrydR1T
ewrukHg5p4tSyyRrQtNJARcKXW9a9BgHRBS/VMla6BqzuniYYl37aT49U9tX
J8A1mzipbBdLoY/r7hF29eUiVqaseUaX+7FTtvruv6pibMtZ7TCGiV+Tyjgt
L2pW17/eVp/LIMG0/9CeNCZpalQxiKtosm5JuVYJksMrjSUF1jAgY7Qz4pw2
igV5UbIjtE9Y+IDL0iWb6+vJy7+byp0uXUVjvgZhb4I+XrE3p5uo0xVXE019
HTbI9rRpHEIJpPCchrqNpDiuMxDW8Z1y9dJGhVa3tpKWVdJ+D0T8rCxRU2IV
Fns0tXSD6YUOHckSbbxfOQyL2pV0RNqGTf4yxTw7OiuPNelbU7opiZiyUXhE
k3BCiTbGOqCXtaQSFWLG1Ezkgk7ytsTcJSpAgJXLK3is7veoDIT3ujakYC6n
LB9qXoJFoSXZ0GMy/3gLz72lokwtB5kXfD8BxpGzjLtj1izHOzouVl+TCg/c
EZwbFOMOczk6WM50bDLDTVVjfpibqVAH9NmngGa4cS/5xg6VPM8GIJRxyWam
8+nwfuYrc/TLOzplIoxkIFkCe0A1ioaYFoXuk7unaT6cUulazF8yHY5MnjHm
MOb9PDV9tuKNQntaGEGvCk3OfLzgXcK2mJWBuqQlbyK+VU+oThcQs9H0sxP0
EbU1u7GlEdjBWj1NCy3PtutW/a9TrpkRf+35u5He9U7bIulbD+JgpoykbMv2
9qaJ4wMh8REt384dmbBAHQim0URkl1kQcac2us76KXKVrI6K2lF3GL0NVU57
N2GfCveREJFQ3/jS1snyenY7+ocIMy3LVTfSEDv2VojsffLN0dPuQ1CNUMyK
4DKl2iX3fPPeI+oLkHJTDarVY72QT5480wfvb1AnDqQs+vSHEVUHH38NP/75
58fGRuwPBkNQTYUOIlZEMKjW90XyDh9JkhXeRS1F0jUNuN0qRbD3K4+BHNje
0XuNN6iLU9QH8Pc/uxqtN0+NXtAykdvnnbIZi1hrhDaG2Wlt9d7jBZd2nIwy
YkneRlcxRZ64v93V7Ww9EfD4//TurT9KLraS1SdYno35qOfNxKHW4t/87+8O
+Tx3D/k0PKHqPTO6MAtrSBFWdF1Qg0VKnRUJS10bOatW+d9nacNNMBzu6BJs
ssILkPnDBT7NvvhipeOM4nPNlzuHe/e3V+HgPFyNLnZt7fatJkfJ8pShaPYH
ToM0rkSGK5vBJnfw4ohT+N0dpalffD6SH8wi4Z87L77CczqlCvXN1iDRbGp8
cZilp1EWwXKX+Til8j9GVAW5zwvKq9jw9N120QVUcVHjycpX4inF39C3Dz1G
OrwEuv+40lr16gF2I5c2SA/ubWAhSC38ZniwuQ2+rVKOHC6Hv70uvR0PeT2v
gmVoiGXGgRQ1dvZpmKSXwyIdGO795uCZMHB0FWtrzP7m9qngze9ZkoocxkHL
oqZOLZFhYRWv9NfJ16TcyaD0qhnYexXfOtTfrPHDP+P//RAcqCYl1ekQPxuw
GYsywywB3bLlair6/EjdWvrFiJXLAghRy5VNxOEN8dnFMJqIYfdB6t7C1VJZ
Xk3LYTf+LaxgBExKkkzZ41g4wLBNezHALS7GHk6GVmAKnfNagz2Q38U2n6pI
XG3iOpJOXeajxWWYnoZtkFBX+o5hSec7LHDvtG38uzt6wOdwiCO05mlY6mui
yklX0LJgRng6ZupZ9IijUrF5P+gWYziONeZIqdbkqcD4y+zHuqEwBZ9sqEwt
RFnl9+ZqRXZ2M5SQ/rQspUecRHRR6UYFHOUiDSHdV2wzSawNSo8JP7SXP7yv
5Q+3trYeiQOH5ubRZ8b04iZFpNiOLbHViAdpCKxwyqhkvKKSK6EeWeeGsFEZ
lL3+n3ub6yz4pL01G9y2jW+jErPhKBEghJjBZg8cX0Lfiig2p45x0txuy4Zo
h+u95HHeyub65kZ3fbu7cf9off0x/nejt76+/n9EGQuZcYXrckkjsO0HGxsr
wT3hT93cEXF+3ON1zLgD7hj1KxRv5vzHRJ9KmPY7vOFgdkJvyq4y2CtrfIf8
aiS2uMeO0+HZ8eMIN8LPsWza+YgdJhqvdLx8Rhiqb+V473Dz3v3jTush2e5t
BNoSTeFNPohOITAaXu4e7R0lh0cH+6CTenL5kIsQ/j27dGryL1R1MHLF0Q44
hcN/Zg5HHmEH1DzuFgUt3OKm9TE8QwYlogn3AiVajY2IeiMOMUetafDVnjO1
hbjWXJIz4/jU+X0OwzLwCMvSIs1tlUtHcfFuZHtZm/ajcS1BghWu5tOuqdwL
OM6pOmqAMXO9a6viVFvGp7ba7kpboNJSom4itwBpx/VCEd9JJ+Lw2+arBpzg
EmSzUagXl2GrlVLnbnhN+jKPCOGoAoqMv6Ck37FnJ7qtu+bZjL7H6mpmoOe1
Uj07JfZQLJE1lpYKwmihzmhsj74bMeeARfAY2LCTw6dk4uETs0280J1hdWaP
Ptew5nTuH7sR16SVao5x18hCFtxc34m3u3zqaUs9Dd48MONilpqNS5yd2Z1Y
3aPzp9u3xn732VH6BvspKdJymKUXXBrTeHJobI60my5ZFgIcstMfPb06dkO3
atTvQaH+E/JHELzTfs5UBr+6HPfPy2LMJQzhExKDxElr/MYzFFiHMMUFW1Q+
0+XRGFq+nxyXrU1k4LIeazlZHt0IYLwHuU9tH/7vDbeMPR2iqFfiG4Lh5In8
Y+w/2aB8Ck9eTurirEwnIJ8oDgzUxCDkpMqmg6JbwqRgVawF00i+ERLby7j5
Ib9stwmc7YhU+jWWR+s+b2pbAXshsV6q4Z24dmqCP6SdWq84O3CPuZ3bQAqe
2ylqKHHVovidothedyCexYLe9gXU11Y/u6mY7gbn49hMOgPssw1D/hrnCsq7
t0bNnOW5yltsIVzfmNhZYOMztD53EWFjrve3GhqKWhjEx4NhhsWZXOehRosh
9XzMS4bjaM75RDJ99dLGdToRiEVMXL0k4pZt7D54LP+G+1Iv4LkW8KZjAePz
JDbw0exJ9fnnd59On3z91Tfjgx9fbO1tbO/+QyMXMedNxF42z5pDh88FJ855
6iaCKm3RuDbTiNSHhubgbpjqDf7dLebRItGUpcx50glYDyBmsBdvxd3frSOV
G6DMwQIJ7qbRrEEhJWErv+Mf7/WPG+4A29EENeSLNOfuLxKCbpTbR07moLpf
F75V3Pc8gjUsSRfNZQxI7y61JmOjN5+jVc0h6PYiBG0DtQcJUIijyBjT/nLh
VtC4JCA0whLigERT83xmq7SPGz6+ORc+vnfwCSUeDP17RYl/qgv6qS5o5Cez
QeKbBiS+9+FA4iq5rg0Tz64MEw/uAgebtzcbJZ59fCjxfxVVxsDP2YDvvQUA
33uzAN/ZLw74Dpa6IFJ67xdBSjtaxHuASX90KGS7NZ/gxzcDP54to1hrbo2U
tL98ZfCx29rYBD81MdQgKbR7b8VdtMRJk/ftO9zkgxX0vN+RskBdjYg8a3q4
6KiOi2T38AA7ToM+O0WuMK6PMJsW5ILpjOI8rw5V13dWMu/lJfIP/FbafRJO
BbNUs9LJ4tXyCs3qqL2Fye/dLy2WRmq7vkaJbjuEeATB1upoC7utnwfE1/y8
HZV2GHYNc5lBrlT9YuJEVr34z7XxznvRyNGHhDtns+DOzDRM5jasM/5Z4Ue6
KFtWHif/5fyTvCK3b7k/Su5+Yd4QRmePjA9HzeYDnNs4qX3ec4E8zjwtDI1b
AlJXXdrFS2rvyigYEqenYXs5PiM8WIZhtx2vzEtA944T/CTJ4CJZszHsvHSw
ZCfocYR4x8bv5zdorxWFtpA0aWvlozU8MMtd+dVp76OgP5wqz7HSCwcJoUUA
EueqMZPwndHCxc5xbBzj+dHzaGvvd3eWuBL8buDvIXaevPr77uGdjXW3Zqdp
GWhmAWuHib/7KxzkzUcP75tQOdFECgkg5AqbNL16+cr4x5zO1L5bQy4DO+HJ
9AR2BJ8MO8L7XeRAUJlIqlPRRbxknl+uA1PZpy6mcgXdSIy9ISlVJVkUQb0g
fHp2yB0JHwm5Z3ND7tlNhdz3rhxy17l/9CH3Bq1MyH3vfYTcjxqb+wkr/dvG
SgfbzTdDE2BhHpiBjF4IGO1pX7pFcjkc96uye1YWU6yQc+wjNf5TT0gRqXyM
RlSSbVlU1aP72/elGadyspLNSu5yOsxCKBJyyKN7G8QhNvWbf6GDYojT0Yco
7lMJrwDByJBwYtvS60/F++7zVzSv3ee7kn5j7kF8N5Untb2830dbkm4mG+td
INoxNbU2BPPJqOvG0SSAAA8sGTvV/W/IWX9z3ECpzG1moLARKXRm5gUJDf+9
ryChGyjx7tbfJMoXI5ILwCSipcXMxGzY0CEaI4OME43OiIdSakRNjTnp/MrF
F/2ycVZBXuUWVuJBWQj1SWc+/K4Pb8Ju6WNUTsU3BSbDFN3QQE0sqVnVRTGg
Ey4djq1QlGhmOXuLwz0OFNjWm2tJtm9f7rVBanufQGrLgdT2GiA1Fm9UEzDc
5xa2zKlaKoHN+EzrF05B9TkfY/NwyyFoFdV64TUgPQ4yCGczFHNryBN0I99+
8ID6lIMtXjjV88Bi5gbU3mRhJvjqX75o/vjb1h+Lr8OEf3TG6FEDxqxypA5s
XsG8Nb5MTqRuH9ARDU9vtmbrCYZlamPy9euThArc1TQiR6dy3ibQXFgKjLFz
dDKRCnv4maC1sqbzgEL23pMdQHRay2cmFqj9Mv+hIylCOQKKvneRUuZXAXZq
s7v+qLuxFWCnIkaQl13x2czsCjx1QGsg6CJKwoLAmL3FgDEfQTrFd+f50E0g
qNPyLJOiRFxu0nUWY0f6ruMlk/IdNiAj5ROHlxqgw4saOMAPEUpYBGkiEr4D
XF8zUbAyUouzyyKKsNAj0ADXE4cctSkcQnJ1uWNdV/RMVVXRz/WW9teoMaQA
W+h7eVQmweRx6GwgfdLz4VACpb5W5JkJqYll47/mXDogaLIBeUntbZAlwxRm
yNGr+J3Zek8Qh6UJ9nCHv8DhyYuBenJIHZM4RoW/q0BaqRnkDiJT4XSTtF8W
FeKqyHvpArau0kWUQfzzYVyEMihpjRlG8Ehu0kUKJEAOEAfjJM3Lim5u0BlK
w+m2qqy1PQNlD1ayiz7pPpFgNB3WOQoQGlDvuZPp8E1QuhUDIdkF+Vl4myvH
lqSLocLqze6X/XKyR5EVk7zBSjUnw7yCjSKAmY7TKD9NA4+m9RTm4DhhOQyz
z/BZjDrhmwqnNmhqPro4vgSl/RHwJFfRXWnUJDFH1jlFUSTiLjqnscZsjdi5
qOKNp3bA3DhFCvC0JXzRlUK5BRefX3OA4iTk9DG/Rv2aobb9jChejrbSToh4
1iIWMMYYGzw2Haamrpi7X3lljCSu0r0IOQXxZ6bqpj2u+eLFnyYVOpJOsDFs
qKnFNJiWyqbubD25Zz2huL8YGySB+60ncCmEo053qmTsuE1cJpuyVwK/ttHb
SlbhGKNaVa4hiVCFmJbpGbkl+JHNRJ/ABw72/vHN/sHeE51bSECcnnnVG90C
YazFV4z9Q9QhTU+/60RYlx4SRdys0aKYzS0PsxkAz90S8J9wm/7Qv1fc5mJN
u3/tna4+9e3+1Lf7U9/uZdf1qW938JPfbd/uGRjuLcVwmyY/QRegmRhu1PiS
U7CM0M7KJqpjLmRodaLqGztaK77TQi1ztVprmj0KBO+ijdtFZcuFg9vn5iHC
RcsSpeu451d3RqdoZY05OxiH+dgwaXXJxAs6tOPOyQlonQ3G6l2ipvaNwssj
tbLfR0Hy5euRuwTpBBuulbdhewYZGHNjk3TK9ID5/asQM4yZ01Q8zCsbIZpk
JUWrtdGQZ1S1xx22xAtndvzJtA0XrrGqUT4YDLNwGTQJMU1zG78hxuT4CoUk
Fi476iWGU1Y7Mx0e5dYUaB+wRUdAzjMcII5D+bOeFx6Ee45CMUGFBNhrdDS5
8XMwJYdDgdmJi0N8MqFEqYgr8a3WeZQZWG7Yd0dCD7axjZFT4eZonfWyf/56
DF8c5H2wvTmORFUaLmOTTBO004ZePMQDlgV4yHzAmuDQQMIF6+Y8F+y1l9zd
2FWEifGmWZfmPNjb/FJM7Hw0UUhja8xyUxCpVIIOULShyMYBZpWFCgrd0rqx
DlUzeDULhDOjahdRrKc0bSuuYLwdsSHQX/Hvqd2zsJJcY1OC5m5XLNqgjls8
L2HjgJkB3W8PzHrnufEq163t7aAtIY7e6YsC04PYv10WZ9PmyBrmqKIkZH8t
ebqL8UmBwd20PMnx/UvjSaXRMUBQ+mGzToJ8R/7rd++qrP8ag3evgQu76Vkt
V8Z+2D7My/QRl4p3L2CwXwLuSjZ7G0QTgNryeD5wxwS7xitkA20lcPWdwA2U
jVsHzGSrXec7kH1aYqkHDeFISR2Ev9leCrbVgjhlnZoapvWcUzxd8xqYzNMa
5C6OTRcDxiA+XAbTL5WQRKEQGLl8m1cNnQD4/CLTsIanFOKZdJxAjZpnB14G
j8ptT3Nck6iWiZtE3EeRJnxuInzUmY/+z+jx2VzflB2jKiyCWp9/jhLVGlgo
2PMUxX+oC/otxUKJnh7ET6FtqucRkI/NkOjXQSjmjdinXS2LT5TP+Xjq6hdh
7MtNucHfqyHmbikPjU0LhbUiQYxfMg2N1rTvrOndnVFapa+dZRroaJMvZkW5
2oNaOmn6tn9lguZflKrYuMyw3bDD9o2U8LvrGNgFDd864D1/wDnGKI21vB06
21YUbbrdLiyvZxdGLb3AWDRGwYgkI4m3VIOuoAsSmMUPF2m+A0w1BYXey3PQ
c9XIc2AN5KatSqQvFead1BKoCwL2lxMt4sXSubLqvUUB8fyRWoxoscJZqzSZ
+4OfBQESIAAdFsZEooiOIhMPhY3DwnmlU1Etm2Ss7J7fqQhOk76qJ1w+gBvE
4PtOhMHGtoyKbZ3CqnJ1Tnc4SU+VRsQZMims84R2Kf3CVlDWNEp9jJFElCFq
vTA2tOsYiJHOCDbD8bmfHNKAT7vBSbx/d18e7ukbu1++PKAvoFIJVCaGysYX
eVmMCQLRYQIqr4FRxFnDfmoYZowRLmCIycUkAUQ65ycC0rLr6qcT2nVVfBlw
xHwTkpJAxZanyCYrKvNuz8NSyHedNmIHnuckdHYQK7iVhWYBju41pOqTTCFs
8MCkgMMqSgHNg2B250Uh7KEZgk7JuEIn4giK9vZC8K4T9Q/borkfJnK+ySfN
9bUvriHjU1KFGObgOmfcMo0Nu+wYjO+iVNunUWLSM/xwa67n3bEunXFo2anW
uaBHx3/7rlMl+KPz6bBiB9Rn46PPKJ7W4nZK21ntda5Ce5WOc4EyoVsh5p/j
UzrX/9ab7xqK+IPczbyKP2jhJfySHqDmJH8RD5Bi1Oa6iQ4+EjeR8Zy0ba+j
ekruBSiDgZTnhuaIO0T0zjC7yIaOmGdsu4MYQ7PEKCKOdNbMlpVhcXaWDVbw
ql5RBNOKO1lPpuNwlTOjWTVc5rlwXLAe6ovtLhs8rm9Q1zIndYHkBL5ajH8n
5owJ0UBKdD7UdH77NeioRcneu3SYNdwujKEcs55STGtKqKDMQDF7uGBCOhYf
DFoxJU2D57VNDpenxXQ8eBzpncm1OThQby4aHIodHI4VNMN/k5rJCD8CUUk1
ZD1B5mjwiPpbkyhVJatULnQgGegiM1f4MyueCsy3i/OqNT8c1NuaQxHF/YqS
qU0CDY/hSiuX4vKqVeLxWqS6Dwv5lZS6tF7EMAf2BtDDV+35ULnED3RE3YCG
e4nmr7ZL2vRDhGws2+SWdaKSIRTnl6qDGuxfUn88cvwgHHYdc0w4twVbfODr
YgWl2g35+03PwLUqT+FTjjFsAuNiDB98tMbwHYvg1h1wYWWqO92+tXOKV6/f
DvPbmPckNFZFDGfIqXS316w6l+m4moD0HPcviZFQ2OPAk2k5KYj9qebMcAFB
yo4dYps+CCtMwYTDXPlzpLjwENPojItPwbGincTcXYHTzdZBa9GZInHFXTul
bNA8Z6sKNllrunL6F79AFbU5vPzxOnZEKWh4HL0QUJmBjB+7rDEn2oNeUqzl
ctVoT9v7LdGee7CbjB0FNfOQ393Dd+mOOIG7vMFzemmYIt1W/pUZR2Q6JqUt
dFmj1qR5f03KsCI2YCyDttnGhP78bCo1eEgJgPvuDNTzRDzNvJBNClt9BYf+
bXoZiTKZJMkUC1dw5MhM3ZMpPN4W0QOVjW/GBoAtSkSVU+IXe81bWg0pnUb5
2XmN7RgGHD8RN/npdGg+b00Y3jczLdkzyTtmjfkAP9olAXkcHjr1vQlHAceX
xaSkrCS6unll20ql5CgfZSD1DLU0GOOgWMzljTHRAcpItwjQgv2pqRsOHZoQ
ieC5+cwWBXmJ89FIR5ENoEP24uURVm5AFwoa704Foy9lrc1FzItwvbtTxjoB
LRwYcwsaXbGJT1yr+dU28fE8wB+wic9BtIlPObeJT3lTTXzchS9ZUUjn/rFX
FGrSSpNqD95zEx+zu3xgmzVmzAO/lSY+DXa6Rn2Eg5tv4jO7q00xMXepPCTX
mV/+QLs38J3p3vDiRZVAlYv9wIuXKrW5t2/Y3CC8P4wv1s9XazjqrtVhx/Oz
uQ5uW/3Tn2gDHhdejELmHD0lgy65FOIT4l+FJSbau/lwYqF7O+NWRJ19XBiF
do8mMzM+EZtbiEVuagaNHEkOzdRCAYKP2/vQeHTaAz0tsZ2IoGiUmAmlham7
M7OLkZSTnNm8aAa7LrmaBuMELYD8Tka23FZalullorVOOfDDqqJXuGc+uhPM
bMRduHVmFkJ4qqOaMwHyOhvRMaGURErwpZ9VTRnuRx3iZYD8MGRttN0/qXQx
8Y2plJaN7sNc0Kz1kQNnI3e48P+FrhW3KCm1uW+6zoFQJ/k4LS8x+N/QtLDS
Co2Q04nyttcqV1J9wYQcohWO2ssCGYHv1IewCtWSJcD01N1w+6TN7jp2UDpa
33y89eDx1qPe5ta9998+yZPH89sfzZKYCzRPWqJXk2EgqzYmcyqyLPL7Xq+3
Iv/6IdahKeQJr/iakbe/lg5NXxdvsUBDZ9ahid8dy8mlOT2W4vA3N4YeKyrj
N+h9D62WfHO7UThYTbx3dxpef11Yw4+ZLxr2Slb7pz04mTKAOkxW1rQQJ1V8
lpqJ/RAzo3AtFvLmOldXJpd0mnujL2ESCO7HXO7dxS73vFJQix+JuQnjvEH7
GzXQ2ZtuVAuamA5JIqBpgndok6S+jL07sOoR6IhjP4Dk3zvzr5LmFTLjBok1
4LMXyMyiVouI6JVJPiaFgo71Qo3zFrmTYuI4Rq6riuTWCuHzohRgp7sxiGbl
mvhrbkxjER/bHN9aKEBsqR05MHMClebMBbVT48I5HZBHurU4l1/Zy3HI2iyH
bw2skoM4N+KZUpou555qHN/34ZxKVnH9a0v6qPQtcVV1rj0Jw5bLz8R5dZbn
rLGXeiKFwv/3Z+/Bf7Yfw6+GYVbkvczYdMJGVIzNqZ92XhbTs3NlOSoS5oPs
ndh6A5ZvfRE9LTHXBD44RZWc/BXX7uSrm7xVUhZIv2KSArgqnbRsDMo0ybx9
jKNdVgxF1pTZqi5M/QTj6N0qV7sjjcL8bq4xpbtEWkpreikFVgl+nVK+yGg0
HfuB0SrrYwzSthcwTjRfBcUKaPEeB2qyLdzhWGsC+jVK2xw7SpHaj/kwFTwo
MPOZJIwxLljny4kmRamLNqulyn2okp9IYQE4TTVDcLIfMVyc1/FKV14lUsGc
BpY+6EMUJu3D28kqlxdl5tCrwKHSWlAf3ZWh4s0K+ylLro+BEPpBinZzwAmJ
NV+bYVC5YqsBVujCPZYN5r53QxWu//BxlLj+w5VqXC+ex65GSwDZbJqM0wm+
t4pRd1unGmi6xqe1jemSVfc8yu9dtl0zfrD2MXJbmK2JBI2xsnV9oehYIsfd
3i3hddRMMOb5tpjLMU62MiGvhD3opGmqfH0VbldQLrDgWT6WS1nLrE60CrJ7
npeqveqdQNuYJWLTC1f1mq5H9ymsCyrNk+hkCL7UuD7jt/isG7wJirC3n9vO
aF4pwqD65157ObJmB7RGLVBp6TwLY+aX/WiUAYRLRzKweCZR9d7RboiSDoH0
CjdVnGfW3nRP2LCopB9cY1ZGoSGEJRbl1hGbTEVRkgYHOXlhWkrbqcYoRVBN
kb/WMo7K9U6jo1jsq1kEh9NiB4MS4wR4TddTEQkwabH3EzKvhwh3VfGo3nn8
LvbFOqH6Nmwf4fotrNMrc90oV7SNvdqySY5rs7U7TObN3oGBR8OvBsMbK5Vo
qbAi6I8VGnjFaU+1AvxFsh0OKz5ulT+9osyIjL4iCIdtl4iTCXQlV2KCFE7P
spGEPeuiXwwdv5Bh7pb2gp8qPf7KKz1ur92AaP01FX1cxZp6a1IF72rjyNYu
3JB7uaJ934sk+KEx8lIl6b53RMgP3UXpY/rxVZPfWkm6bS1Jx2tcohKdWsrv
qxSdc7V+iFJ0XJ5+fgWA1mpxizfkvtlm5Kab8w10JG8W4XO6Z6lDYg8mIybn
+hb2czUU9vK9O2qeeZRxvQ3dt1jQnaySrzHW1Ak9Qqn37qxabX4GL771Nr1C
Ta5ou6Urp/bt2QpQWmhA8y5JkVC7JDAetThLs2RekpKK7oJguHaS44jx1xWk
F16nMNPe76Ew0waC201tYDOmNYaddk02T02zI9vz9vD5hXP2PEjSr7t1PK67
LZtuZtqcc10sPbMZtZykwK4IpoW73rqF+GFFYp37Un1Ne3jz4Ngvry5sdgh3
hYq2czOSdZZVgWcl+5GLf9hbFj+pV/YgZt9UV7FumhPocCGGtj7k2oOSOxO4
AiqqEkQU57eYDQNiBZOYCP4aJ5Wfmu/VUFhlPmm2kV6Le4YWSyRzVD8K3q46
P2imjPkJmh8oY8w7B5M3/epBd5SPsuMrZWU5y/s1ZWa1cJWhKCz3KplYHjU+
gmys5hI/fG5WsmBilpOX9YHSsiIM4CVpWe327bVadIlPLdKiy8oNEMrZxJQO
Zgm8aF+uuOjLTcK81/QnAkxva9TF95ZU8KzR7Uu+ZNG98crM+D72Y51vzzO5
dL2CWe1qqtH825t1zRLkRkn2UvtT6/Q1nzZOcVO9QCtLz83IMydbE/L22hLy
XALONuqOIierkXS3dxCi990aUvOhQnNupHd3YnDBObdYDCTk9csAYT087Vrr
Rxp/tW9iR00lNuOiHO1g8eJAO2eSMbAdDlV1Ca+4+3wXNDeSc6/+vm/pt0oq
3oPmRe2ELjVweW/zwSbCI+0NFRq6fg+ovGaspJcF0GJAaiAyGq3UIifaWdfE
tY0wwZZ69i3LKclL7m0Fv3d02AqYgHNTXvdTIpLhgxlRSz/CipreWDwxBp/g
xu9R9TNPRNq6HRUJ3Br4e3rLtWHHUrHOtixFQxhtkpBs7vHHN6RPX8PKlZF9
Mq1WuF87cFlQw7iAhgHvulEqDCwbILRWJfTaq/oIiADwYA53YzqJC5VZdCta
/DJsRUrpHZQiDa9Me/G91hZ4zDVVEIucHbf7WKJ24f5KeMgJ4ZoQnio3InFs
CZyGcEVlB5QKYnRnJOrN2xY1u+e1FSP/YJW7HpomX1w7avYp6vRbiDrdW2sR
6L+zSBKN00936X7v/tYiLvc04hJKLLTQcizUs0QQBiRzecMxGKdf5u5O19Mr
muDEWeGYr/auEI2RkIAoLsezQyVXD3Q0etvgZI2vbqGpzQKxs2/J0d9a6Biq
pTL2L+1ECojlm1KrYB/q/NYEt8MuAeHajrdfObe6IceesCguYPVwzRQt4mJU
WHX3NGoN8A1vjFNDPaMoR8oGthpS4V6siqBB06lBflWU2l+6IdvJOZmO4eQw
mKt8O4iiaLKco7fK26FizeBb+nABSlJcI0Ewe36C7bdRpDB0Oms82IrPQ1To
lkGFkk56E9lXQvnAINSygCsLof1X4sbgg95miGOdXS4F6NaslqJMNKtiCiqO
+tyNZKeEVFmydoos5GMvnRIn2YdIAjkKt1zFJyy7+zBRKDOZB/1ixMxYABXq
LqMCXaCrxy4hftV9ECOGXBheMNPTctiNf0tKj3DGpWbhy6YfJ6OMimu0H9Yt
zqoIJ0MrMMVeeK0B8WeVA0bM3dUmriPp1GU+2t4oTAPLq6t9x/Cj8x0360B3
214NzaI5+kxYKEJjYtL4ffPeIzjbZMOrMKHi71ZJePLkmZrp9zfQgqdwHrZR
H8YlDL7xGn7jpnH2B4Ph7VvyRPKFPbZw+n68d5Kewck7ucQ77G7y/eYf+e9t
50w/oCeMpog3jLfwVXl8bc75OabvG2ZsTzk32yMvYKOAZvq4x78mJ+jR1v11
TaJFnSSn02PA8//Tu7f+KLnY8gu5lByexsoPqGJRBASdVm+L6AsEv32ydyBX
lpRhJJpUJEg6jePvva2yw8+D4Dn72RJu7yfr5FqlS7sw7UPXmt5Bp1U9ZUJH
ktcamivFxeFx9CRxcI6jvueUB04K3kT6UhWa6RZzT2pM48SpX+H4/jDFqD6f
VloPFH8/CgA48+Hv/j27ZCEN4dzGJakHRK682YnF0V/OurVaU4n1IC2YSXyF
8g6KDYrqTtfOPvo4ko/ec+5Rg3bvKwnJ52624ubxNRzO2L43GBw2AFPgiabM
yMDz/ffG8RLtVV6PcabwvDqZX+0dLFLbpFHoo63CR2PX2qp8ONqXp1ZYjaMQ
WdWemh7o+cvlLoU5PU49aPHAmnIgP3vdZkIvDlWdV1Sqf6br8zJDV0JR4wuT
iZd4YVJ+LQg3FMvUpg5fMkqLZsXLyTf/ND71vlehoFnpijxJ5CNGB5KbhvZH
1xn/+Ap4IBo6ggnAD5Xeh4RLHseN7ZkD+YlzB4iJHuMmNzClDK2QGnYMM+kO
8qpv2Mot7eoxjT51Se7DySRtDzZTF4iC8hBssT/jrOOKYTrDZmI59QWd1PkI
bM9Gl0H06OH4J1Y2aiM9gtX2L60sUk+Q6fwb41M9Mf6Vz/86r+tJZTPdIlGW
+16UxaQ2UTqP18Ih2IYbSVD6FGv51cda7q+1CtqPMdpCIRE4mz08h4vEVmaN
01Ux/dn82ErLOLyxF4cE27vGfBqPfKxRm/satVF2WShGExPSjUyXuKDSeAo6
yt3EFvn1vDhKdbFoN8srFBOK5b+EIGbHrpzZV+FGk2HmtTH4vr3y1g83kD7z
TbOgiddDUvaOOcDt/mfzCzzkXcMoK0rV6jd6ybcWkEKC3w4yS/G8b13c2mLv
DEEf0hATtBIBs2SYPDye4i7BmGVQvoOtMwYf4jW92UOdmC9hAja6kJgZFRVi
zftaC8b4Nzt8dQuo4CapzGhbJ6Ac/ciSfeZMnRfD+GZEv2yLLY7VauBRDQlW
lDCuko9NB5+ViSUht/NaMY4LDRtpQRcHlbNAuEnK9uVjryb+ZJiKETHIsaEV
KXmOftjE8ER7eTbK78HObBv+dIDWYRZNo6aWKbe6FAczvm4ByofYWW7C5GZi
CLHdU6gwemRmDLRjTQBQxwl8Osy8msTajds752aP527xrGOyakN2c2rm7EQq
AojiboCz1LPL38T8lFFv1ppSrC8ucxT6+13R0LPVI/SDTl4ailW/v5wzuCD6
Cjdinmo2QJ3hhxG2PoLFpJG+F5YpHkQbQMhX6MpQS97lvIQVmGRVNJm19tD8
BU8qbMDFjVzFEMoNFD289D+CKP6+15vOy/8wiX5aadVTTNw8ENMbt8zSyt5Q
vqnkiUyf0pGZDPJBIk3biIjKQg0mcG1aToSUvMXoXRuzjUG/KD3elm9oaSvU
ZxqCh17SkAKOQtGvgae6NWpJvPLG9yvIEoiSpj7QghFtYPU5ylkUsH4Vha5Z
Tn4J9S3qiQhg774bSMg2B/Leekbf3WkcxrAubvu5vh5Og/nGA2k0+HQZIXVt
OIQs8L3CIRZEQwS0byIjdNdm95LRp24EFxGSZ0lcRGRJHztGIk4+9cErPd4j
QsLd/k8oid8DSiJ28K2MbiIm3Oeui5o41ruEPVGTAvtELA6laJXNGsq8wEuL
GpbYNu+J/DCRnjWqv4vIRrWwykBBhovFcAXnrXM7FNvezm9IgS15RlxplIY/
3jhO/oU2wDB/k0UML260Qwt358eKZjHMUu36fAymBGxeLqkamL/NNgvN9fg0
HVb+r53U1WPW9HwCnE9heV1M5iAVUtRzWpc4TPDuN2qxo7idAG/CgnPWV/AO
rmvM5iydb9ElnP1Y+98k9pBLmRjCVGZNB4NcGkS5nzL5HZTtIUuiOeJKYeAy
5dzRGWzQMSJMXQXXXOTtW04xfc+yAoW8zkHeSlvDgBSiVDtRF7hcQeWC0zrN
q3PR5N9kY72jM9Luq0CZg/e5KoaqLbZ6XYimfVsWIAnUzyggl/A+rZymQLI3
6mGJL6ChOojQPZ5cVF2YGnYRPxaEhytBFDjxWjh3QaRHTDS1HIOW71GiM2sr
wemI186XwwuX94YoCjQo/BsPIf+ISYOReNMswPEhqFmTDXor7vNKSqcSv0M0
HG3X7V127+7m1t3N9c3teH37GbT1wCkxCh7Kc/MBK0uQh6RQSJ+nJivf1dUb
jptrEWrjLvzn0YP15M+SqkxGEP4UqLe1OPU4JX4e7Z4y87y3Ti7qI43aBb/v
QsPtrdyalYYD8vG1UavgX7BrDd3xoedXahg035BSOFJDwbqqo91zrFMGdSct
+aD13RsxmLCHji9gbwZk5J3zD4Q08lewDNJIdvhKaCPXrdjKMg7USDnOwI0+
OrRRmEHuoo7cJPIvs9OizCR6afzt8aT3mBeOXtTKDtG07coPdHaSyot7Oj0J
YuXTeCvGIPxNgLZHqXLkP/Wd/R5ohIpcT0llI/GfOqXzQRAi8DW/yDoBvkXE
AeUHn+CCxphccxrQxyTVa+NLDiLZYVZN2xQsI4UArhNEzcSVgsA9T80gT4fM
HnmcFT8iME8EyvNgLpRnJod8gvQEQ/9eIT0P1uZKs98+tGeJtOmWcRqPfKyQ
nAcmkbpNqF8To6MikVXJaBURLR4rRkMqrWNiUFdfaMGvr4PugTt5MXhPDLY+
J+X4PZWnjSFk2N4K5+hFiDlNiJCrTmiyASWwdLY4gGjhmtWZ4fN9pZrnH2hO
KN7hppEIU4V5u0tmyx5x424yCKoGMoEiycOhn58bzkGAA1RkEwNcwp7BY2vz
QsRuiVjZr45jEEUrBP7SlWA1wPz+ysA6vVgaxWA9XJXFVC3LlDyhreRpUZ7k
A7AfaDaUGOYUfGjb/TnTsoZjAHlng3wWwyxYANYTF79QpVqvHizMy4ENKIin
moXiEQ43ABUXuoE/wJqoqYVsoCAO8CegamtI1ntMfQ6IBeLv3xXnYiLeKj0y
ldR3BFY+H6NreSxNvFTYNc9UG6igtZhBFE6wQOmDZdAD0etmEQRBWw2NKIhg
4RoVtjzohypSEdsn3xYPi/W5tjhXoXytE3f69vgmZ3BaFzDG4/k1zT4xH60Z
+XCuGSmIUk4PErE2a72fLMtg6N+rZflwbe7Z/K1blku1QGkZh/Y3szkjv/mk
kYd+cxXLNtdNHlH84dIS7ZpmZ7ZgUsmC9Wavl0fy/nqqOEXUbzIrZNKAP/N2
el17RZVqpKNbo1YtCU9l76ke4BbN/eAo7Ee97eVw2NJ1SOGa2VwYdvb7g2EH
h+l6cGyP4DOxxzPPcNRUWPDUL2MuXKXEdjiNmZZCuN4mK4LS3YY2nsu9vyTY
OHYWrw03zj4euLFP/CbaOHMwGu1oY33qRtDGIXWWRBs3V/Sxg43j1NMwvJLj
PYKNI0zwCXP8e8AcRzbeCur3DDlmJ8y1EcdtyhKvt6I9IvpI2+m5wEZUhJyC
avSerapG0YczuHjH0WwM6mvaS0bpG9yMBnpzhBCxuigv2f/SDmIl9/LNQFkF
cxpK1RvEnGYNzKnLQlfEnEZYsxVyGv3c+4WchurRVaGnmYeoFEhoFC05i6Ye
XjJCuQ8HNQ3p0i+mQ85MdKIny5LlRQEnp+6fk/Xm2GuL06mJKo1Q6QOBSuPa
3ydQadNv3gCUhqT7bQJKlYN/vYBSfwXLAEqzKwJKfYeACdPO8gb5sUrdt1Ze
c5Co2E+lUfhuf6z3C903TbQDjZzPRLR+RAX0AtXoyNjKTut2Cn64zdptwtr8
6np9EHI895MCdMJGJg35NdzSrdLhSwATIbRI3ncTiMShEj11anfYKHYHjtlZ
Ph57lfna0uh7Eg5duGnPTTfriQbvHi1czi1CLeNHYjpHu4VfO5THbsaAbT6F
934L4b1HawvJDO066YqNjzHsFxkHI3ir3JlnbZHAW9s4tIVLVH1bPFz3Z8s8
7kS7EidceBx6vsz+rU22U9i7ujsszpYcR+YTGwXjn+95v/Qv30sYwHz/h6uN
s8x83n9Y9FFYS+8w9GovFB99iqDQWZ2MIjX2Gv7zxkXR7GPkBkoXb2QkX3wt
+dlzw6aoL8TioY20ovmFiT4ggDdtzC/suK6RObLi83qmTtesj/Jk2gYaVWtm
lA8Gw0afdwHpmtTwmdhhswTSEbi1Jxou47NK87e1cJbIAw9QlLAfWSr/HHOk
oMu1AYL6cZHUw0b9uwWyOrngVh8UlYEUGp6Zwu6TZhZidzaoUWeorht2TpVk
PMxB/hr2Nxv0C0Eij2K0IPbMnIarRt6GLaZJq+LqaVyPoZWXH0aCb/FAa1vN
omiMdX6Bo2Z41a0sPU9wLBJgbRQB+O1AMH3fmlUDTWxhDjLHFAVkBoWtHrO4
MJcgzd0vwU5sx5NU1uUQQ+t1FWu4S+RQ40gh1ZHe3ezXdPH8jbj9srXWuV/Y
eTGMduclKCi8/yZb3vh8Xx1jo0YoxW1mW6H+vnxwI/STvflbsDc31tfaBM3v
0Z7M3oc9OX+c92/nbKz7+M8r2jntt41j4My5MG7evnGD4Fe3bhqu6vl4vw9p
3YwbE7yOeRML+C9u4AS1i1n9dO/PoJtHdKazzKDmXrx3eyjQMJayhTJjC9lm
Z3kE5OhoQ146Z2O5qD+ximMoicqEowzZaMefbt+Cb+W1M7hYKV705G3alkMp
uTeN0I6oCKXU2XDm0xp2mWEKNjjuCsZgi9GHBlzT8Nte327N3vxobMB9n99b
ttCf5wDsjIFwGWrwpjoIIwG8HCqJu2o5bcJVV1wjzjkmPWsS2ahbo4/0RfEm
c8f22QVR3zaqSlujUBQ7Eg1i4ONVNc0GftEUMhPGId/SEhSZPB+h7jOuFnVm
QYEH5ZQSbwm7bsuqz8YeN4C1M1DHM0C4CxvE0btmEYO4gVD67RjE/6CS2WIb
yDLf3eGa2KqcWHNGK1hy58loDW7MNcDv2lrcqIikVndBXL5NOJQMeGtnYQEg
zjc8nRIPVMXwImNpU3XmcrJ0N9CV12l5BmqBXFyDKSERPescj5ibx1uMcoFE
ZAPBchtVSc9ejGgilmAFXlZjs7PlR5tgubHhmce8gTigYVnTq0J21K+y/imb
Mvlk/qL5u7EWOyEfo+l7s7V5aif18RoZlN3J4gZzyziNRz5aE3pDTWhfml7T
cG40grhmt61/TxawgXE89feU+dkZ9mKo5ya81R/KAL6BTMcgt02R4VXrpah0
tSC2+ZV+6nZ0W5gRGTQaKTLWBbR3dTq+jPbaucxkQthO800+CebhleChjtbn
RVFlfv4khs/yekZFISeJT1Mu8TmfPquTufwxaSZEftxZjg5YdxJ1roR1V36X
lYVCuRUp5DM3J5i/eD95AS/yocY9MN+Uc/4LFeX5FVUPOrI7vojL4iZdFW0G
cus98u5O48LQJcg7LIcjN8/NJKvaOKYcL75rJwb+fxNpqI074JdLQw12opmH
qvsxOw9Vn7qRPNRXe7Yj4ZI5qJHlfOxJqHHSKXRfWeX9d7zxWOBTFurvIQs1
tvNWAremoXrPXzcddfHUU5wWnJJ/v4afSq4VOVP6g8EQDxZPu5bJfeEcbptK
N0Vt3Z5cN7aD+YbZj85vWdMbdOnFGitbOG+yCYu3MPzyv5x/SmYc/p/74+Tu
F8mK8cytRH9tfGwrrnxwl21KxiLR0F3Vui2rHjXWGoamLwdMnyA9SrZuJ3vt
sAkoX5l0laFGJ3gg39JsJJOoSjmtuVng0XlLo6Fc3MmGf9xU4DAs7KYFA7O7
XYXgG18jaolvWrsww6eq/m8cu77RVSBmoMGsMduK/91tnDREt6soXkAW1NSo
rerUJMQh9o49gaQBsvcwHWZlre2HDJwvjDDKDjQz90BqDKb9uus9H/gaZTf+
597mOl8HL6THk9cGuK2RBIYFa3VR08BDkkY2NBudgobYkDvQSLlqSNQ3Hsuw
AIqlmD2ZM8jVd5ukkHMgH3FCoHyARhGclUn3xKfv0pMiUdsrlNzX2OTW1hYI
OY94pAFybfusJBAdjakeZn/T5qxbuoXqfpCYB0ujdT9gImMTUpbcrWSUXpLz
4Dy9gKVdgoVVFmO04Xhijmee5mcIHJCPo+J5icA5h4OtIDvmuCHjBFn1paqO
rINGgGd5xTcZrBtEBJCZGx6go34ck/sdpwU0bwwM8LYAHQXEhoQo6BasNBvX
SN1jG7hR5ohMqMzO0tIgGX2oY6VROrLCFJXvFGRFQjG0hGSYf+Dg7sFWXuyz
oQq0x0bkX2Vu5uV0GMyM6xd4GoxdiAQ/bRCeG4qNRtOxuoXowLN1OclA6K2Z
KrS+OVMZKz53rBnkNd4ao981d0dNWbNsx4DtquCpLF7c5QM2RRYpZhC7Gq3j
Qe8VvIAdNlmwTIGnH6xsrm9udtcfdjc2j9Y3H289eLz1qLe5de//SLJvqGrA
cONBUXaZNbYfbGysuFn+qll4KsPPcbUA1yR6QeuaJdl3hhpwrcz6uEF77cz6
jyOx/kp59aEDbF6CfYOCMC3001MR9vNIejyfCdXVf70Z6/4KlslYr6+Ysd4K
iWjfDOujb2Sf69H45bLGWwrCtbni391p+NyVKnO99++/IJxz2wlxgYVhJFGk
pVV5pfC8QNYZN52vk9yEzy509v+CPjt/m5ouO93f2S47feqXdtk1V/Oxe+zi
lFPRpYzyHj12EQb45LD7PTjsIhtvxXnTXxd5/IO76yo121iinYs+Q9XdTKm4
Spw1bc2wF2t6ba7T9hp3SxUb9byLYkgzKY1zMe5atKW6sJG1/PCvWqwr8RyN
kVpcyR+T//qvtDzJUUG57I7SCcuhmP5fOW7Bz3y3YGT3V91VrM0RNQ2nIOvw
0vzQeOCiYaJVrfoHv3SNEo7ekZC37gNp0c3dvBuV+4RHHHeg6/2L1ALsJNwz
KA/bZLs48sZ3wkbZZnoEom9o51jwSqoECvNes0xg+InrlQnMcgkNZ2I5TU5s
rUC7n9F6NFGPouurdkzlTlLIV/AbxQ1+w/GMCMzTZzHHJaEyjL1c6WDgtlRv
ZSjXnwYTYG/Hsec2P3anVNFSC/WLm5uwuTpP3YxRvhOYxOwRsUKWy1xa33ha
Ziq5SI5iYbN403hB2xqEtLBMXUy6w+wiG9rDxjNRwxo5rgBZI9DsY2M+nAsA
mTp6uj6kHkokB1qAV5e2axdbRAuuN+tuWWP2rm9N/dFcAl2BGtmp/P/kvXlz
40iSJ/r/mM134GaZvclsk9QAKSpTNdvzVqQIHhIhEUeAxOxaPpCABBAAiSRA
8ejp777uceAilZnVVbPb+7asZ6pEgoE4/Pj5Ee5FC1F8i3C+5XnD5api/+mT
o/kyxdTOeAKxq1WwKtzn9Bd0Xnfnjw5p98zR5QcG9PQeLf+nLZep0R8dRcnh
+f5p/IOs+sctJ97dhdqZF6u+zN/3/6vz59q5Ir+4pMpRJAjeLcrQt/x2ECDx
lMce6uTDFHxlN2mW5eGU6a9yh68oJJrLntzJxXfqxM+VP3k23PBdO/qPKFB7
wiI/ZI8fFmWdV4qy/h0vOFeu9fzuCijJFV/x+XuQ8sc1WwtNeIoP/vE0Ib9h
cyrzWOGJSrnhvHQDYDv+O14JwlkV0ZP/ZXJKTL0mqEozyydMieV9EfWfPtsT
9s7h3g/Z+0zU6z+PwT9U9vRDndfxglM13P33FF2uvgPMww/d33ZkP+bv4vpW
lb+Lz/9+/v5dkaPzbtX/myNHP1mRub5x/xsrMsPCfmM95nr45Xw5ZuHY+j83
uFVdwW8JbiW/I7h1Uvv4BzEtjgTXm3fleClXwClf1sdfn82QeO+aB7Pd/yHC
ZnQPG4/r11ecN0hcvOO+4WkNf/0lWr9+hYPIipJZJ2UHMMkLmYQ6XN7YTaGS
u2fF6rDhNecgKi6XruZrnsMBkxLpOTQ1pNCk4uZweQC0D/hFAKaOYd8bCwcj
UA7owkMapOWWC6K0BZzjIc28WOT1o/bV0A0dYzHY0DuIqeMEI74beKt3E8BA
THp2K8khTgbDJXjypZu6IrZX4+wLfsO2KPT1J3qc68U6agBSdVPfCT2WHlfa
GZhwwkCNKBjHb0+klRu77JG7IhCJ0+MIjflrSotmhyhWyI9QOHNwCQGl8exQ
zdq5OPtdXYBRe2dH/Z28um65mLUYic0d4CcmUOaMSN13KfVXJvjhAiyqzfmQ
KNdmz0SrlQWozYduC7sywwu4OZUkJOpFpZRW3uPyvfozA2KM74dvfT6rvfjp
ee73HimPzG8rd+/e/8EPZtu9a1QaLv/g8Vphwh+us1q24We35Tc+frJFWE7D
pTYVcz5ieXaqaQM6KGNqtkZGKUJgOO5yS4FkwQHUCkrRuYqaNzvQgm/4Hurl
dIMXmrmYVfA267RY8BXoiGzLRCZlRcFOQLhOvSJ8yfmNc0hFdm3E23wWb2S1
gUChbNbOAsvi8aw2+rnI/7vrlTIBaU4B7mEgfs6Td9FejILQi3LZWcAW1mCI
ERrjPbyEFlUWwsxVtLHpBTl21w7Z2A2c19U65anLxUJLii/zN+vtK71KyfiN
R9qoR9yLY9rckNbap6YiRXh5OQW6y1EwB7LAFtcUzvF5iwMse5wBlZSP+zTB
U6QsBk5DNZ4/lR3Z+D3QRpxQ/SFGzzClkhIMrwMp0hsLxzmLtjL1cUXfL/om
5UhdjMZmmp8kqCT4hs6CpotS5QPm0YHKz9eNMOXge1SyuX7L1uuI7b8+7I25
ZmOkl78aK9t4rLZIHLDSUjBLRnFA4B5GhCK6MTg0XmvzsPJGIXojWil2Ea23
LsVEyJzBfMtKZbwFsK0s2MDXUtK5bFkXzP64vblpAmbdJi6VP3hyfI5wzEFC
QwfbIOMlNdGSxHXdY1E6uqBiY0qxNngJquwyTwKZeSkrXsln5AevwGLw1tXi
cEFZ1atoV6HAWYlHnjpDk9PZXCjfMZ8elttBdbuOtjyyARN7Wwcuox6xu+j0
C7gXsOAFGrehlAsAcBO8fUUm5ZEbhaGN0tFWTD3uDF1wVJbfaK3iMJZ4zwLL
JzdO8y4X7HvUmXkFndyCcfBZnslySSPZLNZ2dfoyJ9o5h5S/k9pH3EiH6Z7Y
M+JF1EHALu06VZhSZKH+IFWQXtF2KGPSCm0Cf1O/OpvkWaxwUi/oNK+fIwER
veAC68eZ/r+n7tnJDZG8pss71xtqY/PJXjU6PFeLJ91TOqNp5JW1AWih2M9i
WCxgV9fxB3lFJ0RIcw6ikTnB/I23URagNVY7G+aADFZvWLSHTqlq/TDQzZvS
CMfkRZ6w6Bf6Jr8pIF57IczuEqPmLyp048mEcBUvpQdygk1Zrj8N3KFuKcoi
NZ5K4uPE8FknjE9pZTYYf5tFhR3nbBZ+gOcKMhaEW6mPHohVPD/mryv5ZHON
VsDhdyoFcrVfekOlBDocKIbiY6qCgZhKfSzwOyAmEK6Z8NpU89lPLZWc7Arb
pMGNLgx54sWe1UvE6x+LtsSrl+B1uykqJxTeM3SLrFfRe/bBRWO+5UkDpwXO
qkWNrs7uO9N0lwU8oFk6WBsLCbKy3eVJBqgeG+62uKclzqmcK1W/ud2g24Ai
GOQkei2rVw1Ykeg9WkM49WSdMd9AA9Rt5fUUT7heEq0PAjzEQO6v+Y0BZlNd
MdF+d0IXeV/vsh+fd/f+vtC8KPNasdPna74BzEqzkjF+VSZrWvmqfvEi9bhq
qdRYBgnsr12R6MQ1GEh9mAV1aWwwvbSyQVcF1k8r9j1P3yjmwWgLxWE8D/Ka
igw45hyRHxIDY1ohCf7usRlPnnsD6h0G6XNa4gwMu1rZQBerp1aKauaHKQqo
5Cl9JW68EwUGKAISRCQcJpwM4mBPk4+zyuzyKm0ASygY9N/rA8c3BQE2Wjfo
OHA2iK8Y/RZDVOV8yXPDEpJLNbYLO6PMNDGrIPmnRkUxbKpHVJhrcBiX0Zql
Vp/IEpD3K1iIGyxKS37HMcFdtmiAY8VaztuFsExLJhyyKyNep7T3O4c7ttgh
8FMWy+euDmwrRmEO0+ed849wsF1WyGfqoa98VMnUVGL10AsVQl1cXNHkiKAq
6hMHxv1N8p7bh0LWMXDH4bPY1r9DnTB/Uy5B0bTiY7qiaC56+M5pSi47Vt4r
lzMsDJqTcX3L2FkJrhC0IfDpG5XU5zT5V/4o94l2aJlPtn5nvn5DjxUPI1CI
wJI99syOL2VdrVcnpM4MCe6EYBRTonU6geHl/dUGiA3kKobFnFUQO5f5Q5eL
Ci4BdVeMxNuYvTdG7KTOyc/ROy/gz/BOvTvFPQGoJkQ+3N9bvorMuadupNBx
GAJJC3T1S4NPsyizJQ7sQGsL4a+ov4b7xJiUoURfPt0DU48Rltn5wEa0cMQH
OqKpDdMPBaQqJpWLVGox/UfjGflB915jVsbvPxr31EtOBdxp/TP6Dxb5E9dW
sSbgZe2fkw/O/FN+htYVFMtlfjN4h86qf6NXkZaeEiK5PI9/NwZDHWzp/8Fq
E+5Y6tnCWVBb9T8aT3PqfOefo89vUfb5nRsjS96q7xB3R7jPjTsCL0XRmvNj
eN8dI+9IkQ9xOkZamUaxH7kxthai5f39SGEnzo1R34fSWKdjeOfnUe+q8b0x
viVpdQyW5lutCVCnseoYfxH/sMAZZUbqr/y63QQicHaWC/J8qvRfWOEFxoP3
qo73K2gQRHViL815z6f3spHc0LFQjzHzn6zwJ8zp8KfyML/+6U8NWjSP39z8
r/PNv+EzRl7LVoQ3Pqaf8OFskYhn7lLqaKBjDHt6v/FfAy99/W+Bl71crTev
/yaew7JReI/mB4+VGBkfRW3TqaAUzYvxHrjOPGJY75PW6oQHtsy8eq4sIWd6
HC0/HSE0n3nB1hO5WXh2eFVgFsWL+LUp/rOqPK4XbaCXf1kx2AI6ou65yl3d
+UgOXs6ivWDFnYqSmwiH4K6i96ydsxr3jA8+t2sivDlfKlYcOQevVEFbgIFz
tWoZjfCrmrR5Sx6kpFy5zovl8h1AfxGLIWa0zO93ocf3q+OeFI9jTjZe4Zrf
tuZF7U7fI4oACicWn5HIbsaRy1Hh4vbcmdhYKWuButiECVytlIcFqUXCApY2
BBmb1rO6REXol/fjHiweemLqpel6EVSLWeDPmIO4cN00Sm0Kfm6UH9ZFYwPn
EV10nuKk3zwnogZNicxyt+S5tVcCV3k7V+EuyIMCJxsCFIMxHQy2Yq7ESeBG
7GNh/aBXnvp4F06SsZrSJQ8vOojF9PA4YQZcNlzSi1ibN2YMO2g3iZBCuUCh
w1oHXGCkFkwNlLJg/dMXilWIF+CeUBp7CSiplrdju4qwCuZ2ReeKX7No8Gq9
OsQYCcCJpt7WFX9T2ttRpwmW0AzYLzgt/yy+P2NfwWRxViJrIYmQgrHO4zlq
TbfsLgcLiGFfKGpdAv837teR93Y5c9booMdmrZvGR6CmD+sE9zWlez9nJtSH
T3/963qFpg7rwlHYoJXKqrVoeT3ZslaGg8+HewqZAC1yTc95g9NT96wIJ4gc
QcHr6H53aPdZamrnc6p7qXn6YVCve4Hskp4NxXOfKxxatfg5evdp0R16ZwmY
oVADzMjli0or1m4gSloEotJJKebD0rfTH4jlH1AMN+42Ho9CUaLZBZgXkKIx
ugovuGO7cl8GEwuBp4KI/tpz3rzU3axxmbnnOB9k5dGcIWH8g07fHLDfCZ1/
D03J7/wif5qOS9um885kLBFph8ktoXeg1LRi2vCyyWk2bXy8057/rN434HzX
L7CRn/jcQbDS6kfYTOeSGumCmIuUBPz4SpCeIcKSjHHZKIwQmB5H01bkNMZe
lRzyUXjEnYV2yk9UB6yEcOdC8ZUrsdRe0Kj68/nmVFKLdIEQTiATYIf3EVMO
LH4/ZMqHEpgJncUlsERlYREw+YOAExNA6OiBJ6sVcKpM4wL1sTd8TLapTx0H
F3RsZ8N0Fwvl46C/H4Fxw+DeWwVsXgLWf7xf658ad5R+UYBymVcc06W7Zkd1
H6SbbZJrdr6ouec7bwFz76IU1zkvUE7HrlEsQeiMD7E0CK0MhM6uPAGs47Hk
rmBVOuDSL/j9uZRZz1zeU2mKooXGhSKAeMFpzOiicM3B+ce0U0+hlmABl4KZ
z+WnpPUZOZQTDnQw+gPx3rrHp3z/kuth4UTFbAQgriJ6I/KfeYeg8rZy1++L
E56ps0Kla7SGx3604+iFo5clRNpiHugRJeFK/82OkvodsQ4c9xHwbReJXS/b
VFTSYg/ySwDAKRjSf1phN6wseK3c98mdevUy31EgWnVwdQvTr72YBT9pqjIC
oSyIMME28vDGKzrd0dLF1IHUZ2W1UPdiRwR2Yac+gUr+HW4HPuDtkwDNBVqC
zMnTHVHickd0fhGyHJDDN/uohFccTlTc3rWNZW1XGjwfKPGYOGJAgiePMPyw
ySsX864yTk2isCyd9wKNomS4kxUdPEuFkVN2F4kWE3Bz0FJq+5ayMUr9uorU
j413mTIMdsEug3BYBGh04XEgkgpDS3x5mn3AtQq+eEf1E8ofmn+TRRw2VGO5
vzTGQbplc8jb0gmwhb41EEonMhoZ6mwGI1X1pRUXPsrykC9FpvDdBTtBllFC
TVpGRVVViWiX/aBzxeEdD3+zGuRevS9r4Q5kl3zYSYjLddy0PXk2DxjmBfg5
aWMBhz3y06HsYQZa/v/yOtz5vgMKoElnmI2LPqb3wof1IP/Z2Z/OqLAiS6q1
UAJFDvBJyOxnsiNKMLs07ulVv6vGRway0wYmBtLsp3IAC86ep/wX+Vgow8ag
LBCwvrNcfuUlFfjyjLVUVI9nOWhMZtRzZdmNgLq0K6rr5Z9dVLfpB7k0HEme
bhplKOCky3mQB/PylFmq15m6OVkxtYG2K+ZKrOegM3/le4CuyFCX5bP1J04Y
vL66AqJ8hRldOq+slFMXZc6GQca4kA4nP+eK9A0MkR8WLBPhbNfdsEuHsCks
nY3qCzjS7DKiOa0Vz7NIO6SvwDN14AxYqmm5ftR5d9arg96Ys5R2db6M15lJ
F0kwuXik55lsAgGdG5vtKjdUz0VbQVRxFqIeHHGZZX0COVHJFho2Opzv+PzO
1lamd8atlFvKfDOekbZYbj91mdUqcu2cw6nmFS4z/qp3I4q1KcJviiPk1m9C
G4VXEVYCer/u6nqnmRozv+Yep9Dyrau89Enjw4mG/MAT9FJelphWp+Fr52Ll
BPQ5jc36dVsY5jidiCY6s644HM9cFT3tONece30+b5fuMgNGuCV0g5DNy9bo
j9JUeCiY+iHRqsD+Fzxll9m+wVm5lha30nC314IvGyzDrRKIFp63kgY6d7Hs
3I03pPAze3B1koFefSFFOrkq+AnyonPgK0Vnc34x5H0o16BNWuYAsKsCx9mU
WoyUL+ueZcV/KW1kkR+Z28cOJ/uiF0+xyLx5Ch4exQxiBUWWb2lilPWQ02H4
4srJlvrIMImaJeWgd2SbMco6T3x5JkSh76lUjZ3VJcAr+OySddwV1hITdiUn
87bUwOXctp5onXtVv9Tv2VHEGFZDlMcCr7XMqbJCwidZKJ15Oqmby8kr6+XM
eNaCKxpcCSOdtlBhdWrneAFWxCi+A44o59feJ+5w8u0Tow9FHiiG+HBDxRf6
do73Qq8qF+uAUxYZL0EYpMxLlr7vIy1jK7Yw7hwttxqq7wIXbSndfQZxxJzu
+W4WnZrKyzw3i4tG0c4wrXmu6GIEXnvZsmwuIHoQZNRdzZOZhFCvPiHK+nrC
01xy05Y8avl1tLL2rEwjz5Y5dcMxlJqnjLGkR+S7F4/xLcaXSvfiqmGd4tW0
2juwyRbTjuF3G16nmDXGLY+By/SEAOQ+NjH/UgMu3mL7Mb89iRmq8PXZgRza
UPeiiK3g/dVSUWSmwXnk6K20LTlDzu7UfmMMpxt577kWRTSDZ5O4dQRdvyH5
XzB/BuPKIvvmZfGldXMzDzDfhtewo9C66rvBXFbuFC7yjultWOqBL/2oNv5y
l17yKeWXQN9Dx+/f5wS0XC/89vGdDfnEvKR5mIfuYcz2kLOMGP17W5HXGcf5
wuxjFsNklZd5wybaDFQY6rAZTpJumWOVSuDRk95rlC190RuKXjs/XewPdu6O
dgP3GWNz2YKLu6SF+DyXzY3xDTewBZymTX+LDrtsY7iop/tDU/1o9W46SJ4u
kOZl5//61/+X7v1nbKn6IX/gA/MbxQw2p8yzTHHwP/8TujbZvSmWMlqgWeRX
eh/i3AyAJ+6eh7QPs7A6RKiCphKzNMGEp1ykIqTYUHtG90lV+ExvmtcyLw+o
9fTyN1+ka4luqCLukLMqDRQtwIxet0BMET18l3F3qQ4d+jzo7bXi7GB+5SKW
lE7pe66lz9+j00rg4G6BWWMorWl+Hc2W9Lg/CJMVWcTeWYUcd27QW4PCN/B2
9C5T9SZpZ4PWQ++q0XU2ibeil/O7vrOJAq/x4GxfYCMbH3v03pPe694PNT7U
p4vGGEcBO3b5/6y3cfSvmzDawh7yh/Go7p+6xpOmV36xWDeMAJNXxYPDJ6My
6lMawrS6oGpXYD26F42Bt3I3QQgzXS9C39mmzKM6XL2uGxZ8l6cMBOhlTLaZ
IKXFll/wYvSzoOmb7MIM8MULRv5K4RA2AT4CXtbNlQoc2wgJDDZrvT0GMKX7
dRysYEoGBmJxvzZIuLBTOlgVAK82bIqjbYQfPmwC75VWetFRqtAIFZwPNVJ6
abgGnb0Mc+OJZsV7iZiPCBQGMZ0PmlGbNegYVinljjuR0+rAYqz8gqLue3in
zHHLw3I/ulfeLDqpMaBDP4AteFi/ORnINJw611toWq67Rf9LIZDpeDFL+WQu
2PwGI59+6fmT/R2sMSNpGzQeAzrUAMCrBx+NAofeSKdzzsfPU3tprRQG5Sg0
iIobYyLjnIYhCjO//FJGjV0AK8APQYnJLi8vQVEtwjLb8QoMiGJ5ZYn87n/q
iWITzMIAIUBvj5VrIbACqp9v8dKfjvezvEYHgyiRk/qNzZYnG1BVLmo9vJNy
+BFQ/afGJdva59w1eMaNa9QTfEpVMYTOT/MLaU5psPOujtWPCll/4FpbhPdT
mmjxwkQnGiNB+mujefu5BbufsZw7Vg3jL9V/MNun92vjX/77v2DE22MZnDzz
Ays1NHAjG7Uf/YUmUtVKSn/wDqPEnmrx49R+cy11bU+H2SIme9ciR7cr7xax
dOPGt/Ks6UeLYHgDz/uL1n//539So8VKS+bN6+ApGPl2k2zZ47fXjiUn7iAM
Hrujoz0dJTNrl81XJJvF5DBcroPxfe8wPk5kdQnDLK6f9GE6jNtv81iN8Gun
6T95ZrYzptp61lSTmaEcrMFCUru3TdOQbofBLpi1RtFsqkV2V36bBzDM8Ga4
HO7Gy0k2vp9l46Vmju/DG3jTDXy2VQ2zaQX4GmVlW23pcdo5zFt2YvdJyP7b
T+YWDBNJni4fbMtNFi3tMIO9mDXJwe3C8KE80s2h5ITq/YREiS0pLd0cdWwp
GkyIb6vHUTCLEnWCw9wOJpK612RVVe+j7sSU7w1TI16P3EzIqGtLbWsSKm+G
qW7GBtHmkX0zIwt53h8fjanfIz1lPIlhGPeJhKPOTJK7Wtje2T0XhtBuJmZb
DAHrGqVmvF+O5VHPJFrHNu3WeBCpWo+04ZVLV4Jh2t80Q1NJL/G11WLnhXJP
m8IjfbVlxImi9mRTjxVVu9eutWnSMcPRyoCNnVi36qSZ7lWibMkKhkl8ciTp
7KiqMAtzYu7FLJYwi76x6oSaTK41SesQiQ9hyjBsR3fj0VRbdYJ5D4dJreUo
9WJtqMf+0glHDvxc1aRRe2G6hmFM2hPLVTRJvc//nrqK3uvtdFPpTmKYUQjD
pG+OsWjP5dFGPxIbSGtiH31iysPrxxY5ji1tQqzI0XuyNG9mhj1QHmH28Txy
j5N4slmQ0ViVcYt1O7Yj0szaQMHBXEpi3dqn7nS0dIyh7Dbba8e8tSaS+82e
Jl3VlLvjntsZExLqkaIROBrTxGHuJy0V6EAhWjhqwYK6dtM9TGJYSDjSZpI2
1HrKM/wNJ+prTz2gm6Wv4AlOpKEECzQmBMmvR6LhDk5A0abuRO1F4awpW/NY
mRnLznJu2m1D8XWkE3NKluN4n84i1wK2bY+tKJwciWxFMIxvTCR/q8d7Bx65
sXv+g9NXk7HRcaze9c6IQ9mLlSlZaQ7syY2huA/j3j5TrX0Is3yEWa4WSMX+
xglvJyZRenAiT7D7vUlodxxzdD3va11HSfbjHmmqZjIeR50DkVTJI+Om09Ns
clTaE+nLm4lUrMizVedelWRfN7WVbvkdQ1EfZrE7nsfuehbDXhw74Ux2+4TY
b49Nd2As795Ayd3oIJnN5u7g3MMw2rVO/M1YL3OxmtjNNgqBEISBj8LDnkYP
rhzN5gM1GIf2RreSN4cks3kvW2pIxR2bWNLeIG5/cT9ytFh7ni2VnUXUmRkn
AYnWkhXaIWmSzAw11epr32aR1hnDNtv9LNCkRCZ4Ur7uhHLmDYg9N5TpzOhc
WwrJnH6mjxV7R+6HuMWW00qM+dR3iGQ/LGR3A9wdzs1kZ8qao9O92czvVZO0
Og92z9xrVu9ohm3faXUsICWdhO0NfAsnkDyTkPTHRLPMMFFJrMEQ/pMejzbq
FGWxPV4qx5npPmg9eUbizPJCmEVzvwbOJk/TjgELAdIjqRppGzOyVecIEnGV
WDAESAcycnAYN5kdR+k8HmXashNavSSdtaIRCPrjohkt9V7SBBlkObE2gFeM
nPg2sSI/1ZtqpkU+gddNZrg3ZEciW7F7bRXY0J6Z5Jo0R30rcpHcHg1DeSBE
S/XIt7QoAQraO05zeDBAJgEBPBkWiE0cRp3C3vgk3s9scyHDQjJYCJkryZMN
fE6IO533ZWJK0VG32k8LZX1QLT/UFbttRepIDaONi3oqsklvBAtJLDvcT+2B
apNluDOWChn3ZBgORFO8H8GJ6JNovCeRCyxsxzBL4LPJ3jSUYKzAMLZlEfLk
KmQ4CTPgK+1gSnCk0q1lhLJDFFueWeEe5Et/rmhAeu3UkLW1pyhTfaU9OdJs
Z+Mw470WDfdmuLfH90TXreu93be1cS8NXqbSh9/auAG197VqjYOnKA0MMxpN
gswE1dOZmeoKpMoIJMxKN92O1W9bzoptqyl35hIKLGVgSpL0BEoMNBEK6utJ
K+noQv6TyJxYWd8MZZ2ABAauAumkaDoIeBjG62WoD7ZmU05dst4ZK3s5D5Vr
bZV0SFiS//1st+iPMps/T0LXAuGvGOFIhWEmkjLTFG3k9eSeNXWftF5vb4Sa
7fXa/Tm80YtTGTZyA99/A+5RnRCYV9aIStxvk0hVzamKhzyRFVuD/5kmTFRK
ukBgCgnlrmFSYa1Mmm7LIGo2HxBnPOjsZrEcav3hUV+5KiywpcEBooyhQ9iK
27yFx2FWYbtHjNGTFy9kYBJQpzZwIPwPZCLMVNabylS12sbc2svWsgMUo2Uw
zLyfOEB0v02xHUGb9SPfjFUA3AlCI80kM/foHohFfHelDfRQkfV7becctZF6
P2rOYPiFbO5B9o+1nnpv9DPLGWiELIf7+dT2dUltwjDG9PVg6ZlhWK721Ldj
V9odxq31kfQiaxKBYlO0LoCC+4VU1WKa5XYnS3+qK4s9DOP0xwdtqoGSt0Gl
jN9XIf0vMpygBkN2n4SunLqwaXIXhpmZSl+LlLETtm/M7q3x2MwAdyaa20xW
qmnK9spuzeQoYHvX2xNLe4DtBqSjvNG9k1wkP5OQ/gQObyLJHZW/RRu4yiS4
bZkm6bhSNLSBUnWAInZLWTvN5NlUFA0U3MoI/Y7WGyE7Tqyo6xpqC1TueCEl
qnlPjoZx1xr3XjfEtA+e2SZq7D564f4ZTqbvkZFuNPf7hekDAoxWVk/FA9fD
vemBdHXDyWHRv31UY+1ajXd7gCLtOdG2swjopW8/zPuK5JLXgxnfPmuGFEz1
XeAOoh1qLpS/Oc6Wv7mt8QY4FtAtVXipfUAMSozx0mwOV9KH8+1YPqyyu9fu
577xeT+8ny0Gnel65i2/bIfm8MbSmsO3y8+G3HW0y9HN5V6/kVCxBpYuX769
LNrmtj1UbV12D5Z9/UYGN1tn/bzwtL26+PL64TsdXbhBxswjbo5xa4ze1vbE
DaSq5XZZt9wu0Qb6Ts2+qvXnbOZrarsXaf0npqBWMgWLx9CCv9PvhAmIVUHR
48OHo00nqZn/sl6L+ic8EMFiQIs1FpK6auBt5KpvNxPDFYOIPIjLujeZ2al5
Xw8QGx69Ks+LW9Wvg1wITwdLDxPGeuHZqzzd+PiBzfLDJ/ZDmsy842neL+vN
ztm4RZ2P/C7E901iYfCeLIXuc2EqV6dSesfPGslFkhgLULGUKmoi8zhjiusX
eTpFEcMPNDFBhP1q8/yu+a1x8/tzu/V/ofkdhfYU7OGuDIavKsMscFiwttyW
Ft92AJd1XFM6GvqXttHNDMewQVOrz6DczXmXWmOTlb9eHCV863bebC9tHeRV
nK2NVfS4ACsMLJAlmB/7ReS3wIJ+c6Pe7TO+etU5ONbt4ZHiWIHnm/MWWTp9
Ah+PosWURIvWBGcUeWbSAnWYLgAxalUQ2l8oEZkbiKpVANy7cZT07d5tMJ6C
WQzGhxOPLGupIeaf2pasI1S2+4D5e72DFS52AIwAsEe+1vK/MRy7gSHQcvA1
Sb4hffkahkgBMthOGO5mxGwvFBUwv6LOlfXeConq9ScHY6U9E2W0Jquk76KJ
mSjOYOQTMOzNZht+5iqLgTsl8eQIaPrBJfbWjKjlIZuyu3MBsI9Nolv9/ZNt
7RVP0bJFH4d50ozI5LDfJMsRWh7PM9A6C2t4mPd9dW75oM9sa4y4NcK9iBzD
SmVXdsFscCOCFoc2ssCQNWTlBtZqAaBrGTIMARMHZK0CNgIj0l6bANgXPbB/
lCSZEdwIdbroJeH4Xtlz+8eIRv35fQeNFwOgIhgvyo0VtnWNmAeiuDszRpQG
2KWXzGCI1IMhxqYbzAedmRFpXQOHAfyzJLCdbX8GJwbYPXN78lQz17JlJU/z
pjoAMyEAZZ2SadIH0JeCFbakx2G1UzAplDmqsM4U3jK1iatrimpaYeKD/fNI
DMXSQ3mgrUamI490EsvXsBffJqGrjs22ZTazh5kpD7xeRAjazckbaaayGgFO
VJJA742egfCXKlH7YI6b89g3DLA8EI6aK1Ubm7ZlELDSiG3paNwQe2rgFu/7
RFY3BvpUFBuW7kpaU0vB6jLnYQJWmO2YcpR5feVp3t9P4Tj6DhnuxoZtabH/
Bs85Gs5mtBmTUUDk0QQmLumykjotVwWqM2bTxBqDOYmG3pzYfWIlDg4PEGjq
hICZlkp/EYFtSKnYItPODXDQXu0rm/HANxzZtsCsepjIbkpglnCoo1loAvkB
g8CeaZFtzCxZc6X2TItUS0N/C1ig8Da3qfT1FbHHsCCYBSA5kjoD1Zz3kiHp
w+Ks0Qy2F7YbjL7IBnsJZ6HqGjAMQZ/Cfu3CQshqZMxh72ZgpQJQt2ZHAkOQ
9uyorg3Z3lhLxYLvWzPTdtTI3hpREjlH8mxFBGAktcZgkpFmtn0D4DiY3lO3
5/pgzOGhhjCLjb4aEQeEmhHaI1cmGzghVZt2ZLA/rmekt6dbbKvEIIYZkgcw
sQdjMwN8m8imJacOgYWAfTxedR7BKAbgTjZo2JGmv7fgRHU5smDLDeeIW2wY
Jnkbk3CPe6RFI0LQUo9mB2A7mMXoGf79REAembAALTSBh+w1kGQKswNOB6CP
syEO7MV0PE0isMgPsBeOo9gDsESBQezHWXP/BHuRLhQUFolOQJjMZRsYwzdA
3qjwHOwVcrhlgwCER2az0O3DVyZQLwyx3gHp7XQy2niKGwGFS5YFIq1JUm2l
EbD2v8Hsd8Ca3zSk4oyA4JRIU74mkrwFOxhIK5mC+Bq5wJboihg3feB4ew1W
UAaEYJCevTGsxHIjECwGscboGSMtK/T78DOwmzVzrpBr07iD3U8UPWxbMIsD
GFjXGsggMP+QukEmARsTYhrhrQGm+JQ6kfaO2ezt5mDFw8E/wmzePJIM4cCR
QQbEQgYhyCDEae7BEiYOWAjTsZWZY5IcgI4eTMT7I7LoqdP5tPNmxnvOI2Bn
WFmLnYgNFO0GGnAyCtYxKEK3l+lA3TYstG/Io6k3wGFA3kTXIIMfgMBTWJTv
SMnesvbWDOVK6Ppa2E7M5d0eTsxyFNd3jopkm/6TFY8GZuQ7dIu1Z5Doe6s/
AsNlBCdCh7ye4yymrg/S0JxF/tpRtOnY0J5AcPZnJpEcZbhTQR6RaHRvIYfb
IbxtaCskIC312gJO12S3b60ImZug1a29PY5sxYozAzi9D7PQDXl2BKVEYMED
OLW+i3uTDFQ4vHHswxG4Ryq64STgER1mBSYqUG3o6kBDBwKCE0iTzI8d22lq
hmmM+lpTHTro323rJIrapL+3XLDTx1NVm8f7qWGakisnFmgIFWYFImu/I02y
AXlDQAFLNj6vjL4BYQSORLUmyJMOCMm+EcGbQPDCLNYTGRYCdDG29pIFfORY
o6m5sqfkqDyaMKQaKZkLegyIYkgY3cwsbeO2IkezfDKzsv44isBmz57mvfZx
tlRDEspb+57YhIwMYMcn0lSGQJpk3N/fmDLsJdrQI2A7/wlsekAWJirUb7qh
BNqq0zNAGIAe6uvxLQisTnNG7J1ljRS3n6mk5TuWBRioCTp9SukGNAAsRO3C
LCxrBTBAQpAC2rIJIisGqddXW7YJWy4nCoATHUTWGh2Wpkz684GizyndzEic
yqDqQVi4PnD6cbZKulYf0NVgZCGb2j3bWkQEqNvXx2ZyTWT32pRB/E9VxD++
idhP1RcK+YZWNAwxBR55Aixzoy07DrH8KXD+A+xJ6ijAcyaIb/y8qQ200Ed6
ewIG2o2pLN5Qn6RsS/BR6PSk4yQiNgCSN4vYNuzVxu3TE2kD7aznzd5Bj+yl
3tdAe9pAR+aBCgp3OTfx0EG8StIOLOop6inYiwcL1NNCsX0vsmFI7WkizwBt
uRac4BRVoUe0FEjVYjp8AEiiS5o9eMQHHkkM0IbWIlZBJroBCddHEmn9uTzZ
A1Az4Die8URnRAN8A1IRXm+husMPQXBGCeihHqx9BNvpbm3FVQEGNIkxBB6z
NyDTNZBBM3OpgHwB8KK4y/E9OQI4eaDkhyjq1rYGHcuw9jBltW+jEpl2roEB
4JDRc4pRipFjWxlWvMlACcH2JntQQhIufEJDLyBv2kcTwMlCDo8L2M751N8T
o2O5kpwuejYe6noW2Q86sbOx0TGAxyRD9rsoXJxBQjymw4EuHhagw4FicSEw
AxsOdbK3Vipsd+KbEZyKTDXIFPeCxKBoJHmz6PmgCv0Nkzeok0GJgCojyRiQ
BMjmMWyn6sMsjFnod0FGf9OXmk0k0gbEmgIGApR1i+LeJ/eKbqGgkIlq3lqg
1m3gEd3AWa20SIv3QNGu6lG6cEMAvTZwtgMKeTuJOlMYAunGAQbpO4iLIx2w
HlgIWncBqsyIgE2N6JsZS20V6MLu3/qA9QakCbKnPwJ0CBbLVDvOmrLmxXA8
Cog0ZE2ASLL25AJpAQ/BLHzfpHRhZ/B3CEhsD9TtAOgFogBtKieP6NRH/Qqk
qRJkawpor42YwEKAzYD0Zoayc4GPEQaMQ4BIxF+jb9xaAW4msBdLJSRIR7AB
sLAHxIrU2xyBvNAICE7LMHEvkt4EFSoZHTByAbyUzlvAorF2sE33YUGFRYR6
agfQ+zi2xnsTF+WjDZCaceZYgMoBiJnjkLSI7IczgAGgVAjQ0QPwGDAIAVIF
9B7BQgxlOe7j3/6UheyeQGU9AfBI7ZY7cqZ/T5wAZ5PqUhvYENgSQwUhDgma
YKUa8569Q5FlhjKckAqnaT/PQEFbJIHtHfljJZERzTsob5TU7sEhI8GDFIRT
Qwikzc0IkAbRzVDaWSEAkB5YNqbZJpEK2I8gIHkmsM0TqQ3aFRe11MzEnBmd
HZhgA1A0COhB7dsI3I5m6FuoTeGtDs4CtCeK8z7aEAhWjCkgDaqnANj7Oujs
LZBSSCLSNoj/BKIrezIAOh+JD1D6AZDGNzNSg3k4uqdovjlKTeQ5CdUlinQA
F2Rj33fCMehyMBR1OKGZGQPPrDpTGyDgAs3Z/h5EWDIARQx4R0sBJujApgaQ
5oNObU0APcDVsQZ4xQTWAyS61CytBYCyKQPybIO1ENGFIEzwQtkyp0AkIa5C
63twHJSnbk2QHwfDBGoFoxigMwC3ZDMDYLIA40cFeKQZ2g2A3D4gjVQPXaCT
hAE3GUh15WpjwsSWlYF8AaUSagjcNqaV7pHgLSCXOVFu0Bgymujajix45ZMp
kQewbKZgpgDbJkMK9v0d6Y8yM7ylJ0LjRzIqZFUHSAS2p23BXmXmNHoGKUkI
3YtkujgqsLUJAanZnvep8jWmNOT0SI0bnHgEhxyCgYsmFxg/OqBxgEOmYSHD
gIVzBGNISma2qfUtMJ50elIU8qDprvfVAQgDkB+go4Fu8ET0qWs4IP1wLwBS
AuAfocU3A9J0TAmpG4wnKkQ3BN8GOBdw3FRDEAviXItBL0W2jnRhW7I6JtHG
HoBgjWyJ9DNQ0KPhZKWQuQIij8Wv1QhxsAvCIXmzwgVYcWrfWI10sBlMM7Rh
OyPQnipYKkQxm8kDwAaCSgmkJmhXhJ+4N8oYrDTgEYUAIBors4MWRhhrmwJk
SlUlSgEaAKiVW4DKUEwNADIBwL9Gm0K3lKRP96ajo81ghVp33CRkPEiCcasz
NSMXo6NTD0x3suoAWgf0hUgjJDCLEcAHW/EibeOA+UY5HOkGeESS9jpCZROY
wZLXIMJ2VgzGkWQPieKngMP63MrzDQAjoDtM0B4BCFabKl8J9gJQ1hIQONJB
LANmw+gIEKNB4FBd1PE3dstnDGLJ1iIEMRN1QC0CmyqoGmGYHpwIwEdKJ0Dw
sNWIg4E6j2ac7hEygQUDk5PAtiQtz9KGICyssTQyYCMe3Ca3w8Hm7tk+SLU3
D/hJA20JB2+hTke6QDad9wFKA8nB2zcUfpP1AUz7LpgdA5A3sBG4N2i6Ozps
J4BYNJpbYEc/oGVihqpJgRwwiI4iKxr5QDM3yCBEVoBBwLKx9mAx42zA+ic3
kzAL5v3bG9SWTk8GBQtvJyBfrP0DmLEg8ogPBgEcdQbUPUo1dMaYbSBdU/Ko
AY32EdgkcmsGmwkL6uN2w0+7BrXy1kcdgdnqDtEqGRN7o041R5v66cxQ18AL
U4r9bnWwUKYmWLggb7bOvQY8Yr8BkHuD7RsgiAUrfQfbLKlI+KuRNQ/bG1ho
HzTvDr0HmkFBG2wXIInRzL4HWgB4aEQuCAuyhX0Bqy4BsyMD1Tc+6CEG8Ecb
kMUhijMAbQROmNC9cVM4zaM96KDNcASZzD1sWQDbCVBae5jDrIxVR7XQ4oWF
egRsCvOWx/bRQ0dtTWuVTEGHPxhxli7AdMfYPhiLIJcXkitFiQvachzvt7NY
7o/72kyP91RbzuK2PonWO8OgKH1MekfbBDOduFMjBMTZBwQqu9bCvB2C+LKI
lR4ASYw8os6sqfY0Jso1mmSmtAcTbTSmHO6bRpx0NUsBbKep5rF3sGKUL/YM
VJwBnO+jh81pEsvuK086cL4paQ7In+kTcAIcj2Hj3piyE94OZs0oJste+zQV
6708rOHN2DC3qrE4WjRdq5bEcZ3nWVmHkaqbUffJSu4nkuKMYxeDed2J5Y40
El1bg3GL0CwVPKnVwipnqSSdBwm4fOoqwAl5tBpwTUTM9R5Bi0uSmbFKVNPo
tCYt19ZobF8zTb83ISNzBqQ278k64Jy+zQPeWk/rPBFCc2eI6VterCjjKWoM
+wjDKK7kr2c0z0p1wqgF8LkzNmVTnyZPmkJuSNNfGqH8jUxd0E8gTERceZpM
HQyUE+XoSiqPKyO+GYBafwAbytSIqk5CZTABI1kz1ZUrJabV3/dmy+HelYHk
DEB0EWmhf4eFrve9ydR/sqm8ATqItkCljtbcr2fN9sbrJd8mVlZKHvPJGKTH
ON7tgD27ABsPTq8djKNRCjjoYY57sz7MB0kImA6GyPpzkC+q0VG1OKNv1XsZ
KJ3oxll27idAJ7qZ/w37qSw1RVlNqBvo2hnYW1Am93oM8rmVfLNChczMtuOS
u93YMgEa7MlM7rXN5WisW2nTDIdNN86WYFON9VbHsTDO8KVt9DNf7bn7RahY
FqD0cQssmtjvL6To+qnnmpPQ/2at7McxcWU1bG8BP6MDdkW3d9mZ0DwrZfgo
jTqmqXVs6XZkmMNrHmoeubJiG+bIn5j24KHpT8jR3Kvy+m3eUgE62uaiqUbm
/ex6jgY0mGLNRJ0sO/SE7J62MonbnQC2cQeJ5ISYCDMyjZbdIZgwFWd91VIG
ICwmgCg6pIdZEnhSAHOIgmTGotWYIUj6IIuXWk/5NjEzTCYDRZN9M+SOxmbd
Hk5MrauZSjKJR2uNBgh28/tRc2GpT+oKVNhS29qglFxFSS1LeTKC7Npeqit9
ZW7Gg87DPFI7j7IysqVouZgCso/9mYMnNdkvpNcWCISJa2Y70AZH3UpCbanp
3so/Tgx7r680xehNDuZgfDuM5NuXyR+QuBLf3mDiCpkqlcQVcuxExoCMEHiF
7ySuKOQ7iYvVrEVc33uJi4OkY5QSVybxnmXahZoGAieiuZO9WxMMMUxcIah5
rUQdS/KNHit999hpI+urwPrAGZiocjSmCQYY+oCxFS9UdJb/N4JVyPfOsYdQ
x7TaKFBAme+XMNS1pmgdoycWguxvPy36YEhN/bETKkcxhGHKDyD7aS4lZuOI
dEpzNJ0tVbC9lAFZRSPQaelM9i26EAuMUKZtUAy2J+HesfoZmIOMFjE5o8iU
gBOoZE7ATEYtI1Q7EzJpgqHQnEztPRms91ZEEtdsTx3F35lTdYPDkE5blZSh
DoLSlf1EX3YSzdxL6oo8mX1lOwHcCAufAnZ/fjx27rUe+aaDYDKt28A9+rbe
Ur6hdB/4DzqwoyZr357M7HneipYoAidEoyeogy2Jap5zyNl0Szyp8xmX9yDf
R3rz1gFB/W3coykjPXMF2kYedXTLtRcgiOyV8jYz1Uckvx5AHKQZMOccPXua
yMneVtQErEcZmMiYGO6z08v0haHaExjK67cncEpgFvpgpGgHs5fQA1fcNug6
xVz29ubAHxrN6824p+5MyU/GK2UFVuRsGEnpcKW1F5h3vCoCw87KPT40Eww5
YOD3sTvy5/0FxkUV8ziU1WB0+15eyNd4kT6139bSa3OjxJ03Y35ppk9W2AO2
V18m7Wk83z4MHgaS/bj0nMvPCMpkuRNEd2NXedJi4/qte7QeOvrgZqB/y5Kh
ttD1/f7z5CfyQvJMgJ9JDSmy6k+zQ7Sfzw4RDcl47geteZ2teeIJa+RUrQb5
G68HFJkFvMDvmdf8+C0/lw7ReDdnQawS8xbkW/nmf1Xewrm0hTNpCic5CkBV
f0eawskVAUxaMu7Vkb6014uBNgR20+ZS+3pmKcGT6U8nZ28JCGg6BGgK8HSJ
CX+ATk1AprOb8fJ1qx6H7JbAqpPMY5ZXPG/KvmNd164BjHaYbzchJLMlBEml
mwCLnW3uZb2bqaCHfss1ABQx528C/KZrAGiwFjcBfIScMogfQKnyN8MALRjy
awAmU2U1PSa0KRrzP6NQf6BNYZh3FOpvyo6EYbpGM2s6sjZ0DV+bK5OjFvoP
Y7BPdWOxIS0VBOkQ0AoML4HS6S1kt0UeASt9cyxyDbbIm9lUWcS38+BYo6Yt
+eYkyPqAgUwndqN5zx94BiDYVgds2bY6a6mGZynfzAhgVk/u6iZPMpy6CCBZ
nmGkTgiaJrNrMFU0+KrHjIbhzuyB7dG97U5Y9vxIK90c0PquRiTcmy7pg/4x
5RvT0o5a9/bb4yFbWd0vMIPRA/DV8FH2M1D7PCe/lpAfYkI+zqbjYMbjwNfG
h2xk9Nyu2Ysks/kqzZbR1Or7YPGQ9YKoEzV83cyC2/HkcBuTKOo5Ua85l9QR
7BMMMxivCIBcPyWr3tGz/K5q+KbVk8lslQyfuqCA+/6UTO3nuTLqjWVbWZha
OJOV1rMhvZO+/O+iSXcJ/J3BfhnDfv2oiv0ku+uE6oaF/H930rLXy6hL/Hcm
LU+WuFeYtIxXZ/AqzTPloUgbjXtyfy4j24YScLqCPAZE8QR/7wwTJKWs3QAO
AsmQocWA2EQzR2tYiEZC4JlIGAWM5wAWVWZhGsO2Z6nwyg7wo8rNQip/3KYr
kpD5T7RgLCUgl2zHjbWpEd+C/RqtiMH89pgH7ZmjsRX5G1d2EVIhOdpNNbcz
dHaJJf8bL7W4Uvt+YirG5GgHIOY6c4vsx8RuqXGkLaLR8UkZwjBgTC42ah9D
ZG7b7svTxXE0gG3tk5YbOKA1xnF7ZPVej0YLMKJsy0+D8cFc2QlQ85MD9KVL
SNVdvedLk1hLtBCM75UdqM3bax0O9QdXacrADoYpsJ2sILajN1B0Q5tY1uja
HahHXbk7wFDX0+6t5EXkzSS7N7Oltu3e7jjuabARbeR4t68+PVnyPVH8ycSK
FMC/I4Dabw+S/TyWRibopjF69fQo0eGAQ7WVPLtTdQvDLh7l5NFo4kkpenN0
BBGQEJ7+O7P2K1R3GhkfVGMWCGOqCuA+SEanHW0uF6m8/BY6zTd1Polb887M
enkcuV+OLnkYrkm75a2bs1d9aKweHmbwNuNtMDZ30m5/u3MPW5Us1fXd6+Mh
VYevvbdoEWWdHcVvf3sHueWAjYGc84itwGl1KPQbwdoFb02CXRPdHNuwMltF
8dQCUBW1Zz7+fSDv0z8SyvtOamoZ5jVvb6//t6an/gTOQ8H2B+A89D79HbdB
6y5IBFYlL+RsC19Jvx3nIfP+ATiPCv3fj/PQv/wH4Dx0G/0BOA9n8wfgPNzi
PwDnodP8D8B56IH4A3Ae7s0fgPNwNn8AzkNm+E/Aeb/Z2/d9xAeztP6xrqkt
td+N+HAYith+H+Kj4kz53YgPZ4N+tN+J+GAYAH2/G/HBMAD6fjfiw2HK3rwf
IL7HlnZDrFvtUVaBD7Tx+NjpAbOj01CbaktjGWUTWZsBjyew5U3dGh5B8/aN
owoM3V4aPfs4MxPHDJWNfe/eGC1ynAdf3qwwe56ZBJ2Gs5Vqaf2IPOsjFxSg
5E3vUEcW1xuspLU4ZN8Wzdst1WTvosG6Q09XskVz/+3hy15tPpBv4exhFH2G
2X8xR3dO0CJv3e3Dl8fhy+DLwFbeNshS/rd+MPvy9tBezCeDSXdJFpu18rj6
PDz4g8/Sl+mdm2Z3uUPv4rdx9FL7hhxtWVWOtpSwNY5HGPOz/gH89yarfUAT
birlD9B/f8M4WO7NWkCVoSmBPkX/fU8d/BH++wFQ8bTkv++NlVFzFrkYuwEO
Tmv39b9NsJpEKA8mq0hgC8AepIw1gMrJcGJ0RhNgVRgGJtXUD7eJeozezDh7
VEkU2KSzelKIYS5f39zpeG8rHeKQZAiA6s2R1XBhZjB7ewu6tWt3M7zqaYa7
FpFHsR2TqdOKVrY1etNjezTv7+VFrCbjJWnNYz8xZPteawJQDoeyYQ53pfua
qD3hdDRxZTO/rxnWI1x+b2Lecn9+7xpONX7qEQqigKZQhLsykBWL3umTkICE
v5N0S1vOib2dEf9p3FczbRWNLWWEdKK51vgwx0QpkDOzFgY5NLwjok5Bpijq
vd5vP8yVclgz3I+VBCssPDkGAVzmAkBJpuo0GRMJNEZfApzGogzoQDoNxY1o
KC5UksnKT+3eaG2tejttOpP1cHcwB6PppKW1zaO91pRoOp5GOBvjcKvPpiRY
9MYAy5QRYIWRAyjQlJLAlvZbu+kHM+ChcV9bglYkJP7yZkvu0xjAg9tKHkDs
I5Sc34/WQJ0jq5/ufxQ1eC9kAMO8J2SkyeevzufHa8dfNd/iF32/Dx9e5X36
NB4vvny9/9z5OoyO397a9w/H7jhcYNTgy8zzvON9uvWv7fZIJRNzNnhOPj+m
D1/v9K/W4IvhkuPdadTgx9YntjwFy0qHCf5WQ/TiZ6zI71irv9CGRJdYNvIS
K6zm/TrT73bPyFthsBugfpYleU0kUbGtOvCPe3EUlz9FaydWaZWWPxQtRD3s
zBCkMb3S+SwqOuX3KUPvcOm8bjxW/k3UXV253iaiXYJFxzIsCldqJiGuXmJ9
LXy0WjH5gpdkpaviI7zRhqii9ZwouiV6NBb1yOOiDWtlU0sVzd/pB8TN5nwm
pc5GpYYMtTfxxj6s9zB+sE14AfS8nCIfA9dRbEC93l/17PioMbzMyUvyl/ug
0vXv1g1RODSFpdKmMfJV465eMJo3teFdBGi5afjVeuOy5pbuGud21WhYtMB/
ljczrzW1Lh0Rq5OJ1XNxS571h4u8+F3v7pn33+a14zbOrpFs51GwyHsVHUQJ
P9+LEqQ49k666uKGLitaCAvzg+S3ddv7539qskiXaHbjsKp0WBz2tAL/SQl0
eMyLXlh1TVac8LbdxOKWWAEWfsuXJxZBC1te8GWcNA+h5dCchjK5V9l++LSb
K0wJv517Zd6DY8aqvtjxkt4IZw3wWDeanBHLZcNFi/Py9Nk0pu2mxLxCKit/
e69iHeJNAIvi16FjbDdAedBLOfN6tJgt26Lv1cT1adlX+OGl6KLuuXkJ4kpP
r2r524/ppwsmSkVr9qIILG2h4u0TUVI89Tze2Apbq2Bh8aK1BavyTFlC8DSv
qekUlZBFpeVS2VlaVzzGnoasQCEtKosLFD+qTShtsK7Bjs87EbJuKyk2hgPG
SM+XbMfJpj4vTXlyEPwK+0d/Cy/7VOru7a9pHVy65NJa6Q5v4lzksvY+WCXZ
5d3RYENXvDIf7/PB6zE72fljuKqInhRpkRYCnmjwNuR2Wq6f8uY2W8esGjnt
gwZLj3l1x1yCde/y0uV5d0nOZbsgimhF/Wq5XyrFYVCsm/9+ddnrK5kW7aQF
WDfZy2XWzDavl5mzX6/W8eGyPOSls1r4602aF7Plf3NFgSXxsA90QHvLY/1r
pPtSNWguoCxvTufEf8yZC7Ybi6Uy3uENJ+nhpzEMkfjY4KfoNMkaAbAixyeS
ivX65DWz6WSKXplFBd+752FaEdF5SyaH9TMsa5K89jQvVI1z4Otg5dfzArN0
X+oz4FUg3jyuCkSzlbKAZA1IyqOV+C3NsG1VjXdY/XyxkaKev9e4W7kbrLns
Lda8YQInrLd19OaljbxDxgJ+DqS2aRg40JhWmN38yni3vAYgeC/Czc/FcVE+
H+uQrjfY2YzKZ6YlmJ5BQqWLwZq12PGMtu6K12+c0hn+QeIMMt6mmHVDYm2J
tlHGqDVX8rybZ9r4CHILm7qzhdJtwO/+9jdWWfYOK/Kv8pIUWA52n7EOodgW
2KQe+4+9B/MTJV0EA5Zl0YrjCHOqKrhQIkxuej/RbgaO4uRDVkoTO8AUrUob
2F0Qi9SnVDTg7sGsCr1W1NZm3YquOLgNkB4o6OliSy94+t8xTtADuLyGA0yw
JxYWS8WeFf8D8Cwc5lef/ehvHGLCb/Hn2DsFRGAXJFJRrJw2PEAFMuwZSsPd
OC9ZQ75pXP5b5YPPvIHeNmH4idUyz3gZcoAhDdoLjndDi9avMAX4k/a2PzN+
uz7+DR+fxpcav8it9q+C1CjopCquUmy38XEROSX+2XivHFBiddt4GxcF3vMi
/Qc2vfzPr9tF82uSOFgd5r3Ruvf3EZ5PXsv8r3/lTdq/wlePX13vhddf9uiJ
oH4E4ZJelbdrI/pPAznTFV/SAtgrL0NldJkes+RykaIQXWCVfjzf25vrm4ui
bS776KZ5UUBx2qywUlicDs1E9KYS9EI7i/YavLvn2/drMTStiXPSzmjVMDyU
fWs4TOwPxkRjbYy8Gnu5QVql9yruF+wygzR8o/CTlvjkvVkhRBNvpRXX1wlr
LPk32qRhm9Hw2fub8d5Mq9TJVc+mVG047zEsmlOuRO/e94csGoXzIfPv6qMt
WAMjpKwfjnrSAak839N+AkU/pDMYCt/C+OfPT886/qv0zqL1kTA6kIKLckeZ
v1lvX/Om2ZTMzvL1dZ2v23W+vv61xCcVnqM7XWIUWne4ViuetafP+RdL+Z8y
NOwWJ7TzvM4bgZxMvlWf/DWfvEm5WGxsXi2Zvjovp0zJkjoniuYdrNK7y+x1
rIZPqVKIcSD19QYkFDNIRWsBXuw6r3X9rOG2tX5Fb8yfKjxJXxYLe60qv+on
JsxcjoyQ5VNGR5Rr0owW92fv0DxR9p6Ld1zlgk0alonSJXdAwA+TtFg5h+Lc
PkZcsVk7C//XxtMbdvjwdhes8D4DqAlr3IRitPxJ4yM2XxQtu8G+waj8AOwF
1kVGz9sDsW57EVoSCJURSCPgYA4LOCwsry3MXG9Pq/MzdwOVLdjUIO/Diese
ouhJeVOPmvgR3bup3KjJEHj3K/a1OCM4GN7lqpGhABzJ4w3DtujyQgmAr7/L
jzPvOkObDlDDnTvN6OY5i806xUm8sa+/4qeowuCcap8waZtUPi2vFgUtzZio
dN8pnwViR0DRFArlD3HaZ4Dzsvj4b39jY4/XKDV8RPQ+OzfWipA2as8rq8PE
Sq63vzGGZx99zcdETi47XDhURQTF3mVyFcu3CuvAvdAeNh/fWIPki4Yn/iNh
//GpxqqsUxonwxdqGiBdorcihtlzd9ClqNjOnEiIyXAcivRZ64fXbZD6rH0a
b+QlvGpFdTaHCWOceTfHN4xaC86GP7HJQMS2EL0Xjbf0Km+cFoiWPvSb9yBN
o1GVXbnCoKSai1nKDwFrxXAiEpt1kdjiIvGewk0gY+bshTkII/ODSAm/4yfx
63u14A3eT/1jhsX2PtDNosk3YBowD0rRSBKeuCgZD7waXxI5C+blwcMrlutW
jmyVVSgajYwaW/HEHuzpx1owppxgRI6R+Bs3i/13nnb06ar8XkpE6Xq7oV24
Xa/cZJJRHXbYYMxPHQFgI5fNQBxL86iZiri1Om3gjreN0HlZgv1SmFDJMtry
h7lwPG7lwrZVO8jSTq38UKodR2vzL6iWHtQl2xTRtrZ4fQUAl/sF0ElsAdsW
3eIoQAzixp06HN81rD7suUflcbl7A0zyDqBU1JBvLxpNqXlNUYsQVHkHFr4X
MAGxHK6WWHt7fJ3jvjEUxYxX91K0Us9LIJ42qKW93cTan3sa7eRcsf6Q9Fag
aQ5ghW/WK9YJDTsyv4Mo5Dr7NCuIArssVNqhMKP5JcJ21R7tL8JAAAOzOUir
QwTqd2k2Pj5vIwyeMO4C0ND89K+iIyjsy68VEZODh4u8Cw72iqd9Ojw2GdEU
nmOHf2U2JudIjL+gwOGmWe5jZgvFL/BE/5W1ofZYryohWuk6kXb4DsOW0t44
5Q6U7+yoVN9RuQowP9/mlpwIqjDpXjEBa/03ilYbPEyATiThPDuDLa/KiFZq
XXBHh0vRUOOmUXftFGqPExdN+kNuq0YWaFBGdPdyuDO1pPBYQ8ZSrCQ3RZkZ
JabU/FK2o9aFGF2BxHFB4uRW03u9HOnKnc3CDzCrgNppwhYtmrhQ03HPq4oy
mCpXsL6Ev8lYx3CXOuKFBitOg6ow3BcK7b8W3YI95kEtnqxXUS1PNXBWDppK
bB/EcWxX1I2aKztqRLebX6TyQ2mQeWXOwO9crt3cLfOLiZUyuXOCUPAnBdGV
+ijmc2cd5KJcDTCKu/+eW4JSWnXkYrxSX8LvbctZR4dYXLEtMKG+dqc/N2hn
c2wBVLT4LSaJcykMxbydDT193lypLLPOsa90W2df6Xvs+3M8y3pCc2o/tYpf
tjQLuRiLG9h5Mx5sSAsSlDa7opP6Gba/bV1876Xo1QHKwZ7v6TraCgVOW0zi
fNl2v3dGdfGSv+j3S5Wy/6r2orK3qRSMpxuO/AhimdqqzGysdgzlgCqfEn0N
N09yp48n/i6/VobX5i6P+7V+inmEF+TSXdflnFSacoEOCt+dUNslQ6TAPd/j
5vwNzQuhkoKIh57faYZZ7glZ7qLtsAhWTtQcPSGQq7wJzrmbP5Q3T3WKlst5
aJ69iNIuDLV5K8OgypDXF7SVK4q2XNonwWpVNPuuNBDHqItDh6V56Le37TKJ
44GyCbz3urZQhIgovNUr9q+FbYU1pezdeW4BtiNjQIApmtfsa7LZF4RSeBvq
+oTCFs+tdpilIpy2TWOresf5QYUpHdhFtcOdG8VJlTeDSjXW/vIjiNa71+zT
mT5V9Wa/P3xxY9+e4zjwL+f1TI+t29aNxBYtPMfUIMpdTiA9K0lAnTu9d3Nt
ao8f0UeSe0Y+nRW+X2rCV7qtCt8v0kXZ+3jOpKTmctXTxJMzznNF3v+t7Fqh
wq/8Xvmi4khmI+VdcON1hsFN/JvaTbjxXxlupx6N8kjNkkDIM25ExkzJ1ua9
GQvbCKRW+DMJPlwRVWYJPOh9uwQ5X3hcTvj7S6uyt9x44+4ZatTRtbI4FhoB
lwXMKw/zuawfyw1nSxrofAz9vNz58qU04EWRhUT7nRW/YBlTvfwzOnve8jlz
hHauBzivGsMXFkFkT+HxZo2xqRs0hJ3Pnr8z58SKopVPAH1JYWPothy5xSlR
M25edP/mqU7CqsuNR4EVUwyUIhyKmZ1U8k/TOaQ5dsh7olv9x27jI/MA8Pge
ZwMYgypAmv6AktRLABHJ/OYR/nfzU6nDIGKCqhO2rP/S8j40f22EGL3L1+6t
XNbjHbki1/26VlU/f/0r62f99ZzSv73+tby5JfPwI28ETP1ObATP/VT+abv8
05zXeCi0CkGoYX8mHiGGuvk1F3e56H8JXqncabGMDeopw/9cYhQcNdV3UE55
7M+/5oCXsQhGdiNnlYen8jfy1zEnExIS0FAcpOhero15+6sQSnVMhsrIg8N0
q43mheIra9Ea+pIqoa9XpvHFVbcynKIy7yv/5qu32azpUJXB5NJgBSZ7Kb88
n1PmYWvLjILsQogwT0fW+H7bi5OjlCUgUzR09pSjaE4VNxOASPmRpT8NSds/
3BTvu5tSGupzaSgxAs6pTENguKzzXLz3AKv0BVeIZqtLMSVX37xrCnMw504Y
GjyhjdFrqLd8QrwFSd0pWUKq3F9Y5HMK1xwHUOfe0KRhPXj0g0jBxSj9DgAH
7aF7/p0McMOH+V7O1+sMzzqpDd8qRSpr8YJ80IQ3GP+AYHG9OVy63osDku8D
h67npg0SqdI/GAesaHKG+rCRK89crfcJLw3W/p2DcfWByKHIfoNFiaRZatLX
DECuDPN9S5g6CPNgTulhwATZouJNkkEW9t4zh1CJxGCXvfLFJDmGPt9pXASw
zmcinPewSZ/rKPELR4m5pvxZ/ZhmmA61TjDhkD2Y69hPlQFfgk2a1TwKuId1
P6eTCm8xs0jQ5/SlLVQv8yy/Aozazs+urJ7UIomkFjrdchKSwwwZJ+8/LoRl
xXeAxg1qFqRyNuVyQjFaC2hGsU7rFyVHLG1sXhmJeua3r6WOxNX3ln1vpY/z
Fj+wMVifWmTMgvWFDg/ndePElCHSGF6J0y8i70Vuzdm9qifoSDcnsXCR4Zk3
56bOekbHN4BTUx+Tb4SxxvGzAC2ctRDLcDkMMwF2CSgCSqL1gfcHL/n/MwoW
8WEMzhYj8fMvMA9nwTWPOX8nI6LwZ21qXZrfc2s1PpZhUjWB4aLMGiVP+qef
eBXPbfoDXnXmNOtpGZJIyyhC/dQnUJAuT7LOW9qLULjwNbEAJ21DznKwBcqg
EbL85Mt20kXu5GvycAZ6bc4KrrQUzaE+M5GR6bBe4bAN5w3O4h1tmmmRA9Tz
+o6l6cGqtxHFFsXPW2x3mIu4CBVdIlzg3M6jYTR0hOkHtEs3LH8XuHidhXp8
qTeEyYk9rpI7CIToLt4nFYkhVSCOG1H4IT7V0+wLon88SUIUAdM8w1Dkxs5p
2iv7QT6Fm5viVJC/8huFuecMzI4Y3UmNj0VQ7ROVw2BV4Q7wBMYX2F5/RY0H
Jwpcp3L4N5Wdrfigu3edhrLebOOGUwnD4BYU7l5BAKiIi1HpceeKkwJAnnkd
5Gqw0b5qX8n5b1q3F/DD68oP3yNH6gHgSr/6VT5c+7Yk/9pSid/nB7bOTSk6
ugXdSMOHpWiOSKopjXP9maVn1I2MU88UvSCDsZTvUYRwkHXv2CHghaoavcHg
H8r3fiiff7hofCiGoXPIPy89LNRR/iWim3yDmp8rL0UlKApqVAP+aS09A+hj
LUwwRp9lEw4mTLeIWRs0oiwWSZd+QgBMRJU+aRYkccNyG1jWVlnLsKwnpsOq
0C5Hdfj6giJb7fKLc6x70RjeqXfnyKt49LxLelizXpiMTDH3HnEKTzipvLOU
m1bgB7HnwgjCYiYFFbcoez6vn3maF7tWgJZDRdhU7kPlQYO0SI25EJDvl1aT
Lu+X6zJ/tE69OrDcOUuWY7tMXTkLim0WUQDb8OeUpWzjxF62G3qV6uPG+1R1
lAnGaZ68oLhViHKFEhllK2bTnmgGdimR3k1L6X3G/LZIkWhBE7gwo6tRLUJT
dFSkN752Ab0qxd/rbtZJ/fIcWp6hV/eildfTOllPaYjUR26iiX04As/Xr6Q7
CHUljj9gmIg+VDH2y8kNF42Dl1H7ROd0VkKQPIuRbVEJzNLbFTgHqr7h3y4P
nlydxSb1rEtJZF0OMRHNS+DcKBgCKdpLw3XjPliGec6fILJm8/KXG/midL8E
e2nSeDzbfJ6F47l0MYCYIraTNO+gyEzAt3Ag/h7WZu1KiwAJu1JGcTAbB10a
bNNOhRWFTyVp+0HIlw/MXUmRa8mKyPlSLmnneqZnmba5s5e5ZiOaSIKuXHgt
KmkMswNF0pswKxC720Ivy5+LFzilYBodfoVJyxHV6NwQ4v4xZ4E3CpBQxDBf
ahuc48uqaAKscOmt3mhaAf/lbRkYLNcB7aC6P5xPIXcqW4u5eBinLHSNVKym
5p3gSLB7x1xRuYBPImB/IVdyOMvifW8Bu6laD7GWPCdcBRdhgmKtuW/rX5lv
2skxVn57tJCs+Xw+lhRC7oI/ozw+nSYZlr3e35lzsVs0bSOHJCJr2ZnP0RBx
ci9DJZO4nDdcjNSsAQsM1q/KiRDlkJf4EfPxUqo+NODJxKvYFGVrgUmhWt54
njtds6zOypt6SqPUquVk5foVIS3yQeMDvuDmmuIQzwVQu/X+8heWr7hvLxrr
BYBG4VPJFTULKcEYOuk3QPYkIJpKqay5dVo1wzjN5fCEdjqO8PLiquEH8MPN
wj9UIGvFy0o9REW8LKgEp87L8UrK12/ayXp2mySy27jOkkvx41JCwVnPOJWq
FQv+HPkXn+UhY0ylxWt4dYQcY4SF4RtRCQmzuyo3I4vhSj75CtaqZaLiiX+/
VBx9RFBQbTBmlRQIgyXOcYHxggCBp59RPweyBFPkznstudc0H/4MAK+sTcT8
yuK1cMqVsiXKQi/fvq6uMbLqscxYLZ++y6j11NnJvVDsimXUyJzNq5fh8nic
uHD904uJlCGAN07NFXblXIijXDKuKzmZJyE/PIGYXm8UyfRCqpdDUufBSD29
UJJPSFpAj5Owdl7kgbnrV+/Q/EtNVvPVCEbIYy0VIAmLe1kzT9nOqaTZ1jV/
yQ6vs8Tz0/PJ69MKxn+H7Wohsiu2JR0hK3Lf9QW/WZ+f1I7eRWbHd1ZLiSQ/
LwpEXls5k+kMaefbwo//I2axrFcwYEoXD4AAPRIPXf0XWaILCqiZw4b6dCXS
1xdByrMXRCQcf43cl2vO906QHVgxt6ICJfeK8TBZEc9u3DGWqPEQuy9MszzL
cfTvMwTIiAVCTXYTf74NIpcNjrK7YhyJSgKcALZZKsLggjWLNby/L5/Fvgiy
qoqG96QAdT7l6uT7y6qzM883r6ylzrro3KMpqCVR9ku7JM3q1E9vkeE9S3oP
i0d+YI7sOTQMGrRaKFZhWK9fLuF/C35h9ow45XMYrEHkhGCl0Pzq3F8YodVz
KLmAykEQiinye8VMzrgBu1R9JcR0GUCxggRxNemE1nNg/8kRrUhH2FxigRE2
kBJgIPZDxUf6IXeoUN8d0f6sEY09zlAWSIT1RmTG180fcR06dwbW4DV8iTtZ
XHg5MwCXLXyxKua8MExcvuPwgje0AKYzHy1K9iI9Bd9AIxh0xWwlpQicuGqV
5MV11rkkvSopZSG5oyAOskrErPFRWNaRhxfc2KUx7jXAq9xOyChmm1yJ6y2Y
vY6f03tDJ9k3XLOLnJdPjY9CpUhCKN2JtDhKonmqG3VElDIIwPbMg0pFLm/E
jNtGmdSu8pdcf6phkSKWUsRR3smHZNnZ7I5J3ZqvQKU843Gb+YAtOSCCaS9C
OkZ9T5jooADuUafoI/Vx/86oIZCgqOLziDOzBfGnpWxBkTLiRJHIp8p4+aFi
OjRFH/6Nr4yw1AFfR++dYPZvXhZOqiL3Ti+avLc+/GltiX/X+igZrN5DjeVV
i4hDZY7Ua4ouWFCAm41zqN5bKsxhLpspM1b8gQUr0rg31ThAh/Q2PXfKCjRQ
dWSfDkUro9RwwzvVpsRNPF7zA8cq3prf1j27lx/zHNZPV8ygQGZGisstdOHu
4vKP+o1Azm5FIkrtovLmZcGZVEDv4voO/S3AOAqB81d/OiOYKq5eJ/fh/dg0
wEVQN4kQTjnyoF+fA7+XJ9esHXQF8jzEy5KfrvxMsokvJZHEz659mt1mnhiB
N5M4BBQo4Tn3kGhCYcEPXeaqxHn/5GyoTC+5yvJzOzky5i9ykqzwZAhHgrgB
XFQrwWHY1e1q3kX1YrrZla/qx/oC+mHucKFQ13oVDynV5szzuMbEGMr3pcDv
RSP2nNWOFg9jiOLcXfgyiZUzAIJatbRarOEjcietEMdymNiIdHNrk/6Uo5Ef
PYnzQ9Kof47kAd/RPRUyhGuSiF/HLqWFC6LxsH4Lvz5WVoJM6+dpAuJnH39p
Spx5TOHColOtT4ZOveyxPfcUFRuFXyIXGPTmPBuew38up2u/r6tF8XN65t8p
/XEp3ZTAK8c4de80XumERxmChT1Y1yyR3EoS0z5v5b7rAivD2QJcnHUW0Kmd
37siaTg94QOwCCtarl76Eazrl/oWlsEzDC9Erxedu6ZWmmJ+zYBCe/TacT2H
fmWEfOxeFtZdAcZ2knTLL2ixxAPdNp4Rg3Ix/+n8Xr7rBBNRRAxUF3kS5Yvh
pZopdGEgOK8aTzyxgqrQCpZg49NL0k96r8GUdXGnIr/3TsVdcU2CoXGR2yze
z9EDqjleo6GmIHN4Xq44wb77NXfcCtOD3XGBjTj1RtAlMJZnRSyxakv9MXE1
7sevbDWezcfHPz+b+gDfx9/Pq3mthenTKKXs1+yi0oVpbp6Vrc/8YqTAR9UL
1GKrxEWBUgTvDAoUd01o/B/kOK/eefmsPwgpnONAhKOYbjoHuejHrP0FV+Fp
ul4E9SpCmHFODWNe8gdtROdtvWGQlVUKZYTvB6/4XOQcSuKM3ZqhJEIRKScL
6nATZSb4Z3Qem3KYF3ERVzLvQEyct/CTOXQWuUwXLp4ygKrVHs2FRRWWMabC
Ij0s5YvWQztb0vLM/Y2KTZoPfH3R+KUN/3f7qXbTqSpTcj1Yru9REjQ03+ky
om67Str7C9PtJ/OpFh3L1ujTS8/M7zPOSyCSdxR6Li1LzgFKBKXMmvoEaLE2
mHgZa1Ohh+/St/TgH7zDUBTSZHbnmUEE/YgJtz5/qttTpcyEQpn+HAPlmOHE
b8gD93VxXgnC4QgFun5PvP0uisp9kNz99FNkpCdgPuMRYbyemjfNkpKgWh21
Tg5Nz0785z3XRcImi6wFlfArj9bTgBUjNRZCL+cnUKWS0ms3mIDBnZBY02/l
sXq5RcgJR2C5e2JtFZdWbdnn9Dcr0EkJXKgv2PhVSn2P36k9XFZFVyVYHqSC
gWi9YNjFFSCHiqw9MyxXaXzw0lnXUm1zV3cZpZUHuhKOOExxrvkWxKEKJmkw
YPeReZroxSDctE/C31kO+wflqKrIBGf+nBwNFq4dBiVY/JZXOBbclOMLXNYl
q85a/JCVgGTSE/OjaXZ0Adf+fFX6lakNQYNUi2UFEViz2aZyc4Oa2GpesZGm
rDCtBGf/Z2rtnZSjzm0DMTOq2kQlmMwJ4f/jXgjFxIo+0KUKA/GqGuYtlGkd
bxo+7FHasLzNil5WLS+YOVvy6VXGVpiT1g3eAncLz/IiGGdSXKRf//nU2D89
TiSRP/Q0GYeXS1uxQpxYRkcEy4rMOPmqxRE9ixnkC6OrKMRAucylCBLQNBPg
dIqDaGXgWv4AsOjqLHXgiMJxy09mHLBrMC6X1blfNz+GmrFeFqcF73KezuXP
aYUL7+r1imNWTFSIAZ/QrElRq5afVO12W42wuuPn8h0lXnENALkPQgb/P32i
ZIbCn6LYde7/yGMIeaF2XGdeFK3KePkB57K2lBJQ1NcpfAn5HUJx2GybSrkC
Vw09T+KuJ9BgeIS6GF94qW3QvPNglRdzj3kcGON7ouqayG0tppjfrwCtFJTt
pLTsQCkQK3PCcDqn+5TzCz1pXlLsv6B7/Pa2zcokmV2Zoog3LJHrrrEmMQLj
Dc9M2TD6zlNZFoGXVvQVzYLBNy4yXmeiGoKZ82oIsD9pUiBCwZ4s9I2JK7wI
xFWegFEqulNzLZYdWkUmPrdZREI+zVXjWqucAXKRkzfdonKZPZpAIYpRVDgm
PSEIVhJPlJ7N6QajsnDO+++LO+peqKXV1Cuc0dPCovCXxd3g/1nbteU0DAPB
q/CNKgTcAoEQV0iqIiIVjHBRr092Zl92QoAP/hsncte7s48Zd6rxQFjdTyxO
YucTaVa37lziSgEe48g5dfigY4Hrgjrs6fYKt+Vd1qsuWoV4AKWNuYaOxDlD
CVs4O7ks4QC1G5udm//Qato8WMIAok7PRe8SZf7kqyITNQ9oHd3kcsVyuBnz
Es/QSHi6v/smXWDj3l0jK114eusfcXAPAjRudJD+KZESqygDZoim6tRcMWre
XOF0qA675SpuE3z1oKSgxDAf7r5K5ihJDzNQ2FR7vPhwZqVgc5MAtvruHeso
nusSAxGFBBvBX719JFAlur5dHInWn6jSyv5oxeCjsjxOSe1CvkNZ1vKFD3G1
QF64l3DMxgPCr06LRZ2iui7RRu7iWV3LMwSWVU+/QmjIe58kfDxOvBzaKbYc
OMxj1ZUYtbnlSIhWsiDrqewaJgmbnDJMoUZfTE0B5uaQ/1xwULK92KExUUxL
rTzBDNG0wYary2fN5T/6H7u6VAE3aEMxH2Gv6Z3RIlDuWXExADEesqaT9PTy
R7xKOsSW2qS3hsigEWBiOfnfLFiL3T4/nsGWbLmSfHe4vPdB+5S8P/ZtToXQ
2LzxzC0qXF3M+tkQDbT+k7kvyMO/sXIzcYVIf7byhYlfXjwmxD6HjA88Yw1g
ec8a5Fr9xNHnwtUZj2UOkYIoRbVgstj/BQZL8ERJbQMA

-->

</rfc>
