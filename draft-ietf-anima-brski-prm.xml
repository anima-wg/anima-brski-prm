<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-05" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2022"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<t>This document defines enhancements to bootstrapping a remote secure key infrastructure (BRSKI, RFC8995) to facilitate bootstrapping in domains featuring no or only time limited connectivity between a pledge and the domain registrar.
It specifically targets situations, in which the interaction model changes from a pledge-initiated-mode, as used in BRSKI, to a pledge-responding-mode as described in this document.
To support both, BRSKI-PRM introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establishment the trust relation between pledge and domain registrar, BRSKI-PRM relies on the exchange of authenticated self-contained objects --- object security rather than transport security.</t>

<t>The approach defined here is agnostic with respect to the underlying enrollment protocol which connects the pledge, and domain registrar to the Domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of network elements in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate, is exchanged utilizing voucher request objects and voucher response objects as defined in <xref target="RFC8995"/>.
Voucher objects are specified in <xref target="RFC8366"/>. Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA). 
The MASA issues the voucher object and provides it via the domain registrar to the pledge.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies on a binding of the certification request to an underlying TLS connection between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as a client (this document refers to this approach as pledge-initiator-mode).
In industrial environments the pledge may behave as a server and thus does not initiate the bootstrapping with the domain registrar.
In this scenarios it is expected that the pledge will be triggered to generate bootstrapping requests in the customer site/domain.
This document refers to this approach as pledge-responder-mode and</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the registrar, as the pledge is in responder mode, and acts as server.
For the interaction with the domain registrar the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server and a registrar-agent and the domain registrar.
The security is addressed on application layer only to enable usage of arbitrary transport means between the pledge and the domain registrar via the registrar-agent.
Connectivity between the pledge and the registrar-agent may be via IP-based networks (wired or wireless) but also via Bluetooth or NFC.</t>
  <t>allows the application of registrar-agent credentials to establish TLS connections to the domain registrar. These registrar-agent credentials are different from the pledge's IDevID.</t>
</list></t>

<t>The term endpoint used in the context of this document is similar to resources in CoAP <xref target="RFC7252"/> and also in HTTP <xref target="RFC9110"/>.
It is not used to describe a device.
Endpoints are accessible via .well-known URIs.</t>

<t>To utilize the EST server endpoints on the domain registrar, the registrar-agent will act as client towards the domain registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is not directly applicable, as the pledge only possesses an IDevID certificate.
The IDevID does not contain any anchor for which any kind of <xref target="RFC6125"/> validation can be done.
Second, the registrar-agent may not be aware of manufacturer trust anchors to validate the IDevIDs.
Finally, IDevID do not typically set Extended Key Usage (EKU) for TLS WWW Server authentication.</t>

<t>The inability to effectively do TLS in responder mode is one reason for relying on object security.</t>

<t>Another reason is the application on different transports channels, for which TLS may not be available, such as Bluetooth and NFC.</t>

<t>So, instead of using TLS to provide secure transport between the pledge and the registrar-agent, BRSKI-PRM relies on an additional signature wrapping the pledge enrollment request.
For EST <xref target="RFC7030"/> the registrar then needs to do some pre-processing to verify this signature, which is not present in EST.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the EE certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request
EE:</t>
  </dd>
  <dt/>
  <dd>
    <t>End entity</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>Mutual authenticated Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available within the customer site/domain.
It may be at a central site or an internet resident "cloud" service.
The connection may also be a temporary: available only at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge-enrollment-request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof of possession (of a private key)</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof of identity (see <xref target="req-sol"/>)</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge-Voucher-Request is a request for a voucher signed by the Pledge to the Registrar.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar-enrollment-request is the CSR of PER send to the CA by the registrar (RA/LRA)</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar-Voucher-Request is a request for a voucher signed by the Registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehendable to a human reader.
In order to keep them readable the examples use the token "base64encodedvalue==" whenever such a thing occurs.
This token is in fact valid base64.
The full examples are in appendix.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The later is indicated by a string like "BASE64URL(THING)"</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to environments where pledges may have different behavior: pledge-responder-mode, or pledges may have no direct connection to the domain registrar.
Either way pledges are expected to be managed by the same registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a construction site where a building is going up.</t>

<t>Another environment relates to the assembly of cabinets, which are prepared in advance to be installed on a customer site/domain.</t>

<t>As there is no direct connection to the registrar available in these environments the solution specified allows the pledges to act in a server role so they can be triggered for bootstrapping e.g., by a commissioning tool.</t>

<t>As BRSKI focuses on the pledge in a client role, initiating the bootstrapping (pledge-initiated-mode), BRSKI-PRM defines pledges acting as a server (pledge-responder-mode) responding to PVR and PER and consumption of the results.</t>

<t>The following examples motivate support of BRSKI-PRM to support pledges acting as server as well as pledges with limited connectivity to the registrar.</t>

<t>While BRSKI-PRM defines support for pledges in responder mode, there may be pledges, which can act as both initiator or responder.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

<t>A pledge which can initiate, <bcp14>SHOULD</bcp14> listen for BRSKI messages as describe in <xref section="4.1" sectionFormat="comma" target="RFC8995"/>.  Upon discovery of a potential Registrar, it <bcp14>SHOULD</bcp14> initiate to that Registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the pledge-responder-mode connections described in this document.</t>

<t>Once a pledge with such combined functionality has been bootstrapped, it may act as client for enrollment or re-enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined endpoints can be used to trigger a Pledge-Enrollment-Request (PER) for further certificates.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building (or a cabinet) or the basement of a building is equipped with sensors, actuators and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, in the basement, a service technician collects the device specific information from the basement network and provides them to the central building management system.  This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may visit every new house in a subdivision collecting device specific information before connecting to the Registrar.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement.
This operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates .
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presume the availability of the pledge to communicate with the registrar-agent.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/> and the application examples described in <xref target="sup-env"/> the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server).</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment. These requests are than provided by the  registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The communication between the registrar-agent and the pledge <bcp14>MUST NOT</bcp14> rely on transport layer security (TLS) because the pledge does not have certificate a that can easily be verified by <xref target="RFC6125"/> methods.
It is also more difficult to use TLS over other technology stacks (e.g., BTLE).</t>
  <t>The use of authenticated self-contained objects provides a work around for both the TLS challenges, and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher request and voucher response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>Proof of Identity (POI): provides data-origin authentication of a data object, e.g., a voucher request or an enrollment request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>Proof of Possession (POP): proves that an entity possesses and controls the private key corresponding to the public key contained in the  certification request, typically by adding a signature using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher requests and responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and proof of possession of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A Proof of Identity (POI) is also required for the certification request and therefore needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request through a proof of identity (POI).
The binding of data origin authentication or POI to the certification request may be provided directly by with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10  using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate the new use cases.
The pledge-responder-mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.
As indicated before, the communication model between registrar-agent and pledge assumes that the pledge acts as server and responds to requests.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.</t>

<t>For the authenticated self-contained objects used for the certification request, BRSKI-PRM relies on the defined message wrapping mechanisms of the enrollment protocols stated in <xref target="req-sol"/> above.</t>

<t>The security used within the document for bootstrapping objects produced or consumed by the pledge bases on JOSE <xref target="RFC7515"/>. In constraint environments it may provided based on COSE <xref target="RFC9052"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found in  <xref target="BRSKI-PRM-abstract"/>.</t>

<section anchor="uc2"><name>Pledge-Responder-Mode (PRM): Registrar-Agent Communication with Pledges</name>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects (the voucher request/response as known from BRSKI and the enrollment request/response as introduced by BRSKI-PRM) with the help of a registrar-agent.
This allows independence from protection provided by the utilized transport protocol.</t>

<t>The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.
Note that the Join Proxy is neglected in the figure as not needed by the registrar-agent.
The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar as described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints were the required functionality is provided</t>
  <t>enhances existing with new supported media types, e.g., for JWS voucher</t>
  <t>defines new endpoints were additional functionality is required, e.g., for wrapped certification request or new status information.</t>
</list></t>

<figure title="Architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="448" viewBox="0 0 448 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 32,48 L 32,232" fill="none" stroke="black"/>
<path d="M 72,240 L 72,384" fill="none" stroke="black"/>
<path d="M 144,240 L 144,336" fill="none" stroke="black"/>
<path d="M 200,368 L 200,432" fill="none" stroke="black"/>
<path d="M 240,32 L 240,144" fill="none" stroke="black"/>
<path d="M 240,240 L 240,336" fill="none" stroke="black"/>
<path d="M 304,240 L 304,336" fill="none" stroke="black"/>
<path d="M 352,152 L 352,232" fill="none" stroke="black"/>
<path d="M 352,336 L 352,368" fill="none" stroke="black"/>
<path d="M 360,72 L 360,144" fill="none" stroke="black"/>
<path d="M 400,240 L 400,336" fill="none" stroke="black"/>
<path d="M 400,368 L 400,432" fill="none" stroke="black"/>
<path d="M 440,32 L 440,144" fill="none" stroke="black"/>
<path d="M 240,32 L 440,32" fill="none" stroke="black"/>
<path d="M 32,48 L 64,48" fill="none" stroke="black"/>
<path d="M 160,48 L 232,48" fill="none" stroke="black"/>
<path d="M 240,64 L 440,64" fill="none" stroke="black"/>
<path d="M 240,144 L 440,144" fill="none" stroke="black"/>
<path d="M 8,240 L 72,240" fill="none" stroke="black"/>
<path d="M 144,240 L 240,240" fill="none" stroke="black"/>
<path d="M 304,240 L 400,240" fill="none" stroke="black"/>
<path d="M 80,304 L 136,304" fill="none" stroke="black"/>
<path d="M 248,304 L 296,304" fill="none" stroke="black"/>
<path d="M 144,336 L 240,336" fill="none" stroke="black"/>
<path d="M 304,336 L 400,336" fill="none" stroke="black"/>
<path d="M 200,368 L 400,368" fill="none" stroke="black"/>
<path d="M 8,384 L 72,384" fill="none" stroke="black"/>
<path d="M 200,432 L 400,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="360,232 348,226.4 348,237.6" fill="black" transform="rotate(90,352,232)"/>
<polygon class="arrowhead" points="360,152 348,146.4 348,157.6" fill="black" transform="rotate(270,352,152)"/>
<polygon class="arrowhead" points="304,304 292,298.4 292,309.6" fill="black" transform="rotate(0,296,304)"/>
<polygon class="arrowhead" points="256,304 244,298.4 244,309.6" fill="black" transform="rotate(180,248,304)"/>
<polygon class="arrowhead" points="144,304 132,298.4 132,309.6" fill="black" transform="rotate(0,136,304)"/>
<polygon class="arrowhead" points="88,304 76,298.4 76,309.6" fill="black" transform="rotate(180,80,304)"/>
<polygon class="arrowhead" points="40,232 28,226.4 28,237.6" fill="black" transform="rotate(90,32,232)"/>
<g class="text">
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="276" y="52">Vendor</text>
<text x="336" y="52">Service</text>
<text x="256" y="84">M</text>
<text x="312" y="84">anufacturer</text>
<text x="256" y="100">A</text>
<text x="304" y="100">uthorized</text>
<text x="400" y="100">Ownership</text>
<text x="256" y="116">S</text>
<text x="292" y="116">igning</text>
<text x="392" y="116">Tracker</text>
<text x="256" y="132">A</text>
<text x="300" y="132">uthority</text>
<text x="396" y="180">BRSKI-</text>
<text x="104" y="196">BRSKI-PRM</text>
<text x="396" y="196">MASA</text>
<text x="232" y="212">.............................</text>
<text x="392" y="212">.........</text>
<text x="120" y="228">.</text>
<text x="424" y="228">.</text>
<text x="120" y="244">.</text>
<text x="424" y="244">.</text>
<text x="120" y="260">.</text>
<text x="424" y="260">.</text>
<text x="36" y="276">Pledge</text>
<text x="120" y="276">.</text>
<text x="192" y="276">Registrar</text>
<text x="272" y="276">BRSKI</text>
<text x="340" y="276">Domain</text>
<text x="424" y="276">.</text>
<text x="120" y="292">.</text>
<text x="176" y="292">Agent</text>
<text x="272" y="292">EST</text>
<text x="352" y="292">Registrar</text>
<text x="424" y="292">.</text>
<text x="332" y="308">(PKI</text>
<text x="368" y="308">RA)</text>
<text x="424" y="308">.</text>
<text x="120" y="324">.</text>
<text x="212" y="324">LDevID</text>
<text x="424" y="324">.</text>
<text x="120" y="340">.</text>
<text x="424" y="340">.</text>
<text x="36" y="356">IDevID</text>
<text x="120" y="356">.</text>
<text x="424" y="356">.</text>
<text x="120" y="372">.</text>
<text x="424" y="372">.</text>
<text x="120" y="388">.</text>
<text x="224" y="388">Key</text>
<text x="300" y="388">Infrastructure</text>
<text x="424" y="388">.</text>
<text x="120" y="404">.</text>
<text x="236" y="404">(e.g.,</text>
<text x="280" y="404">PKI</text>
<text x="344" y="404">Certificate</text>
<text x="424" y="404">.</text>
<text x="120" y="420">.</text>
<text x="300" y="420">Authority)</text>
<text x="424" y="420">.</text>
<text x="120" y="436">.</text>
<text x="424" y="436">.</text>
<text x="272" y="452">.......................................</text>
<text x="220" y="468">&quot;Domain&quot;</text>
<text x="300" y="468">components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                             +------------------------+
   +---- Drop Ship ----------| Vendor Service         |
   |                         +------------------------+
   |                         | M anufacturer|         |
   |                         | A uthorized  |Ownership|
   |                         | S igning     |Tracker  |
   |                         | A uthority   |         |
   |                         +--------------+---------+
   |                                       ^
   |                                       |  BRSKI-
   |    BRSKI-PRM                          |   MASA
   |          .............................|.........
   V          .                            v        .
+-------+     .  +-----------+       +-----------+  .
|       |     .  |           |       |           |  .
|Pledge |     .  | Registrar | BRSKI | Domain    |  .
|       |     .  | Agent     |  EST  | Registrar |  .
|       |<------>|           |<----->| (PKI RA)  |  .
|       |     .  |     LDevID|       |           |  .
|       |     .  +-----------+       +-----+-----+  .
|IDevID |     .                            |        .
|       |     .         +------------------+-----+  .
+-------+     .         | Key Infrastructure     |  .
              .         | (e.g., PKI Certificate |  .
              .         |       Authority)       |  .
              .         +------------------------+  .
              .......................................
                       "Domain" components
]]></artwork></artset></figure>

<t>The following list describes the components in a (customer) site domain:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Other protocols may be used like CoAP, Bluetooth, or NFC, but are out of scope of this document.
A pledge acting as a server during bootstrapping leads to some differences to BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent must be possible.</t>
      <t>As the registrar-agent must be able to request data objects for bootstrapping of the pledge, the pledge must offer corresponding endpoints.</t>
      <t>The registrar-agent may provide additional data to the pledge in the context of the voucher triggering request, to make itself visible to the domain registrar.</t>
      <t>Order of exchanges in the call flow may be different as the registrar-agent collects both, PVR and PER, at once and provides them to the registrar.
This approach is used in order to allow for bulk bootstrapping of several devices in a single pass through a new site by the commissioning personnel.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges and performs a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the session establishment and also to verify that the registrar-agent is authorized to perform the bootstrapping of the distinct pledge.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
The registrar detects if the bootstrapping is performed by the pledge directly or by the registrar-agent.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
For issuing a voucher, the MASA may perform additional checks on a voucher-request, to issue a voucher indicating agent-proximity instead of (registrar-)proximity.</t>
</list></t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement, that the proximity registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is a weaker assertion then "proximity".
It is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.
Note that at the time of creating the voucher-request, the pledge cannot verify the registrar's registrar EE  certificate and has no proof-of-possession of the corresponding private key for the certificate.
The pledge therefore accepts the registrar EE certificate provisionally until it receives the voucher as described in  <xref target="exchanges_uc2_3"/>.
See also <xref target="RFC8995"/> "PROVISIONAL accept of server cert".</t>

<t>Trust handover to the domain is established via the "pinned-domain-certificate" in the voucher.</t>

<t>In contrast to the above, "proximity" provides a statement, that the pledge was in direct contact with the registrar and was able to verify proof-of-possession of the private key in the context of the TLS handshake.
The provisionally accepted registrar EE certificate can be verified after the voucher has been processed by the pledge.
As the returned voucher includes an additional signature by the registrar, the pledge can also verify that the registrar possesses the corresponding private key.</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>In contrast to BRSKI the pledge acts as server.</t>

<t>This is triggered by the registrar-agent to generate the PVR and PER as well as for the processing of the responses and the generation of status information.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The URI path begins with "http://www.example.com/.well-known/brski" followed by a path-suffix that indicates the intended operation.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Operation path</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge-voucher-request creation Returns PVR</c>
      <c>/pledge-voucher-request</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge-enrollment-request Returns PER</c>
      <c>/pledge-enrollment-request</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Provide voucher to pledge Returns pledge-voucher-status</c>
      <c>/pledge-voucher</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide enrollment response to pledge Returns pledge-enrollment-status</c>
      <c>/pledge-enrollment</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide CA certs to pledge</c>
      <c>/pledge-CACerts</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query bootstrapping status of pledge</c>
      <c>/pledge-bootstrap-status</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent is a new component in the BRSKI context.
It provides connectivity between the pledge and the domain registrar and reuses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/>.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher request/response, the enrollment request/response, as well as related telemetry and status information.
For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.
This new component changes the general interaction between the pledge and the domain registrar as shown in <xref target="uc2figure"/>.</t>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use this LDevID(RegAgt) when establishing the TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
(Note that <xref target="RFC8995"/> makes a similar requirement)
In BRSKI-PRM, the SKID is used in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-numbers of the pledges to be bootstrapped.
This is necessary to allow the discovery of pledges by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair.</t>
  <t>Registrar EE certificate: certificate of the domain registrar.</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped.</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge. The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufactuere may opt out of this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>To be able to detect the pledge using mDNS, network connectivity is required.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification descibes the usage of HTTP as in BRSKI <xref target="RFC8995"/>.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects which are not bound to specific transport security.
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain registrar certificate (registrar EE certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the LDevID(RegAgt).
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate based on the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR.
The registrar includes the LDevID(RegAgt) certificate information into the RVR if the PVR asked for the assertion "agent-proximity".</t>

<t>The MASA in turn verifies the registrar EE certificate is included in the PVR ("prior-signed-voucher-request" of RVR) in the "agent-provided-proximity-registrar-certificate" leaf 
and may assert the PVR as "verified" or "logged" instead of "proximity", as there is no direct connection between the pledge and the registrar.</t>

<t>In addition, the MASA can state the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher. Otherwise, it may assert "verified" or "logged".
Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx status code as described in section 5.6 of <xref target="RFC8995"/>.
The voucher then can be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1056" width="576" viewBox="0 0 576 1056" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,256 L 32,320" fill="none" stroke="black"/>
<path d="M 32,384 L 32,576" fill="none" stroke="black"/>
<path d="M 32,624 L 32,688" fill="none" stroke="black"/>
<path d="M 32,720 L 32,736" fill="none" stroke="black"/>
<path d="M 32,800 L 32,864" fill="none" stroke="black"/>
<path d="M 32,928 L 32,1040" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 120,32 L 120,96" fill="none" stroke="black"/>
<path d="M 176,104 L 176,208" fill="none" stroke="black"/>
<path d="M 176,256 L 176,320" fill="none" stroke="black"/>
<path d="M 176,384 L 176,576" fill="none" stroke="black"/>
<path d="M 176,624 L 176,688" fill="none" stroke="black"/>
<path d="M 176,720 L 176,736" fill="none" stroke="black"/>
<path d="M 176,800 L 176,864" fill="none" stroke="black"/>
<path d="M 176,928 L 176,1040" fill="none" stroke="black"/>
<path d="M 216,32 L 216,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 328,104 L 328,208" fill="none" stroke="black"/>
<path d="M 328,256 L 328,320" fill="none" stroke="black"/>
<path d="M 328,496 L 328,576" fill="none" stroke="black"/>
<path d="M 328,624 L 328,688" fill="none" stroke="black"/>
<path d="M 328,720 L 328,736" fill="none" stroke="black"/>
<path d="M 328,800 L 328,864" fill="none" stroke="black"/>
<path d="M 328,928 L 328,976" fill="none" stroke="black"/>
<path d="M 328,1008 L 328,1040" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 392,32 L 392,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,208" fill="none" stroke="black"/>
<path d="M 448,256 L 448,320" fill="none" stroke="black"/>
<path d="M 448,384 L 448,480" fill="none" stroke="black"/>
<path d="M 448,560 L 448,576" fill="none" stroke="black"/>
<path d="M 448,624 L 448,688" fill="none" stroke="black"/>
<path d="M 448,720 L 448,736" fill="none" stroke="black"/>
<path d="M 448,800 L 448,864" fill="none" stroke="black"/>
<path d="M 448,928 L 448,944" fill="none" stroke="black"/>
<path d="M 448,1008 L 448,1040" fill="none" stroke="black"/>
<path d="M 464,32 L 464,96" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 552,104 L 552,208" fill="none" stroke="black"/>
<path d="M 552,256 L 552,320" fill="none" stroke="black"/>
<path d="M 552,384 L 552,496" fill="none" stroke="black"/>
<path d="M 552,544 L 552,576" fill="none" stroke="black"/>
<path d="M 552,624 L 552,688" fill="none" stroke="black"/>
<path d="M 552,720 L 552,736" fill="none" stroke="black"/>
<path d="M 552,800 L 552,864" fill="none" stroke="black"/>
<path d="M 552,928 L 552,976" fill="none" stroke="black"/>
<path d="M 552,1008 L 552,1040" fill="none" stroke="black"/>
<path d="M 568,32 L 568,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 216,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 392,32 L 464,32" fill="none" stroke="black"/>
<path d="M 488,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 120,96 L 216,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 392,96 L 464,96" fill="none" stroke="black"/>
<path d="M 488,96 L 568,96" fill="none" stroke="black"/>
<path d="M 40,176 L 168,176" fill="none" stroke="black"/>
<path d="M 40,192 L 168,192" fill="none" stroke="black"/>
<path d="M 40,256 L 80,256" fill="none" stroke="black"/>
<path d="M 136,256 L 168,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 128,272 L 168,272" fill="none" stroke="black"/>
<path d="M 40,304 L 80,304" fill="none" stroke="black"/>
<path d="M 136,304 L 168,304" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 128,320 L 168,320" fill="none" stroke="black"/>
<path d="M 184,384 L 232,384" fill="none" stroke="black"/>
<path d="M 280,384 L 320,384" fill="none" stroke="black"/>
<path d="M 184,432 L 224,432" fill="none" stroke="black"/>
<path d="M 272,432 L 320,432" fill="none" stroke="black"/>
<path d="M 336,496 L 424,496" fill="none" stroke="black"/>
<path d="M 472,496 L 544,496" fill="none" stroke="black"/>
<path d="M 336,544 L 408,544" fill="none" stroke="black"/>
<path d="M 488,544 L 544,544" fill="none" stroke="black"/>
<path d="M 184,560 L 216,560" fill="none" stroke="black"/>
<path d="M 296,560 L 320,560" fill="none" stroke="black"/>
<path d="M 184,624 L 232,624" fill="none" stroke="black"/>
<path d="M 280,624 L 320,624" fill="none" stroke="black"/>
<path d="M 336,640 L 360,640" fill="none" stroke="black"/>
<path d="M 408,640 L 440,640" fill="none" stroke="black"/>
<path d="M 336,656 L 360,656" fill="none" stroke="black"/>
<path d="M 416,656 L 440,656" fill="none" stroke="black"/>
<path d="M 184,672 L 200,672" fill="none" stroke="black"/>
<path d="M 304,672 L 320,672" fill="none" stroke="black"/>
<path d="M 184,720 L 200,720" fill="none" stroke="black"/>
<path d="M 304,720 L 320,720" fill="none" stroke="black"/>
<path d="M 184,736 L 200,736" fill="none" stroke="black"/>
<path d="M 304,736 L 320,736" fill="none" stroke="black"/>
<path d="M 40,800 L 64,800" fill="none" stroke="black"/>
<path d="M 144,800 L 168,800" fill="none" stroke="black"/>
<path d="M 40,816 L 64,816" fill="none" stroke="black"/>
<path d="M 144,816 L 168,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 168,832" fill="none" stroke="black"/>
<path d="M 40,848 L 56,848" fill="none" stroke="black"/>
<path d="M 152,848 L 168,848" fill="none" stroke="black"/>
<path d="M 40,864 L 56,864" fill="none" stroke="black"/>
<path d="M 136,864 L 168,864" fill="none" stroke="black"/>
<path d="M 184,928 L 232,928" fill="none" stroke="black"/>
<path d="M 280,928 L 320,928" fill="none" stroke="black"/>
<path d="M 184,944 L 208,944" fill="none" stroke="black"/>
<path d="M 296,944 L 320,944" fill="none" stroke="black"/>
<path d="M 336,960 L 352,960" fill="none" stroke="black"/>
<path d="M 528,960 L 544,960" fill="none" stroke="black"/>
<path d="M 336,976 L 368,976" fill="none" stroke="black"/>
<path d="M 520,976 L 544,976" fill="none" stroke="black"/>
<path d="M 184,1024 L 208,1024" fill="none" stroke="black"/>
<path d="M 296,1024 L 320,1024" fill="none" stroke="black"/>
<polygon class="arrowhead" points="552,960 540,954.4 540,965.6" fill="black" transform="rotate(0,544,960)"/>
<polygon class="arrowhead" points="552,496 540,490.4 540,501.6" fill="black" transform="rotate(0,544,496)"/>
<polygon class="arrowhead" points="448,640 436,634.4 436,645.6" fill="black" transform="rotate(0,440,640)"/>
<polygon class="arrowhead" points="344,976 332,970.4 332,981.6" fill="black" transform="rotate(180,336,976)"/>
<polygon class="arrowhead" points="344,656 332,650.4 332,661.6" fill="black" transform="rotate(180,336,656)"/>
<polygon class="arrowhead" points="344,544 332,538.4 332,549.6" fill="black" transform="rotate(180,336,544)"/>
<polygon class="arrowhead" points="328,1024 316,1018.4 316,1029.6" fill="black" transform="rotate(0,320,1024)"/>
<polygon class="arrowhead" points="328,944 316,938.4 316,949.6" fill="black" transform="rotate(0,320,944)"/>
<polygon class="arrowhead" points="328,928 316,922.4 316,933.6" fill="black" transform="rotate(0,320,928)"/>
<polygon class="arrowhead" points="328,720 316,714.4 316,725.6" fill="black" transform="rotate(0,320,720)"/>
<polygon class="arrowhead" points="328,624 316,618.4 316,629.6" fill="black" transform="rotate(0,320,624)"/>
<polygon class="arrowhead" points="328,432 316,426.4 316,437.6" fill="black" transform="rotate(0,320,432)"/>
<polygon class="arrowhead" points="328,384 316,378.4 316,389.6" fill="black" transform="rotate(0,320,384)"/>
<polygon class="arrowhead" points="192,928 180,922.4 180,933.6" fill="black" transform="rotate(180,184,928)"/>
<polygon class="arrowhead" points="192,736 180,730.4 180,741.6" fill="black" transform="rotate(180,184,736)"/>
<polygon class="arrowhead" points="192,672 180,666.4 180,677.6" fill="black" transform="rotate(180,184,672)"/>
<polygon class="arrowhead" points="192,560 180,554.4 180,565.6" fill="black" transform="rotate(180,184,560)"/>
<polygon class="arrowhead" points="192,384 180,378.4 180,389.6" fill="black" transform="rotate(180,184,384)"/>
<polygon class="arrowhead" points="176,864 164,858.4 164,869.6" fill="black" transform="rotate(0,168,864)"/>
<polygon class="arrowhead" points="176,816 164,810.4 164,821.6" fill="black" transform="rotate(0,168,816)"/>
<polygon class="arrowhead" points="176,320 164,314.4 164,325.6" fill="black" transform="rotate(0,168,320)"/>
<polygon class="arrowhead" points="176,272 164,266.4 164,277.6" fill="black" transform="rotate(0,168,272)"/>
<polygon class="arrowhead" points="176,192 164,186.4 164,197.6" fill="black" transform="rotate(0,168,192)"/>
<polygon class="arrowhead" points="48,848 36,842.4 36,853.6" fill="black" transform="rotate(180,40,848)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,800 36,794.4 36,805.6" fill="black" transform="rotate(180,40,800)"/>
<polygon class="arrowhead" points="48,304 36,298.4 36,309.6" fill="black" transform="rotate(180,40,304)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="168" y="52">Registrar</text>
<text x="292" y="52">Domain</text>
<text x="428" y="52">Domain</text>
<text x="524" y="52">Vendor</text>
<text x="152" y="68">Agent</text>
<text x="304" y="68">Registrar</text>
<text x="412" y="68">CA</text>
<text x="528" y="68">Service</text>
<text x="164" y="84">(RegAgt)</text>
<text x="296" y="84">(JRC)</text>
<text x="524" y="84">(MASA)</text>
<text x="508" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="56" y="244">trigger</text>
<text x="104" y="244">PVR</text>
<text x="148" y="244">(tPVR)</text>
<text x="192" y="244">and</text>
<text x="224" y="244">PER</text>
<text x="268" y="244">(tPER)</text>
<text x="340" y="244">generation</text>
<text x="396" y="244">on</text>
<text x="436" y="244">pledge</text>
<text x="108" y="260">tPVR</text>
<text x="104" y="276">PVR</text>
<text x="108" y="308">tPER</text>
<text x="104" y="324">PER</text>
<text x="32" y="340">~</text>
<text x="176" y="340">~</text>
<text x="328" y="340">~</text>
<text x="448" y="340">~</text>
<text x="552" y="340">~</text>
<text x="56" y="372">provide</text>
<text x="104" y="372">PVR</text>
<text x="132" y="372">to</text>
<text x="204" y="372">infrastructure</text>
<text x="256" y="388">TLS</text>
<text x="328" y="388">|</text>
<text x="292" y="404">[Reg-Agt</text>
<text x="384" y="404">authenticated</text>
<text x="280" y="420">and</text>
<text x="348" y="420">authorized?]</text>
<text x="248" y="436">PVR</text>
<text x="328" y="436">|</text>
<text x="292" y="452">[Reg-Agt</text>
<text x="380" y="452">authorized?]</text>
<text x="288" y="468">[accept</text>
<text x="356" y="468">device?]</text>
<text x="292" y="484">[contact</text>
<text x="360" y="484">vendor]</text>
<text x="448" y="500">RVR</text>
<text x="452" y="516">[extract</text>
<text x="528" y="516">DomainID]</text>
<text x="448" y="532">[update</text>
<text x="504" y="532">audit</text>
<text x="548" y="532">log]</text>
<text x="448" y="548">Voucher</text>
<text x="256" y="564">Voucher</text>
<text x="56" y="612">provide</text>
<text x="104" y="612">PER</text>
<text x="132" y="612">to</text>
<text x="204" y="612">infrastructure</text>
<text x="256" y="628">PER</text>
<text x="384" y="644">CSR</text>
<text x="388" y="660">Cert</text>
<text x="256" y="676">Enroll-Resp</text>
<text x="48" y="708">query</text>
<text x="104" y="708">cACerts</text>
<text x="156" y="708">from</text>
<text x="236" y="708">infrastructure</text>
<text x="252" y="724">cACert-Req</text>
<text x="256" y="740">cACert-Resp</text>
<text x="32" y="756">~</text>
<text x="176" y="756">~</text>
<text x="336" y="756">~</text>
<text x="456" y="756">~</text>
<text x="560" y="756">~</text>
<text x="56" y="788">provide</text>
<text x="120" y="788">voucher</text>
<text x="168" y="788">and</text>
<text x="232" y="788">certificate</text>
<text x="296" y="788">and</text>
<text x="344" y="788">collect</text>
<text x="404" y="788">status</text>
<text x="452" y="788">info</text>
<text x="104" y="804">Voucher</text>
<text x="104" y="820">vStatus</text>
<text x="104" y="836">cACerts</text>
<text x="104" y="852">Enroll-Resp</text>
<text x="96" y="868">eStatus</text>
<text x="32" y="884">~</text>
<text x="176" y="884">~</text>
<text x="328" y="884">~</text>
<text x="448" y="884">~</text>
<text x="552" y="884">~</text>
<text x="56" y="916">provide</text>
<text x="120" y="916">voucher</text>
<text x="180" y="916">status</text>
<text x="224" y="916">and</text>
<text x="268" y="916">enroll</text>
<text x="324" y="916">status</text>
<text x="364" y="916">to</text>
<text x="416" y="916">registrar</text>
<text x="256" y="932">TLS</text>
<text x="256" y="948">vStatus</text>
<text x="376" y="964">req</text>
<text x="420" y="964">device</text>
<text x="472" y="964">audit</text>
<text x="512" y="964">log</text>
<text x="404" y="980">device</text>
<text x="456" y="980">audit</text>
<text x="496" y="980">log</text>
<text x="296" y="996">[verify</text>
<text x="352" y="996">audit</text>
<text x="396" y="996">log]</text>
<text x="256" y="1028">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+    +-----------+    +-----------+    +--------+  +---------+
| Pledge |    | Registrar |    | Domain    |    | Domain |  | Vendor  |
|        |    | Agent     |    | Registrar |    | CA     |  | Service |
|        |    | (RegAgt)  |    |  (JRC)    |    |        |  | (MASA)  |
+--------+    +-----------+    +-----------+    +--------+  +---------+
   |                 |                  |              |   Internet |
   |   discover      |                  |              |            |
   |    pledge       |                  |              |            |
   | mDNS query      |                  |              |            |
   |<----------------|                  |              |            |
   |---------------->|                  |              |            |
   |                 |                  |              |            |

   trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<----- tPVR -----|                  |              |            |
   |------ PVR ----->|                  |              |            |
   |                 |                  |              |            |
   |<----- tPER -----|                  |              |            |
   |------ PER ----->|                  |              |            |
   ~                 ~                  ~              ~            ~

   provide PVR to infrastructure
   |                 |<------ TLS ----->|              |            |
   |                 |          [Reg-Agt authenticated |            |
   |                 |           and authorized?]      |            |
   |                 |------ PVR ------>|              |            |
   |                 |          [Reg-Agt authorized?]  |            |
   |                 |          [accept device?]       |            |
   |                 |          [contact vendor]       |            |
   |                 |                  |------------ RVR --------->|
   |                 |                  |           [extract DomainID]
   |                 |                  |           [update audit log]
   |                 |                  |<--------- Voucher --------|
   |                 |<---- Voucher ----|              |            |
   |                 |                  |              |            |

   provide PER to infrastructure
   |                 |------- PER ----->|              |            |
   |                 |                  |---- CSR ---->|            |
   |                 |                  |<--- Cert ----|            |
   |                 |<-- Enroll-Resp---|              |            |
   |                 |                  |              |            |
   query cACerts from infrastructure
   |                 |--- cACert-Req -->|              |            |
   |                 |<-- cACert-Resp---|              |            |
   ~                 ~                   ~              ~            ~

   provide voucher and certificate and collect status info
   |<--- Voucher ----|                  |              |            |
   |---- vStatus --->|                  |              |            |
   |<--- cACerts ----|                  |              |            |
   |<--Enroll-Resp---|                  |              |            |
   |--- eStatus ---->|                  |              |            |
   ~                 ~                  ~              ~            ~

   provide voucher status and enroll status to registrar
   |                 |<------ TLS ----->|              |            |
   |                 |----  vStatus --->|              |            |
   |                 |                  |--- req device audit log-->|
   |                 |                  |<---- device audit log ----|
   |                 |           [verify audit log]
   |                 |                  |              |            |
   |                 |----  eStatus --->|              |            |
   |                 |                  |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions between the different components into:<br />
TODO: final check and rework section overview</t>

<t><list style="symbols">
  <t><xref target="exchanges_uc2_1"/> describes data exchanged between the registrar-agent and the pledge. - TODO</t>
  <t><xref target="exchanges_uc2_2"/> describes data exchanged between the registrar-agent and the registrar and also the interaction of the registrar with the MASA and the domain CA. - TODO</t>
  <t><xref target="exchanges_uc2_3"/> describes data exchanged between the registrar-agent and the pledge including the status information. - TODO</t>
  <t><xref target="exchanges_uc2_4"/> describes the telemetry and status handling and addresses the exchanges between the registrar-agent and the registrar. - TODO</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses the exchanges between the registrar-agent and the registrar. - TODO</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the registrar-agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> based on mDNS or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent: possesses/trusts IDevID CA certificate and has own LDevID(RegAgt) credentials for the registrar domain (site).
In addition, the registrar-agent <bcp14>MUST</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
  <list style="symbols">
      <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
      <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
      <t>discovered by using a vendor specific approach, e.g., RF beacons
The registrar-agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
    </list></t>
  <t>Registrar: possesses/trusts IDevID CA certificate and has own registrar EE credentials.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="520" viewBox="0 0 520 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,304" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,304" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 72,144" fill="none" stroke="black"/>
<path d="M 336,144 L 360,144" fill="none" stroke="black"/>
<path d="M 48,208 L 80,208" fill="none" stroke="black"/>
<path d="M 280,208 L 360,208" fill="none" stroke="black"/>
<path d="M 48,240 L 88,240" fill="none" stroke="black"/>
<path d="M 320,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,288 L 88,288" fill="none" stroke="black"/>
<path d="M 312,288 L 360,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,288 356,282.4 356,293.6" fill="black" transform="rotate(0,360,288)"/>
<polygon class="arrowhead" points="368,208 356,202.4 356,213.6" fill="black" transform="rotate(0,360,208)"/>
<polygon class="arrowhead" points="56,240 44,234.4 44,245.6" fill="black" transform="rotate(180,48,240)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="112" y="148">trigger</text>
<text x="236" y="148">pledge-voucher-request</text>
<text x="204" y="164">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="180">-agent-signed-data</text>
<text x="180" y="212">pledge-voucher-request</text>
<text x="396" y="212">-store</text>
<text x="440" y="212">PVR</text>
<text x="128" y="244">trigger</text>
<text x="204" y="244">enrollment</text>
<text x="280" y="244">request</text>
<text x="128" y="260">(empty)</text>
<text x="200" y="292">pledge-enrollment-request</text>
<text x="396" y="292">-store</text>
<text x="448" y="292">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<--- trigger pledge-voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge-voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge-enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>Note: The registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="pledge-voucher-request-pvr-trigger"><name>Pledge-Voucher-Request (PVR) - Trigger</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/pledge-voucher-request"</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>The pledge provisionally accepts the agent-provided-proximity-registrar-cert, it <bcp14>SHOULD</bcp14> verify it after a voucher is received.
The pledge will be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
It <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value), excluding the ASN.1 encoding of "OCTET STRING" of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request-prm:agent-signed-data" element (defined in <xref target="voucher-request-prm-yang"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:agent-signed-data"
  representation in JSON syntax

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="pledge-voucher-request-pvr-response"><name>Pledge-Voucher-Request (PVR) - Response</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or it's not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized the time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity".</t>
</list></t>

<t>The ietf-voucher-request:voucher is enhanced with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar EE certificate (provided as trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as trigger parameter.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leafs are defined in <xref target="voucher-request-prm-yang"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-voucher-request-prm:voucher" Representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON syntax
{
    "alg": "ES256",
    "kid": "base64encodedvalue==",
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Content-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>SHOULD</bcp14> include this Content-Type header field indicating the included media type for the voucher response.
Note that this is also an indication regarding the acceptable format of the voucher response.
This format is included by the registrar as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="plegde-enrollment-request-per-trigger"><name>Plegde-Enrollment-Request (PER) - Trigger</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/pledge-enrollment-request"</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "reenroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

</section>
<section anchor="plegde-enrollment-request-per-response"><name>Plegde-Enrollment-Request (PER) - Response</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the enrollment-trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures proof of possession of the private key corresponding to the contained public key.
In addition, based on the additional signature using the IDevID, proof of identity is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the enrollment request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats such as CMP or CMC.</t>

<t>The pledge <bcp14>SHOULD</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format. Note that the wrapping signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-ztp-types" Representation in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue==",
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
  ]
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent to Registrar</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses it's own LDevID(RegAgt) credentials of the site domain.
In addition, it may possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar: possesses the IDevID CA certificate of the pledge vendor/manufacturer and it's own registrar EE credentials of the site domain.</t>
  <t>MASA: possesses it's own vendor/manufacturer credentials (voucher signing key, TLS server certificate) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.
The latter is only necessary if the MASA needs to verify that the domain of the Registrar is a-priori authorized to enroll a particular pledge, or a particular type of pledge.
In such case, how the MASA will obtain the domain CA certificate is out of scope in this document.
In other cases, a MASA may allow the pledge to enroll into an anonymous and/or yet-unknown domain and then the a-priori possession of the domain CA certificate is not needed.</t>
</list></t>

<figure title="Request processing between registrar-agent and bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="connection-establishment-registrar-agent-to-registrar"><name>Connection Establishment (Registrar-Agent to Registrar)</name>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection form registrar-agent to registrar is established, the authorization <bcp14>SHALL</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>The registrar can receive request objects in different formats as defined in <xref target="RFC8995"/>.
Specifically, the registrar will receive JSON-in-JWS objects generated by the pledge for voucher-request and enrollment-request (instead of BRSKI voucher-request as CMS-signed JSON and enrollment-request as PKCS#10).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PVR by HTTP POST to the registrar endpoint: "/.well-known/brski/requestvoucher"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent <bcp14>SHOULD</bcp14> set the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="pledge-voucher-request-rvr-processing-by-registrar"><name>Pledge-Voucher-Request (RVR) Processing by Registrar</name>

<t>After receiving the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar EE certificate to ensure the registrar in proximity of the registrar-agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credentials indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar can fetch the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.</t>
</list></t>

<t>If the validation fails the registrar <bcp14>SHOULD</bcp14> respond with HTTP 404 Not Found status code to the registrar-agent.
HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used if the Content-Type indicated by the Accept header is unknown or unsupported.</t>

<t>If the validation succeeds, the registrar <bcp14>SHOULD</bcp14> accept the PVR to join the domain as defined in section 5.3 of <xref target="RFC8995"/>.
The registrar then establishes a TLS connection to MASA as described in section 5.4 of <xref target="RFC8995"/> to obtain a voucher for the pledge.</t>

</section>
<section anchor="registrar-voucher-request-rvr-processing-registrar-to-masa"><name>Registrar-Voucher-Request (RVR) Processing (Registrar to MASA)</name>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied form the PVR</t>
  <t>serial-number: product-serial-number of pledge
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as in <xref target="RFC8995"/></t>
</list></t>

<t>The RVR can be enhanced optionally with the following parameter as defined in <xref target="voucher-request-prm-yang"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.</t>
</list></t>

<t>If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar EE credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:voucher" representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar EE certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar EE credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar EE certificate is used or that different registrar EE certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar EE certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in section 5.6 of <xref target="RFC8995"/>, <!-- XXX -->and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="voucher-issuance-by-masa"><name>Voucher Issuance by MASA</name>

<t>The expected voucher-response format for BRSKI-PRM (pledge-responder-mode) <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> <bcp14>SHOULD</bcp14> be applied.
If the MASA detects that the Accept header of the PVR does not match the <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code 406 Not Acceptable as the pledge will not be able to parse the response.
The voucher syntax is described in detail by <xref target="RFC8366"/>. <xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="masa-issued-voucher-processing-by-registrar"><name>MASA issued Voucher Processing by Registrar</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher, by signing it using its registrar credentials.
The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credentials (see<xref target="RFC7515"/>, section 5.2 point 8. 
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain registrar EE certificate as well as potential intermediate CA certificates up to the pinned domain certificate. 
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>This signature provides a proof of possession of the private key corresponding to the registrar EE certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).
The registrar <bcp14>MUST</bcp14> use the same registrar EE credentials used for authentication in the TLS handshake to authenticate towards the registrar-agent. 
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert". 
<xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header (MASA)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Decoded "JWS Protected Header (Reg)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

</section>
<section anchor="pledge-enrollment-request-per-processing-registrar-agent-to-registrar"><name>Pledge-Enrollment-Request (PER) Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar.
Deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment request with the corresponding domain CA.
It creates a registrar-enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="request-wrapped-ca-certificates-registrar-agent-to-registrar"><name>Request Wrapped-CA-certificate(s) (Registrar-Agent to Registrar)</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information to verify the wrapped CA certificate object.</t>

<t>To support registrar-agent requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar EE credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64 encoded "x5b" in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with additional registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with additional registrar signaturer in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ] TODO: check rename "x5b" to more explanatory e.g. "ca-certs-x5b"?
}


# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Object Supply by Registrar-Agent to Pledge</name>

<t>It is assumed that the registrar-agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge: 
* voucher-response - Voucher (from MASA via Registrar)<br />
* wrapped-CA-certificate(s)-response - CA certificates
* enrollment-response - LDevID(Pledge) certificate (from CA via Registrar)</t>

<t>It will re-start the interaction with the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher and LDevID certificate and optionally CA certificates.</t>
</list></t>

<figure title="Responses and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 104,160" fill="none" stroke="black"/>
<path d="M 240,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 112,192" fill="none" stroke="black"/>
<path d="M 248,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 88,224" fill="none" stroke="black"/>
<path d="M 296,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 304,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 112,288" fill="none" stroke="black"/>
<path d="M 240,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 72,320" fill="none" stroke="black"/>
<path d="M 296,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(0,320,288)"/>
<polygon class="arrowhead" points="328,192 316,186.4 316,197.6" fill="black" transform="rotate(0,320,192)"/>
<polygon class="arrowhead" points="56,320 44,314.4 44,325.6" fill="black" transform="rotate(180,48,320)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,224 44,218.4 44,229.6" fill="black" transform="rotate(180,48,224)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="140" y="164">supply</text>
<text x="200" y="164">voucher</text>
<text x="152" y="196">voucher</text>
<text x="212" y="196">status</text>
<text x="344" y="196">-</text>
<text x="376" y="196">store</text>
<text x="380" y="212">pledge</text>
<text x="440" y="212">voucher</text>
<text x="500" y="212">status</text>
<text x="124" y="228">supply</text>
<text x="164" y="228">CA</text>
<text x="228" y="228">certificates</text>
<text x="108" y="260">supply</text>
<text x="180" y="260">enrollment</text>
<text x="260" y="260">response</text>
<text x="148" y="292">enroll</text>
<text x="204" y="292">status</text>
<text x="344" y="292">-</text>
<text x="376" y="292">store</text>
<text x="380" y="308">pledge</text>
<text x="436" y="308">enroll</text>
<text x="492" y="308">status</text>
<text x="108" y="324">supply</text>
<text x="168" y="324">CAcerts</text>
<text x="244" y="324">(optional)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<----- supply CA certificates  ----|
    |                                   |
    |<--- supply enrollment response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status
    |<--- supply CAcerts (optional) ----|
    |                                   |

]]></artwork></artset></figure>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<section anchor="pledge-voucher-response-processing"><name>Pledge: Voucher Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-voucher".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example if given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufactures pledge implementation.</t>

<t>To perform the validation of multiple signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in section 5.6.1 in <xref target="RFC8995"/></t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Verify registrar signature as described in section 5.6.1 in <xref target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
  <t>Validate the registrar certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert"), including validity and authorization to bootstrap the particular pledge.</t>
</list></t>

<t>If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar EE certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="pledge-voucher-status-telemetry"><name>Pledge: Voucher Status Telemetry</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-voucher-status" representation in JSON
  syntax
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-wrapped-ca-certificates-processing"><name>Pledge: Wrapped-CA-Certificate(s) Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-CAcerts".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHALL</bcp14> only be done, if the voucher-response has been successfully processed by pledge.</t>

<t>The supply CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar pledge as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded "x5b".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

<t>If validation of the wrapping signature or another security check fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is in an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the pledge detects errors in the encoding of the payload.</t>

</section>
<section anchor="pledge-enrollment-response-processing"><name>Pledge: Enrollment Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-enrollment".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure is: <spanx style="verb">application/pkcs7-mime</spanx>. 
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in response to the registrar-agent. 
If the verification of the LDevID certificate succeeds, the status <bcp14>SHALL</bcp14> be set to true, otherwise to FALSE.</t>

</section>
<section anchor="pledge-enrollment-status-telemetry"><name>Pledge: Enrollment Status Telemetry</name>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll-status is signed and results in a JSON-in-JWS object.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using its new LDevID credentials as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IdevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-enroll-status" representation in
  JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar-agent to provide the status responses to the registrar.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Voucher and Endroll Status Handling Registrar-Agent to Domain Registrar</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>If the TLS connection to the registrar was closed, the registrar-agent establishes a TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device in his domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge belongs to an accepted device in his domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the verification of a signature of the status information is an addition to the described handling in section 5.9.4 of <xref target="RFC8995"/>.</t>

<t>According to <xref target="RFC8995"/> section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge-Status by Registrar-Agent from Pledge</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="pledge-status-trigger-registrar-agent-to-pledge"><name>Pledge-Status - Trigger (Registrar-Agent to Pledge)</name>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/pledge-status"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and the enrollment of the pledge into the new domain).
As pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-request" representation in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-status-response-pledge-registrar-agent"><name>Pledge-Status - Response (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in section <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is :</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context" : { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in section <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize the bootstrapped credential information in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-response" representation in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.
In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>

</section>
</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher Request Artifact</name>

<t>The following enhancement extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.</t>

<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>The following tree diagram is mostly a duplicate of the contents of <xref target="RFC8995"/>, with the addition of the fields agent-signed-data, the registrar-proximity-certificate, and agent-signing certificate.
The tree diagram is described in <xref target="RFC8340"/>.
Each node in the diagram is fully described by the YANG module in Section <xref target="voucher-request-prm-yang-module"/>.</t>

<figure><artwork align="left"><![CDATA[
module: ietf-voucher-request-prm

 grouping voucher-request-prm-grouping
  +-- voucher
     +-- created-on?                               yang:date-and-time
     +-- expires-on?                               yang:date-and-time
     +-- assertion?                                enumeration
     +-- serial-number                             string
     +-- idevid-issuer?                            binary
     +-- pinned-domain-cert?                       binary
     +-- domain-cert-revocation-checks?            boolean
     +-- nonce?                                    binary
     +-- last-renewal-date?                        yang:date-and-time
     +-- prior-signed-voucher-request?             binary
     +-- proximity-registrar-cert?                 binary
     +-- agent-signed-data?                        binary
     +-- agent-provided-proximity-registrar-cert?  binary
     +-- agent-sign-cert?                          binary
]]></artwork></figure>

</section>
<section anchor="voucher-request-prm-yang-module"><name>YANG Module</name>

<t>The following YANG module extends the <xref target="RFC8995"/> Voucher Request to include a signed artifact from the registrar-agent (agent-signed-data) as well as the registrar-proximity-certificate and the
agent-signing certificate.</t>

<figure><artwork align="left"><![CDATA[
<CODE BEGINS> file "ietf-voucher-request-prm@2022-07-05.yang"

module ietf-voucher-request-prm {
  yang-version 1.1;

  namespace "urn:ietf:params:xml:ns:yang:ietf-voucher-request-prm";
  prefix vrprm;

  import ietf-restconf {
    prefix rc;
    description
      "This import statement is only present to access
       the yang-data extension defined in RFC 8040.";
    reference "RFC 8040: RESTCONF Protocol";
  }

  import ietf-voucher-request {
    prefix vcr;
    description
      "This module defines the format for a voucher request,
          which is produced by a pledge as part of the RFC8995
          onboarding process.";
    reference
      "RFC 8995: Bootstrapping Remote Secure Key Infrastructure";
  }

  organization
   "IETF ANIMA Working Group";

  contact
   "WG Web:   <http://tools.ietf.org/wg/anima/>
    WG List:  <mailto:anima@ietf.org>
    Author:   Steffen Fries
              <mailto:steffen.fries@siemens.com>
    Author:   Eliot Lear
              <mailto: lear@cisco.com>
    Author:   Thomas Werner
              <mailto: thomas-werner@siemens.com>
    Author:   Michael Richardson
              <mailto: mcr+ietf@sandelman.ca>";

  description
   "This module defines the format for a voucher-request form the
    pledge in responder mode. It bases on the voucher-request
    defined in RFC 8995, which is a superset of the voucher itself.
    It provides content to the MASA for consideration
    during a voucher-request.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.

    Copyright (c) 2021 IETF Trust and the persons identified as
    authors of the code. All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Simplified BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC xxxx; see the
    RFC itself for full legal notices.";


  revision 2022-07-05 {
    description
     "Initial version";
    reference
     "RFC XXXX: BRSKI for Pledge in Responder Mode";
  }

  // Top-level statement
  rc:yang-data voucher-request-prm-artifact {
    // YANG data template for a voucher-request.
    uses voucher-request-prm-grouping;
  }
  // Grouping defined for future usage
  grouping voucher-request-prm-grouping {
    description
      "Grouping to allow reuse/extensions in future work.";
    uses vcr:voucher-request-grouping {

      augment voucher {
        description "Base the voucher-request-prm upon the
          regular one";

        leaf agent-signed-data {
          type binary;
          description
            "The agent-signed-data field contains a JOSE [RFC7515]
             object provided by the Registrar-Agent to the Pledge.

             This artifact is signed by the Registrar-Agent
             and contains a copy of the pledge's serial-number.";
        }

        leaf agent-provided-proximity-registrar-cert {
          type binary;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             The first certificate in the registrar TLS server
             certificate_list sequence (the end-entity TLS
             certificate; see RFC 8446) presented by the
             registrar to the registrar-agent and provided to
             the pledge.
             This MUST be populated in a pledge's voucher-request
             when an agent-proximity assertion is requested.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile
             RFC 8446: The Transport Layer Security (TLS)
             Protocol Version 1.3";
        }

        leaf-list agent-sign-cert{
          type binary;
          min-elements 1;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             This certificate can be used by the pledge,
             the registrar, and the MASA to verify the signature
             of agent-signed-data. It is an optional component
             for the pledge-voucher request.
             This MUST be populated in a registrar's
             voucher-request when an agent-proximity assertion
             is requested.
             It is defined as list to enable inclusion of further
             certificates along the certificate chain if different
             issuing CAs have been used for the registrar-agent
             and the registrar.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile";
        }
      }
    }
  }
}

<CODE ENDS>
]]></artwork></figure>

<t>Examples for the PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                        Description                       Reference
 pledge-voucher-request     create pledge-voucher-request     [THISRFC]
 pledge-enrollment-request  create pledge-enrollment-request  [THISRFC]
 pledge-voucher             supply voucher response           [THISRFC]
 pledge-enrollment          supply enrollment response        [THISRFC]
 pledge-cacerts             supply CA certificates to pledge  [THISRFC]
 pledge-status              query pledge status               [THISRFC]
 requestenroll              supply PER to registrar           [THISRFC]
 wrappedcacerts             request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>The credential used by the registrar-agent to sign the data for the pledge should not contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (a "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could be easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>TODO: other threads?</t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due to state creation on the pledge (the pledge may produce a voucher, and refuse to produce another one).
One mitigation may be that the pledge does does not limited the number of voucher requests it creates until at least one has finished, or a single onboarding state may expire after a certain time.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration)
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns on misusage of an registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rouge pledge at a later point in time.
As "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agents signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this his product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain may be returned if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the comissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in section <xref target="voucher-request-prm-yang"/> is bases on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
Therefore similar considerations as described in <xref target="RFC8995"/> section 11.7 (Security Considerations) apply.
The YANG module specified in this document defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.
The use of YANG to define data structures via the "yang-data" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason these guidelines do not follow the template described by <xref target="RFC8407"/> section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, and Hendrik Brockhaus for their input and discussion on use cases and call flows.
Special thanks to Esko Dijk for the in deep review and the improving proposals.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC5280' target='https://www.rfc-editor.org/info/rfc5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author fullname='D. Cooper' initials='D.' surname='Cooper'><organization/></author>
<author fullname='S. Santesson' initials='S.' surname='Santesson'><organization/></author>
<author fullname='S. Farrell' initials='S.' surname='Farrell'><organization/></author>
<author fullname='S. Boeyen' initials='S.' surname='Boeyen'><organization/></author>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<author fullname='W. Polk' initials='W.' surname='Polk'><organization/></author>
<date month='May' year='2008'/>
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC7030' target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference anchor='RFC7515' target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8366' target='https://www.rfc-editor.org/info/rfc8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<date month='May' year='2018'/>
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor='RFC8610' target='https://www.rfc-editor.org/info/rfc8610'>
<front>
<title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
<author fullname='H. Birkholz' initials='H.' surname='Birkholz'><organization/></author>
<author fullname='C. Vigano' initials='C.' surname='Vigano'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2019'/>
<abstract><t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8610'/>
<seriesInfo name='DOI' value='10.17487/RFC8610'/>
</reference>



<reference anchor='RFC8995' target='https://www.rfc-editor.org/info/rfc8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>


<reference anchor='I-D.ietf-anima-jws-voucher'>
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname='Thomas Werner' initials='T.' surname='Werner'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='11' month='July' year='2022'/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that has been signed using a Cryptographic Message
   Syntax (CMS) structure.  This memo introduces a variant of the
   voucher structure in which CMS is replaced by the JSON Object Signing
   and Encryption (JOSE) mechanism described in RFC7515 to better
   support use-cases in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, MIME types are
   registered and examples are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-jws-voucher-04'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-jws-voucher-04.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-netconf-sztp-csr'>
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Sean Turner' initials='S.' surname='Turner'>
         <organization>sn3rd</organization>
      </author>
      <date day='2' month='March' year='2022'/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netconf-sztp-csr-14'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-netconf-sztp-csr-14.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-anima-rfc8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin' initials='M.' surname='Pritikin'>
         <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert' initials='T. T.' surname='Eckert'>
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma' initials='Q.' surname='Ma'>
         <organization>Huawei</organization>
      </author>
      <date day='31' month='January' year='2022'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON
   document that has been signed using a Cryptographic Message Syntax
   (CMS) structure.  Other YANG-derived formats are possible.  The
   voucher artifact is normally generated by the pledge&#39;s manufacturer
   (i.e., the Manufacturer Authorized Signing Authority (MASA)).

   This document only defines the voucher artifact, leaving it to other
   documents to describe specialized protocols for accessing it.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-00'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-rfc8366bis-00.txt' type='TXT'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2986' target='https://www.rfc-editor.org/info/rfc2986'>
<front>
<title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
<author fullname='M. Nystrom' initials='M.' surname='Nystrom'><organization/></author>
<author fullname='B. Kaliski' initials='B.' surname='Kaliski'><organization/></author>
<date month='November' year='2000'/>
<abstract><t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process.  The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2986'/>
<seriesInfo name='DOI' value='10.17487/RFC2986'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC7252' target='https://www.rfc-editor.org/info/rfc7252'>
<front>
<title>The Constrained Application Protocol (CoAP)</title>
<author fullname='Z. Shelby' initials='Z.' surname='Shelby'><organization/></author>
<author fullname='K. Hartke' initials='K.' surname='Hartke'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2014'/>
<abstract><t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t><t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t></abstract>
</front>
<seriesInfo name='RFC' value='7252'/>
<seriesInfo name='DOI' value='10.17487/RFC7252'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC8407' target='https://www.rfc-editor.org/info/rfc8407'>
<front>
<title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<date month='October' year='2018'/>
<abstract><t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t></abstract>
</front>
<seriesInfo name='BCP' value='216'/>
<seriesInfo name='RFC' value='8407'/>
<seriesInfo name='DOI' value='10.17487/RFC8407'/>
</reference>



<reference anchor='RFC8792' target='https://www.rfc-editor.org/info/rfc8792'>
<front>
<title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='E. Auerswald' initials='E.' surname='Auerswald'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the &quot;single backslash&quot; strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the &quot;double backslash&quot; strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t></abstract>
</front>
<seriesInfo name='RFC' value='8792'/>
<seriesInfo name='DOI' value='10.17487/RFC8792'/>
</reference>



<reference anchor='RFC9052' target='https://www.rfc-editor.org/info/rfc9052'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need to be able to define basic security services for this data format.  This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  </t><t>This document, along with RFC 9053, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='STD' value='96'/>
<seriesInfo name='RFC' value='9052'/>
<seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>



<reference anchor='RFC9110' target='https://www.rfc-editor.org/info/rfc9110'>
<front>
<title>HTTP Semantics</title>
<author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'><organization/></author>
<author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'><organization/></author>
<author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'><organization/></author>
<date month='June' year='2022'/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name='STD' value='97'/>
<seriesInfo name='RFC' value='9110'/>
<seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>



<reference anchor='RFC9238' target='https://www.rfc-editor.org/info/rfc9238'>
<front>
<title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='J. Latour' initials='J.' surname='Latour'><organization/></author>
<author fullname='H. Habibi Gharakheili' initials='H.' surname='Habibi Gharakheili'><organization/></author>
<date month='May' year='2022'/>
<abstract><t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t><t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t></abstract>
</front>
<seriesInfo name='RFC' value='9238'/>
<seriesInfo name='DOI' value='10.17487/RFC9238'/>
</reference>


<reference anchor='I-D.ietf-anima-brski-ae'>
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname='David von Oheimb' initials='D.' surname='von Oheimb'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Steffen Fries' initials='S.' surname='Fries'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Hendrik Brockhaus' initials='H.' surname='Brockhaus'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Eliot Lear' initials='E.' surname='Lear'>
         <organization>Cisco Systems</organization>
      </author>
      <date day='3' month='June' year='2022'/>
      <abstract>
	 <t>   This document enhances Bootstrapping Remote Secure Key Infrastructure
   (BRSKI, RFC 8995) to allow employing alternative enrollment
   protocols, such as CMP.

   Using self-contained signed objects, the origin of enrollment
   requests and responses can be authenticated independently of message
   transfer.  This supports end-to-end security and asynchronous
   operation of certificate enrollment and provides flexibility where to
   authenticate and authorize certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-brski-ae-02'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-brski-ae-02.txt' type='TXT'/>
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="April"/>
  </front>
  <format type="PNG" target="https://raw.githubusercontent.com/anima-wg/anima-brski-prm/main/pics/brski_prm_overview.png"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC6125' target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<author fullname='J. Hodges' initials='J.' surname='Hodges'><organization/></author>
<date month='March' year='2011'/>
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".</t>

<figure title="Example Pledge Voucher Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiNW9Cb3UvUndqNCtkTUo3QlErVWp0Zz09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDctMTJUMDQ6NDg6NTYuNTYzWiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
  "signatures":
    [{ "protected":
         "eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVNU1Bb0dDQ3\
FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEthVzVuU2\
1sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ0FYRFRJeE\
1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q1FZRFZRUU\
dFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZRFZRUUZFd2\
93TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtbGpaVEJaTU\
JNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjRUVYdzdyVW\
VhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2TXgyWStTTW\
dROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxaGMyRXRkR1\
Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CYUFGRlFMak\
56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd0\
1DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCdT\
N3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnWENtSkxUek\
VsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sInR5cCI6InZvdW\
NoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
      "signature":
        "n1rKu3odtbq-rIPHlE08BU-gSf0vKFDtiUL5Q2j8y1BmDXvj4SPUYscjdiu\
BxYF7SzsdECCfpPiL_jLbwQiG1Q"
    }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".</t>

<figure title="Example Registrar Voucher Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsImlkZXZpZC1pc3N1ZXIiOiJCQmd3Rm9BVVZBdU0zTS85TCtTaTZORENPRGtUbC\
svQnhocz0iLCJub25jZSI6IjVvQm91L1J3ajQrZE1KN0JRK1VqdGc9PSIsInByaW9yLX\
NpZ25lZC12b3VjaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbT\
FNV0ZwMlpGZE9iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYV\
VrMlpYbEthR016VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1\
pFaHJhVXhEU25wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFVMUVSWGxOZWxFeFRtcG\
pORTlUU1hOSmJUVjJZbTFPYkVscWIybE9WemxEWWpOVmRsVnVaSEZPUTNSclZGVnZNMU\
ZzUlhKV1YzQXdXbm93T1VscGQybFpNMHBzV1ZoU2JGcERNWFppYVVrMlNXcEpkMDFxU1\
hSTlJHTjBUVlJLVlUxRVVUWk9SR2MyVGxSWmRVNVVXWHBYYVVselNXMUdibHBYTlRCTV\
dFSjVZak5hY0ZwSFZtdE1XRUo1WWpOb2NHSlhiREJsVXpGNVdsZGtjR016VW5sWldFbD\
BXVEpXZVdSRFNUWkphekZLVTFWSk1HRnJUa1JSVm14d1dqQkdNMU5WU2tKYU1HeElVVl\
pvV2s1NlNtbFpiSEJPVVZjNVNGRXdUbmhTTVU1T1RrUnNRMUZWTVVSVVZWSldaVVZXTm\
xGV1NrTmFNRFZYVVd0R2RsUlZUbkpOVkZaU1lteGFObGxXWXpGaVIwMTZWRmhvUlZaRl\
JrMVJiV1JQVm10S1Fsa3dNVU5TYXpWM1drVmtWbVZGVWpaUlZUVkRXakExVjFGclJrNV\
VWVXB6VlcxNGFrMHhTa1ZWVmxKQ1dsVmFNMDFJYkU1U1JWWTFWRlZTYW1Rd05YRlNWRk\
pPVmtWd2FGSnVZM2RsYXpGRlVsaHNUbEpIVGpOVWJYQkdUa1V4VlZOdFJrNVNSRkkwVW\
xod1FsVnJTbTVVYkZwRFVWYzVUbEV5YzNoT1ZrWjFWbTV3YUZaNlZuTlplazVPWlVWU1\
ZWRlZlRU5hTURWWFVXdEdhbFJWU2tkVWJrSnJVakZXTkZJd1VrSldNRXB1Vkd4YVExRl\
ZNVTVTUkVKVFpHMUtXRkp1UW1saVJYQnpWMnBLYzJWdFVrbFRiV2hxWVd0S1lWUlZTaz\
VTTUVvMVkxVmtWRlJVVVRWUlYyUkdVakJPUkdOVlpGUlVWRkUxVVZoa1JsTkZSWGRUVl\
VaRFVXMXplRTVyYzNaaFZHTTFZakZLY2xONlZscFpiVlpSV25wb1ZsVXhTVFJNTTFaNl\
RWZFNVVlpYYkdGVFJURXdZakowVkZwSVJreFdlbFp0WW14a2VsRnRVWEpqVmtwTlRqRm\
tVMXB0V214V01uUTFXakpXYVdJd2NHMVRWM2h6WkZoS2FtRlVTVEZrTWpWdllWVTVWMU\
V3WkhGYVdIQkRUbFV4UTAxRlpFSk5WbFpyVTJ4R1VsWXdNVU5WVldSRVVUTk9TRkZXUm\
xaU2Ewb3pWRlZLUTFveVpIbFJiV1JHVW10S1Vsa3dVa2xTUlVaUVVXMWtUMVpyYUZKUF\
JVcENXbXBvUmxGclJrNVJNRWt3VVZoa1ZGRldiRVZXYkVsM1ZXdEtSbEpZWkZGT1JXeH\
JXVEl4VjJKdFJsbFVha0pxWWxWYU5WUkdhRk5pUjAxNlZWaFdhazF0ZUhOWmJHUlhaRm\
RPTlUxWGJHdFJlbFl4VjJ4b1ZGRXdhSFZUYlhoaFRXMTRObHBGYUV0aFIwNXdUVlJDWV\
ZkRk5IZFViV3N4WlcxR1dGWnVVbUZXZWxZMlZFWmtTMDFGZUhST1YzaHJVa1ZHVEZGdF\
pHNWpWMmh5WVdzNVVWVldSa1ZSVjJSUFUxVkdSVkZyV2tKaFZVbzBZa2RTUTJGR2NIaE\
5SVll5VGxWd1RVMXNRbmxXTUU0d1pWWk5NbUZGVWxwV2VrWTFVVEE0ZGxWdFJqRlpia0\
pFVGpBeGFGTlZVbTVUVjJoQ1ZFWk9TMWx0WkUxaWJXUnZXVzFLUWxwNlFtdFpNV1JIVm\
xaYWRrd3laRWhVYWtGMllXNWtObE5zYjNkVk1uZDVZVVJTTkZOV2FISk5VMGx6U1cxR2\
JscFhOVEJNV0U1d1dqSTFiRnBETVd0WldGSm9TV3B2YVZwWWJFdGtNV3haWWtoT2FVMX\
JXbkpUVjNCMllWWndXV0pGZEdwU2JrSmFWbGN3ZUZSV1pFZGpSRXBoVW0xU1VGbHFSbm\
RYVms1WlZXMXdhVlpzYnpCWGExcHJWakpXZEZWclVrNVhSMUp4V1d4U1FrMXNaRmRhUj\
NScFVqQndNVlpXYUZOaGF6RjBaVWhXV21KVVJsaFpWRUkwVjBaV2RHRkhkRk5OUmxwM1\
ZrUkpNV1Z0UmxkaE0zQlVZbGhvWVZZd1drdGpNV1J5VkZob2EySlZjSGRWTVZKaFUyMU\
djbUpFVGxWV00wSkxXa1ZWZUZKV1ZsbFZhelZvWWtoQ1YxWkdWbE5XYXpWeVRWVldXbV\
ZzY0ZCVmExWlhUVlpTY2xWc1NrOVNiVkozVlRGb1QxTnRTbkpPV0U1YVRXcEdlbGxWWk\
V0U1JURlpWbTEwVjJWclduZFdNbmh2VTIxR1ZrOVlRbFJYUjFKUFZtdFdjMDVzVW5KVm\
JGcE9ZWHBWTWxkdWNGZFRiVXB4VWxSV1NtRllaSEJaZWtwelltMUtkRkpxUW10WFJYQn\
pXVE5zU2s1c1kzcGpNbXhxVTBWd01scEZaRmRoYlZKSVZtMTBTbUZ0T1hCWGJHaHpVek\
pPZEZKc2FGWldNbmhSV1ZaV2QxZHNhM2RoU0dScVRWWktWMXBGVWxOaFZrNUdVMnRPVl\
dKWVFuWlpWM2hoVmxaYWNscEdXbGRXUlZwaFZtMTRiMWxYVWxkVWJHUldWa1Z3VjFZd1\
pFNU9WazVZWWtST2FGWnRlRmxhVldNeFUyMUdkRTlZUWxaaVJuQlBXbFpWTVZaV1pGaG\
lSekZXVlRCc2VsTlhOVTlqUm05NVRsZG9hMU5HV2pWWGJFNUtUbXRzY2xremNGZE5NbW\
hJVlRCa1YwMUdaRWRSVkZKcFVqTm9WRlp0YTNkT1YxSllVMjVzVlZKdGVIaFZNalZoVl\
d4c1ZWZHRXbXhWZWtaU1dWZDRSMWRyTlVaT1YyaHJUVmM0TVZrd1drdGhSMGw1WlVVNV\
ZHSlViRVpVYlRGVFlrWndXR1JJVmxSV2FteEhWakJrWVdWdFZsZFhiRkphWW0xTk1GWl\
VRazlPYkZKWFkwVXhhV0ZyU205VlZtaFhZakpHVmxwR2NGVmhhMHBUVTFjMGVGcEhXbE\
pRVkRCcFRFTkthRm95Vm5Wa1F6RjZZVmRrZFV4WFRteGpibEZwVDJ4emFWUlZiRXBSYW\
taRlVUQk9RbGRJUm01UldHUktVV3RHYmxOVlZscGlWMUV3VkRGU1FsTXdTbTVhTTBadl\
lUSndVRlZHUmxKU1JVWnhVVk4wVGxWck1UTlNWa1phVWtaYVVsVlZkRVZSV0VKUFdsWl\
dTMDFYVFhsaVNGWmhWMFUxTmxSV1JYZGtNRTR6VjFWU1YxVldSa2xTUlVaVFZrZEdXVl\
Z0ZUU1VmJXUXpVbTFrV2xKR1dsSlZWVkpGVVZSc1ZsZHNhRTlOUmxaSlZtNXdhRkpVUm\
pKWGEyUlhZekZGZDFKWVpFbGhSMDVQVkZkd1NtUXdOVVZUVkVwT1VrWkZkMVJYY0U1bG\
JHUnZXVEExVG1WcmJETlVhMUpLVFdzeFJWVlVRazVoYXpFMlZqSndRazlWTVZOVVdHUk\
dWVlpzUlZac1JsSlRNRkpDWTBVMWJGWlZiM2haZWtwelpGWndXVlJ1Y0U1VlZFSXpVVE\
5rV2xKR1dsSlZWV2hGVVZaS1ZWbFdhRk5pUlRGVFdUTmtSMVZXYkVWV2JFWlNVa1ZTUW\
s1V1RtRldNbEozV1hwT1UyVldiRmxUYTBwaFRXeGFNVnBGVWtOWGF6RkRWRlZrUTJWWV\
JraFZNREF3VDFWR2JsSlZaRVJSTTBaSVZUQXdNRTlWUmpOU1ZXaENUVVZzUWxGclpEUm\
lTRXBQV20xdmVtRldTbWxPZVRsRFZWYzVhMVo1Y3pGWFYyeDJWRE53YjBzeWNFcGtTR3\
g0WkZaS1NsUjVPVmhsYW1SYVlqRmplbUZZWkVWWmVrNUhaVWRXTTFSR1dtMWxhMDU1VG\
xVMU1sSkVSWHBYYlVaSFdXcGtiV050Um5WTE0xRTFZak5TV2s1V1pFMWhSVzh5WVd4d0\
5sRnRlRTVSVkZKSVVWUkdWbHBGVWpOU1ZVbDJaREZHUmxGWVpFcFRSMlJGVVZkYVExb3\
dOVmRUUms1T1VsVmtSVkZXWkc1UmJFb3lZakZSZUdSWFVteE5iVmt5VkVWV1VtRkdWVE\
5UUldoeFN6TmFTMHd5VVROVFdIQkNXa1ZLYmxSc1drbFZWRkpHVW0xa1VsWldhSGRsYl\
hoT1V6Tm9jMk5GUlRKUFIwNVdUbFZhVWxSV2FGWmtiVFZLVmtSYVVtUXpaRVprTVd4Rl\
ZteEpkMkpGU2tKa00yUkVXakZzU2xNelpGcFJhMHBTVmxWb1FtUXdiRE5STW1SYVUxVj\
BkbGRyYkRaaGFrSkdVVmhrU2xKR1RrSlJXR1JUVlZWc2JsbDZTalZPYm1oMlZETlNkbF\
ZWU25OVGJrNXVZa1U1VFUxV1dqUlRSV1IyWXpGU05XTkZWbmhWYlZvMlRVWkdNazVHY0\
VaVlNGa3daREJPU2xWVlRsZGxWMGw1VW1wc05sWnFUblZQVkZWeVlqSjRibHByV2t0YU\
1YQlZWakJXTms1SFVsUlpWVmw2WVVod1UxVlhTWHBYYmxaRFRXcHNVbEJVTUdsTVEwcE\
9VMVZzUTJWclVrUlJNRVpaVWpKa1FtUXdiRU5SVjJSS1VsWm9XV0ZyYUhkU1JVWk1VVz\
FrYm1OWGFISmhhemxSVlZaR1JWRlhjRUpOVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW\
1ORk5XeFdWVzk0V1hwS2MyUldjRmxVYm5CT1ZWUkNNMUV6WkZwU1JscFNWVlZvUlZGV1\
NsVlpWbWhUWWtVeFVrOUlaRVZWVm14RlZteEdVbEpGVWtKWGJGWmhWMFUwZDFWVVFrWm\
tNR2h2V1RBMVRsWkhkRE5VTVZKR1pVVXhWVkZZWkZCU1JUQjVWakpvYWxSck1YRmhNMl\
JRVmtWV05GUldVa0prTURsRlZGUktXR0ZyUlhKVVZrcE9aREJXVWxkVlVsZFZWa1pNVW\
tWR2QxUnRWbFpUYWtacVRXMTRNVmRzYUU5bGF6RlNUVWhrUkdReGJFVldiRVpTVTBWU1\
FsVnNVbWhYUmtwelZGWktibVF3V201WFZWSlhWVlpHUlZKRlJUVldWbkJaVkdwQ1ZsTk\
dXalpaVlZWNFpHeHdTRlp1VGxKTlJWWXpWakZTUWxaRlNtNVpNMFp2WVRKd1VGVkdSa3\
BSYTBwdVdqTkdiMkV5Y0ZCVlJrWk9VV3RLTTFSclRrSlJWbEp6VW5wQ2JXUXhVWHBOTW\
psc1pXeHZlR1J0ZEVsVlYwcHNaRWRXYVdKWGIzSlJiVGxYU3pGd1IyTXljR3BhYkVZel\
RXeFNVR0V3Y0ZGaFJUbHlWREphUWxsdVZUVlpiRTE0WTFad2NFOUliR2hTVmxrMFlqSl\
dlVk15ZDNaT2JIQlpXVzFhTkZReU1VTmhia3BUWTIxT1dXSjZTbHBrTVhCRlVWWk9RMW\
93TlZkVFJrcE9VV3RHYlU5RlZrUlNSVVpJVVZaR1NVd3dSbTVTVlVaT1VWUlNTRkZVUm\
xaYVJWSXpVbFZKZG1ReFJrWlJXR1JLVVRCS1JWRlhXa05hTURWWFUwWk9UbEpWWkVWUl\
ZtUnVVV3hTZGxkcmJFNWxiRVpyWXpCUmRtRnBPSEphTVdkMlRqSk9RMU51Vm1wVFF6bF\
pZbGR3UWxwRlNtNVViRnBKVlZSU1JsSnRaRkpXVjBreVVsUnNhV0pzYURCaWFYUndaVV\
ZXU2xack9UUmxSRkYyWTI1c2JVMHlWalZVV0dSRVdqRnNTbE15T1dGVFdIQnhUVVZXUW\
1Rd2JFVlZNVVpDWkRGS2JsTlhhRUpWUnpWRFRVaGplRlJyVGpGamJXaE9aVVZ3TTJReV\
duRmxhbVJ1VWtkc2NHVkhkRlpYVlhoUlZURnZOVnBWTkRWaE1qbHZWR3hHVm1GclJuQl\
NWVVl6VGtack0ySklValJXTW14UlpEQjBNRTFWYnpWaWJYQTFXbXRTVDJKRVZrNWtWVl\
pGVVcxc2RHVkdTWHBSTVdoMlYydDBTRlZZU2xaUVUwcGtabGd3SWl3aWMybG5ibUYwZF\
hKbGN5STZXM3NpY0hKdmRHVmpkR1ZrSWpvaVpYbEtORTVYVFdsUGJITnBWRlZzU2xGcG\
RGVlJNRTVDV1ZWT2JsRllaRXBSYTBadVUxVmtRbGRITlZkaGJrNVdUbFV4UW1Jd1pFUl\
JNMFpJVlRBd01FOVZTa0pVVlU1T1VrUkNORkV6Y0VKVGEwcHVWR3hhUTFGV2JGVlJWM1\
JIVldzeFUxWllaRVprTVd4RlZteEdVbE13VWtKbFJYUm9WbnBXZFZVeU1YTmtWbTkzVk\
c1YWFtSnJSalJTYm5CQ1ZtdEtibFJzV2tOUlZURk9Va2QwZDJOSFNuUmFSWFJvVm5wV2\
RWWnJaRmRsYlZKR1ZHdEtUbEV3UmxsU1JsSktaVVV4UlZkWVpFOVNSVVY0Vkd0U1dtVk\
ZOVWRpTVd4RlpXMXpNVlF4VW5KbFJURnhWRmhvVG1Gck1IaFVNVkpXVGxaa2NWRnNUaz\
VWV0U0elVURkdXbEpHV2xKVlZXUkdaREJ3UTFaV1VrWldhekZEVkZWa1FrMVdWa1pSTW\
1RelZGWk9kR0pJVm1GTlNFSjNXVzB4YTFKSFNYcFRibVJPVldzeE0xSldSbHBTUmxwU1\
ZWVmFSbVF5T1ROVVZsSktaV3MxUlZaVVNrOWxiV014VkZaS2FtUXdXbEpYVlZKWFZWWk\
dSVkpGUlRGVE1rWllUbGMxVkdKWGVERlhha0pUWWtkU2RHSkhjR0ZXUlVwaFZGVktUbE\
l3U2pWalZXUlVWRlJSTlZGWFpFWlNNRTVFWTFWa1ZGUlVVVFZSV0dSR1UwVkZkMU5WUm\
tOUmVtTTFZa2RzYUZWdFRrTmhiSEJxVWxWV1dXUjZaSGxXVjFab1pHNVNTRk5yUmpGVF\
JGSjNZWHBTU2s1RVNqSlpWVXBPWXpGVmVFMVhiRTFTUlU1RVZFZDBWMkZJVWxaV2FrbD\
RZbGhhYUZNd1RqSlVXR2Q1VjFOMFZGUlhaRkpQUjFwdFpEQjNlVTB6YjNwV1JXeFhVV3\
hrY1ZwR1VrTmxhekZFWXpCa1JGRXpUa2hSVmtaV1VtdEtNMUpYWkVOUmFtaFlVMFpqZU\
dGSFRYbFNXRkpyVWpGYU5scEZUVEZsYlVaWVZtNVNZVlo2VmpaVVJtUkxUVVY0ZEU1WG\
VHdFNSemd4Vkd0U1VtVnJNVU5QUldSQ1RWWldhMU5ZWkZKWFZURkRXVlZHUjFKc1JrMW\
hhelUyVlVaM2RsVXhkM1poTWpreFlXeEdNMkZ0WXpGU1ZGWnRaRzVrYWxkWFNrNVJhek\
ZJVVZSR1ZscEZjRkpWVlRGT1VWYzVTRkV3VG5wU01FWlNWbFZhUTJRd01VUlVWVVV3VW\
pCRmVGWlhVa1ZrTUZaRFdFTTVNMVZWVmtKa01HeEpXakJTUWxNd1NtNWFNMFp2WVRKd1\
VGVkdSbEpTUlVadVZHdG9RbEpGU2taUlYyeERaRlJPTTFWclNrMWpNSEJPVlVSV2VsUl\
VRVE5OUldkeVZsVmFlV1ZWTlZaT2JXUk1aV3Q0VUZWdFRrZGxWa3BUVkRKNGVHTlZhSE\
JhTUd4dVYwVk9kRk5yZUZWbGExWnpaR3RSZVdOSE9VeE9iVkkwVG0xM2VGaERPVEZsVn\
pGVlltMUtVbEpGVW0xVGJYaG9aRWhXV1Uxc1NuWlVNRlU1U1d3d2MwbHVValZqUTBrMl\
NXNWFkbVJYVG05YVdFbDBZVzVrZWtzeWNIcGlNalJwVEVOS2FHSkhZMmxQYVVwR1ZYcE\
pNVTVwU2praUxDSnphV2R1WVhSMWNtVWlPaUp1TVhKTGRUTnZaSFJpY1MxeVNWQkliRV\
V3T0VKVkxXZFRaakIyUzBaRWRHbFZURFZSTW1vNGVURkNiVVJZZG1vMFUxQlZXWE5qYW\
1ScGRVSjRXVVkzVTNwelpFVkRRMlp3VUdsTVgycE1ZbmRSYVVjeFVTSjlYWDA9IiwiY3\
JlYXRlZC1vbiI6IjIwMjItMDctMTJUMDQ6NDk6MDcuMTM0WiIsImFnZW50LXNpZ24tY2\
VydCI6WyJNSUlCMURDQ0FYcWdBd0lCQWdJRVltZDRPVEFLQmdncWhrak9QUVFEQWpBK0\
1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1SZ3\
dGZ1lEVlFRRERBOVVaWE4wVUhWemFFMXZaR1ZzUTBFd0hoY05Nakl3TkRJMk1EUTBNak\
16V2hjTk16SXdOREkyTURRME1qTXpXakE5TVJNd0VRWURWUVFLREFwTmVVSjFjMmx1Wl\
hOek1RMHdDd1lEVlFRSERBUlRhWFJsTVJjd0ZRWURWUVFEREE1U1pXZHBjM1J5WVhKQl\
oyVnVkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCR3hsck5majNpUm\
I3L0JRb2RXKzVZaW9Pemgrakl0eXF1UklPL1d6N1lvVzNpd0RjM0Z4ZXdMVmZ6Q3I1Tn\
ZEMTNaYUZiN2ZyYW4rdDlvdFk1V0xoSjZqWnpCbE1BNEdBMVVkRHdFQi93UUVBd0lIZ0\
RBZkJnTlZIU01FR0RBV2dCUnZvVDF1ZGUyZjZMRVFoVTdISGordkovZDdJekFkQmdOVk\
hRNEVGZ1FVWHB6bE1LeGxwQTY4Y1U1RlFNWFV2bklUNlF3d0V3WURWUjBsQkF3d0NnWU\
lLd1lCQlFVSEF3SXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWdjMnk2eG9PdG9RQmxKc2\
dsT0wxVnhIR29zVHlwRXFSZnowUXY0WkVQdjR3Q0lRQ1Z5YjJGOXpWM245NStvbGdmRk\
pnWlRXRXo0ZFNhRjNoelJRYjNadUIyOVE9PSIsIk1JSUJ6RENDQVhHZ0F3SUJBZ0lFWF\
hqSHBEQUtCZ2dxaGtqT1BRUURBakExTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek\
1RMHdDd1lEVlFRSERBUlRhWFJsTVE4d0RRWURWUVFEREFaVVpYTjBRMEV3SGhjTk1Ua3\
dPVEV4TVRBd09ETTJXaGNOTWprd09URXhNVEF3T0RNMldqQStNUk13RVFZRFZRUUtEQX\
BOZVVKMWMybHVaWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWl\
hOMFVIVnphRTF2WkdWc1EwRXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0\
FBVGxHMGZ3VDMzb2V6WjF2a0hRYmV0ZWJtaitCb1YrWkZzamNmUXcyVE9rSlBoT2tPZk\
FidTliUzFxWmk4eWFFVjhvZXJLbC82WlhiZnhPbUJqclJyY1hvMll3WkRBU0JnTlZIUk\
1CQWY4RUNEQUdBUUgvQWdFQU1BNEdBMVVkRHdFQi93UUVBd0lDQkRBZkJnTlZIU01FR0\
RBV2dCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFkQmdOVkhRNEVGZ1FVYjZFOW\
JuWHRuK2l4RUlWT3h4NC9yeWYzZXlNd0NnWUlLb1pJemowRUF3SURTUUF3UmdJaEFQbk\
IwdzFOQ3VyaE14Snd3Zmp6N2dEaWl4a1VZTFBTWjllTjlrb2hOUVVqQWlFQXc0WTdsdH\
hXaVB3S3QxSjluanlmRE5sNU11RURCaW14UjNDWG9aS0dRclU9Il19fQ",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQm96Q0NBVXFnQXdJQkFnSUdBVzBlTHVJRk\
1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQU\
xCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweE9UQTVNVE\
V3TWpNM016SmFGdzB5T1RBNU1URXdNak0zTXpKYU1GUXhFekFSQmdOVkJBb01DazE1UW\
5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhMakFzQmdOVkJBTU1KVkpsWjJsem\
RISmhjaUJXYjNWamFHVnlJRkpsY1hWbGMzUWdVMmxuYm1sdVp5QkxaWGt3V1RBVEJnY3\
Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVQ2eFZ2QXZxVHoxWlVpdU5XaFhwUXNrYV\
B5N0FISFFMd1hpSjBpRUx0NnVOUGFuQU4wUW5XTVlPXC8wQ0RFaklrQlFvYnc4WUtxan\
R4SkhWU0dUajlLT295Y3dKVEFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNESERBT0JnTl\
ZIUThCQWY4RUJBTUNCNEF3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnWXIyTGZxb2FDS0\
RGNFJBY01tSmkrTkNacWRTaXVWdWdJU0E3T2hLUnEzWUNJRHhuUE1NbnBYQU1UclBKdV\
BXeWNlRVIxMVB4SE9uKzBDcFNIaTJxZ3BXWCIsIk1JSUJwRENDQVVtZ0F3SUJBZ0lHQV\
cwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bG\
MzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MH\
hPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXpBUkJnTlZCQW\
9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQm\
xSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCT2t2a1RIdT\
hRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDZcL1NjWTVQSmlidm\
dIVEIrRlwvUVRqZ2VsSEd5MVlLcHdjTk1jc1N5YWpSVEJETUJJR0ExVWRFd0VCXC93UU\
lNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSFwvQkFRREFnSUVNQjBHQTFVZERnUVdCQlRvWk\
lNelFkc0RcL2pcLytnWFwvN2NCSnVjSFwvWG1qQUtCZ2dxaGtqT1BRUURBZ05KQURCR0\
FpRUF0eFEzK0lMR0JQSXRTaDRiOVdYaFhOdWhxU1A2SCtiXC9MQ1wvZlZZRGpRNm9DSV\
FERzJ1UkNIbFZxM3loQjU4VFhNVWJ6SDgrT2xoV1V2T2xSRDNWRXFEZGNRdz09Il0sIn\
R5cCI6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
    "signature": "ZUUUwtjvbYfIteRb_9OUuh4WibxwpZLAHAlVAXNMSY1De6ub2U\
aOJrCam-OIrZ7-QguUJwm5VEHJ14NEdAWGOQ"
    }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".</t>

<figure title="Example Voucher Response" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2\
VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIj\
oiNW9Cb3UvUndqNCtkTUo3QlErVWp0Zz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDctMT\
JUMDQ6NDk6MDcuNjAyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0\
F3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMT\
VRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1\
JEUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RX\
pBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTk\
JnTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSU\
FCT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2\
NZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRX\
dFQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0\
JCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQk\
dBaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUU\
RHMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU\
1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeE\
thVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQj\
RYRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQT\
FVRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRU\
F3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQV\
RCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOF\
IwWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0\
dCSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSX\
pqMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU\
5FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2\
FFS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In\
0",
    "signature": "HFqpWjVKYn_cSLleTohzSygHbv_dYxz6opknJK5w_ZaLGroGym\
zBs2Ofk8DrX9zYiWZrVR7Y6HDcxY-aErEbiA"
    }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar EE certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Included examples for several objects in section <xref target="examples"/></t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar EE certificate domain CA</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge-voucher request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="voucher-request-prm-yang-module"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="uc2"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/> .</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="uc2"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="uc2"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="uc2"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="uc2"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y9+3rbRpYv+j+fApvZ32cpIWlJviTWpC+0pCRK25Zaku1c
pk8GIiEJMUlwAFCyYnueZT/LebKzblW1qlAgKSfpSe85+rpjiQTqXuu+fqvf
73fqvJ5ku8nTk9O/HSY3eX2VHE+y8WWW5LPkJKvmxWyclcnzYpwlG/RQ//jk
+WYnPT8vs2t5Dz/qjIvRLJ1CU+Myvaj7eVZf9NNZPk3752X1Ju/Py2l/61En
LbN0NzmaZ2Va58WsStLZOHmeztLLbJrN6s7N5W4yfHH4fJi8/rozTmtocGdr
Z6dT1fDgT+mkmMEndbnIOvm8pN+qemdr68nWTmeU1rtJVY8783y3kyR1MdpN
7t1m1T34Y1RM5+modh9Ut9Myu6jUB0VZ+59AB7Oizi/ybAwfzgp6qi5z10y6
qK+KcrfTh9WCF08HyVdlnlXwHC/FaZ1dXGQz+2lRwuxOc5xplQy/hk/MOsqH
3EOWQQ9HdV30v0mvZv2TfHaZPMZJ5PXtbvJ8MctHVzSnMfRx74vtzx884Tku
ZnUJT3ydldN0dgsfZdM0n+Ci0DgGFziOv1bc1wDWBB5ZlPluclXX82r3/v2b
m5uB+vq+mdnZIHmdlbOstFM7uyqmaeU+/e+aWk3j6N/QOD5mageD5FmWuokd
TPKiNh/RrPbyalQkp7ewilM9jRMYa53DX2lVZcnndhav08kkr7LJJJvZqex9
0//iwdZDPZVTuG2/ZOUEzjV8PL+ik9397OF28vBh8sXnXyRP4Fx33UwnMKS/
jnAsND0Z/vMBjSMtx1Uxs5N4jh9lk2Qv+JZ3CXrMJrCMyWlxUd/AjUxeF+Wb
ynU1HZWf4QX+a2UeHYxSvaBmPdXX9zujAiaWny9qdSVgdffzn9+41a3eFOYT
GsxhcQbvVYsJ3O/R7WA2caPI4NnBGJ79K+xI8NB1NltkeMsvy2IxF5KBhw4p
TsLvv6M//ooTGUBfH/BpIHCL811+rH9zeT+gUJ1ZAeerzq+p7ZOv9h7tfLEl
vz7+/PGO+/WB/Pr51gPzwOePth/Jr19sPTSffvHg8WPz6+Nt++mTJ/TsYX9/
oEjlzzdV/7pYjK6y0vt2luECXPSrX+p5f1SVkVfLixF2dZ5Xu518dhHMY+fJ
F2YUj3cebpsR7zzascN0I3649bn59fMn5oEnW/bZJ9t2Hk92HnwRGQwvaEq9
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
YfPMOi3dNRFhHJUmucPcE8cUWbQx0KJ6rZgSu/qnsAxIZ/ee70UFtegdtzur
gY9x+qQK420i/7WWDegg53VELaw0R7E1hexts7g91L87G47mnWewGoj9sLal
+WCVpfnh27f3EVbgN7c4HzQtzohi4Fmdsbvf2eJMdXbNG/lsmR354L/PjrwB
LxtKu7m2VRmPqDYqy6geYzHNZGgFfDs0WZJ7lXxpRStbpEbmztuLx4okOhz6
YmbBlwc460Tq4vTMO1JUAMT9YL2KKvtMLdr2o+Slayt5TiuOgl5kmFE58Dce
7L1wc+8RXKBDDfHFi8lE0BYJ898K7U1M50hsOP6FhigOKTGQQxp/TikEF4uS
BrmhxmejgDdjINJcUNWgAGP3qsxQTOT2zcUuuj1wnPmYdcuJNpIfOMSl42hW
mkbyS5B2z/eQqkUpuLGAJ1qjhbtoi7pY8SWXYsj+hD12TPCHtaoNYjkCC+92
PKcGWJw6c33Ybn1/QV5S3LPe62D4cQ0nonBF7QGokSQmA8HMpan+2HsVcxNZ
Fa3R5VrOo//7fUfaI71ssYxoIE6OY9gKt0ob2IHs0KZeM5JXPPl2d769hXdk
pbTKOSLbW8uXyRyLMHrl7CoLBfQ72K0tSVIBOEbnUItLW6rwe3xbtmfMPvhN
jNl2Ff9FTNd2vK320lNtpnaPS3CLnJXfxVJ7ujRoBe6nXdKlttr2iFWQVevu
7o/asP6PXjRkZ6e/9aS//SCwtMviOotvtsziu8QA8dpolBK0jtvkSjfGs5uq
Oi1rV6xvZVlFuXLI1e3B8w27etpsPq3JnWm4/QWl1F/AvK5mCmKb5GcSn9k8
jKlwJULs4fKif1UWGhvJZhWVIROhfIqRqhQli4y4Lgr2H5KImNbacEu205Kh
PaPT23RlQQhQVGL3Hg62B9vbFmKMOQOF7rRVsFBxuuiLnohlY5I2IO9IqiXv
YHadF4sKHnXZoyIIV6CBDrJBT7u4+TAkf/5T+OGrlg9FuOZiGbGzwJtlSzCp
avN+Aa871ctIdQoFjMSqriT0k4JAYilqDE6/QyNRTujIGlz6fDF506y9XpFS
PrHpbY7wE+5xC9Lg+kjykUzS5BuTuOqq08ghC3NKYSFdrlaYVGpwjJ2m7c+u
mQQbG3YDIBZpxpRUVNN2pCW1c40GNsSYLbMrOHd9k8lCVUwzV2WoiuZ8tud1
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
5D9gMoMyYyRSRhYNXnphbSyOnvsg4LTMMV2a5SLrniEdNCUU+ozPIqopPEhD
S53p0HWMQJUeyDIugAEz1y3gHDNzj0VhNoNXKcEcp/vMIupAG/httJ2UMNB7
xHqRjFOevUL8YUYjdslrtySdIIOlxTrAlkfxDo0bvt4WFI3WnMkPuN42SNpL
HMSkTjHnWE+s8+Bb6e/du8P+PkVz9ik0vv/zTWVcMIIXayH/pzlGxwVSWbM8
RBNIH4S0z5ONliXZZGsHnyodJOoCGhoByzrUvIKhTtkizjGTVDuHzK4WtxUn
ns4r8b+TfEGxdTr6zqTJUtxGc1bLl2mI/Y2u+BoLJcG5UKboJBvz0PhyiPJm
BDcdNcyLIOSY1gK1QJost2C9twyZTIqaDS/tusDTHgs6ExG3OmiEILxh8jHr
9CagaNb6E+8Yzvvw+FASa3j5jA0RbikQQ690Mi8ELuCLA06ZoRPxeOfhtlQJ
sbk0fFS2OIf0KwOOKUgeNeKUJ5cLOCgT2usx31q2ZvPQTXSsl13KrT7c+lwd
wAdLzp8JitmUROYROniRDnP0c+c1hqmiMDTJ30gJgnT2RmShEpV+CkLObgge
Bs4KcpN8RJGkT0uUWw8GyV5azjEoDgj9UfUGvtkDljcDrUBgnr/JZuMyfwMv
FKM3V+nCOr1zNJvOF7XZvdGiqsS8g7vFWAKc4g8n7wKt34MOhSmQ/RRGSlLj
QfWmALb08xsrxyJof5bNZeyuqPWUyDcnAgH9pAK8nQ6imJ+nozewQNYtj7UM
+FfOxqtswZdKEI8nVJC+WWbj8yc7sDmnbMB5irbkSVpdUZAFU1KDGSH+iDBx
r09a+4YurKAdPcygN8MUwdwDTTEkt7IlGlLVlvLbK30HZEUNjEJ4Gx46Stck
7v3J/8GkjYPd5N6/30Obv6p5P8dZYcQaLEkSvPSnToCyQpEU3ez22/kP351M
n333w/X49Yvih+8O69H01dvx61e/jPe2b0bTrcfj6ZPt73euJqP88DE8fzV6
8GIymp3Mz3ce/nsnP8q/vfph59WCn37yMH29PR9/8yZ/tvftLz989+38+9c3
9fnsVf399NXt4c9F/nz/4Pb5L3/ffvHz6OHR6WF1OH30753r8+mLCX774vWT
vfMHL69fzsb/+WKvfnP2snjw98lB+er1fOuHX7aeHOY3+fcPvp18/93J5Ie9
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
lfdMETijWTnV4dFQgxG78GjdN6yJJ3tBIoEJiz70BdsmdhXDk6HLEM7+vDI7
QpHZRcZLb4DotWBchOkxPQgJc8tge0M/t3T/ju3iI3O8O8cIofumOt9Dv7jM
9O4CeyvjIQLR4n6fTKLM1zwjmHw5SH8bBHhKykZ2VKba7uB2VkdhFnJcQJlZ
DBiu3021kxJTOozJdDBeZBPfmu5j2z2wCYM+BXWHKnK/r4Ls33XMHcMTB6NW
601SDJg+CLlls8Jy4xyC8YZbuxeu717gPXoMbIoxwgiViBbpQkpCFb2J3HAq
2FCTEzgyDcqRR4NUg73cBdzUmGbuhWQm8HowGdx2OFdefR9pb7K8ZZBnfWY6
1lgWgzSAHO9AN7pTDdHmThyD4I+Oa35Z4x2HGe8Jr0wfZ/n+CfNiz4TjB8Z+
P+VZFWnFUpre1s/3fIYeiU2ajw9T+/bRK1nXK3d7tEWfSZ1DH1B0KqErM7Df
0C2cl0Djt/eFtrlfIkpTZmRJWSO0ReWNoOGOYEXHxOgqppvYU8oOWfx4r3tz
5/bNe3ZPePDTUl8/PHdW6Tb5+mF9/zQsTO33Pv/wxf+svTxYd9s5f+yNjcXv
B71f3k1eFl3/iYeb6SKdP4NS7kPrN/+4Sc3B4HP1NH/8x+Ix2Y3ntj5u7uy9
qiPTpATrFF2TEGzygZ/nX9Ti0vV9sz/KHf6gasw59xivk9WccvfnHeTfPoyd
EpHnT21Xapt5k4Ck6zwoJ9w8TB1QUznZz6tVenFxE2WNY7orcbpa5bP043uq
tXu1pLNtn3Z+RvyqdMBpJeln9PKX5ulZvHmX1Dspm/rOrw/4nw5SLtVOO/Xh
8739rz/9/uef6jb+9Ev9RVU8eNfsyf68Wu/idXOWYNuczfymfsx1Mvb86G/6
wagf5yTtdUMu3vAn07PXNajbbXsqn9wslG+o8+3Fn80d0RiTn350t9//27zv
v5rzhZe3Wd9/I+f76V2b9S3yaBJV0UCvph1PRxvoqYOxUqG3fSGifsq1Y+D/
3gsG2yAOIkRY7wkxmSeDT+82L+NltpoeFaN/TozeIvIpEyxewB71R93pxIvx
OjL1B09z2IMuvqb29PaJ3rzsH2J5e3icoEdtRslIOmIR2wK/dYrpRBTTzpja
U8x41ZEC2siA6rjOhdhTqxAJkNjyhBbt3KKyI/N27k76EdczPy4dKReMsk6T
SOo+5Wsiu5oL0zzIfLoDm5FxB+y1k30NQX3FGk+gzFXGNOhkW+/iCdBHaRTn
+S4UvDe1vG1sW15irfYyF97MHh+CJXsSlrOCQrdTxLnKiodOJiaZyY0evpVa
02E6EeX4GJnpQyqiZ16ozJfO9XSXlpZwufClvR9Fcm/NLLad2njKCKyUN3kn
LhYOZb6ewlxsplBf0GvgQXtTymokSrYRSxH7ZvTEA8+fFpEtlpHngkVER15k
D0IPj2AMk6QEN9HxBLQ6sSoPbOYo9GjFDceemsyTVlWFgkbBm0zNKnfvrD1X
acSgcIbQH5BMziOIHeXOuMxvfWa4B2HvfVkSqxITOeyHeMJmhie4PJ0n+Dko
2CAQxK78hcBI9rIQcwUls01NfcL4SqdeJIY39Itsjvi6EZMKGjjdRPZ2oWZC
9jaySK3kDlFmIsxqEonUh6ZFG6pslkePIrCkj7jPlg6PdccXpd5NdbC8PMU4
9CQ3tg8h14czsxACBLp6EcZG9wqwOqua+6bzBGtfgN/abJIi7mZBILjijpxU
Fo9kAAmHz0i/SCmnNgnKT+/2ttC9dUAZfCtCt1ONGWzDi4gnOeYlj2KuF9uZ
bY0Sez+R6FUs7nduEElWZi/4XMzQFmftCmcudGeMVmu+bm2gLj0YWxBOKunq
6ZpyjInArMoqpqeLnJHW3IuFZU8LZ+2R7Uox6d/Aa/aeba3dYRbEeiRFuX8Y
6+lGoI2YTSfMOawOXoHxYkUUhFJnqdYLWeFJBi5SPdG7UsOyoZkiF71BG8C9
xCYeejwxq3tho2fSCTGyGGnRFUU0Si1qg+czeAmxzv0Keg026QQJhi3Mox0Y
tQyPAk8QvfDorQI9WsuFJfH3Tsij2Cui56CoivgonqDFJVldRC0sGO9lAXiz
tKAizDRLLIdmM0cb1v7SgXbCXOSRk+pijbnx2KSvQyV0Q2HuaXQjTwQi4Ll4
EFY1dPkWbLTSudQ3sUAvlhjhZf8xPDpg2GKdWGwOjb+XmEtfLyRGO4iPGN0g
4OLFFfmexocVjhAk8YvwwPMUbXCe8O9IAH84Ws9yvoeNrGCJG7QNvg1OjraI
GOMwcSdVAb56wDjEsRUNg8CCV0SPobEfYRw2U4vQofIF0CPRI3hDFgBfPHwO
4/TpHZMR4A6fCMMcit1yOGwWT1jtYHE7XzjrmZUWsGtNSiCYITZsCZlrVl/R
9h288SuD7W4FUFITht4Vmv7MAwsWVU2AVk4KT3TRO9fIbmQeraBUtrCAQJjR
OpCVTItC4idJ+CI6Ms9sfOt+nDOeWKLLgz8w7pXl5z2JNhyggboMmAN9RjYt
RQHPBXoE+W3AMHec/CjmhrlLOhXN+CPa8jIT1T1mmrxiKCR5hSCvELGxh0wV
MQfWuHLLXVEdYD8P3IIfianpTSjvzct94xdQUXLbqecigh2ncwbfJRR1Ee9S
c+vDpiP00g50ZzIb4inAl6ILvH2AVW/QoyzWqr2UexkSjuRpxvJexRd/7DFX
MrbSLD5aWsSzkSydIdA2ptFlTwDvvbSdIZ6CuVBP7CbUhkmaAft4WGSr2GIT
N4C2H/btkAsttu53HvAHKHsnabEjx7vuI0vMRcfrSvg201NbLoVIOCK33Edu
EVmy3AbwbRtt8AOdsm7wCj0aYr7sFONSDT3MmltmGPz0CMtRc4BP+GgTBCRs
NU992M5BACVhkSI59qPYYAEPHJsZ3n0Mhd3zRVH0gPUyhYJ2Jx5Lyv0k4FxL
9UrKvOehTUCo/U4YYg18EYiyWkSft5yvsIh5rFFsBH70gYg2FD4it6DIthrr
6AXswZV7TcJ3YulM+DKaiKP1yPFEr7C2KeIVrOFeKHsJJVunnSJmMhOh3Npu
UUBNb0eJ2TuGCy+Hfn+O7kQkhBPAA0fCsO5hkcK19zdcxzhCpzvwtGwEvQ3u
gEiMaOEH1pwt+2YA70e8sf3yFvjUN0IR7aAsrdTeeqKTxVJuV4GBuD0hewHW
oxfeAG2QcolIrxELSXeIqmu/BMbZXifiGG29ssA+fCDUilbFuC7sZGj5CdlL
KMqNLosI6JBm8O1juKwG0jb306EjyTMjM5LTQsCmM9/lVVfoaZfrQPqJR/wm
4+B1iP2W+DpewtMK+DKPRuAqN2zRj4XMJvD1B4zHJrbgZxxITb832JDlGdnZ
CF6zcwl31zynsY40/CaPTe04LkSU2NmLFFGEcVqntpqLHmxmlRjmwS+ihW8z
xMgI9sMPhAzpIuE024BSTdtB604oHmEcwEYi+FWUzYrohUZyrId7WtPA3E0o
4s2APbDQSUIecARXGIjS3IPxwS+qACgpp4i6I+HNRb46ioLZlHcHCwswE080
l6Fg4C/AQLxdksLG74CSRYV4Y6LfDkYyfY6s1EOkN0RwD7+K8MSCAXNCvrCA
J2AnVrpwoevBPh7I6ogj3UZgODKQe7TXsyOKFpN+F1aP2aWVOVr5duJIbulm
iS2iDUa22iPaaNKiaAMPAL70jhzsY6rnxylGMplkexH0Zarpm6kZ0WyuwiJ6
8EW0dYN+AL/SAj0bEJrEw0rMVJyGPTxMEadhp9QLvD/CbI730dDLELdX8Et/
ipGU+VYC6ckzR/DttcdT4RJjRSRJH6SwnmWh1u5W4ArwKw9toPU+NkHs2+Eb
aAObwzNDPIGiLjAulZhLsHUrqvmux28lIneE2fQDatOSFazcw45Tb6bsIc3B
ZiP4coyo+zwu+hPEBrKXGF5hx+C7hQ8eB9bPBlNErKCAZwbFV15SIp6BCd5m
4HFDYQBrbAdvhAaZsCOsYT0rMRMm8AfMI3PoCbEe7vBOoAMjXHsgrwjKW0SX
SgsDLwdK7v2iEO4Cs4uRRhS9R0+9uIhWaly6U7LVIUM0ySRmEzwuldEd813J
DgHiD55wAM5yUboaerGuvQKeae/gxUIQI4vAZwXiTSVC2KiwijWhA9MdByON
6G5tZ2YG33bWwGWgZLSJLPBfMFpJa+a5jrmlrQ3xsQDvjx6kBZ+dZBmUzoEb
Wg8t38ZWhshfDfHEHZDaFmWWgdVz8OGFawtYbDZJgN4VA2ccTC3KnELdlLc9
UfYwi4QOUQQFsUaU6Upojxn0UWLSmrrTpTV1WMEciOWHGN0t+Krg4/yWwT4c
zI0OWxjyfCtEhw3Dcg8XAn+xC3AD0cEbbSDUJpikxANBqftxih4VHIpKINIP
gS8P8Ewhl5kQeXdHaDHNdR6AjcZ6lQmMPKkJPDVH3PaFJuCZ6YbGJaWYFwor
A4/zbFlm0kUkC2hkdQcqb+uxgN3ARsElw72KeA13EPAC4POEZjpC5AYOl4g3
kwrxyFoLY/+AKLsBpkmRV7RDwoc1bMivYMOEkjH+tkWcBhOoBPGX6gFIfUDs
j2DDdnRnwa8qKyF7uBNjWGCeAh34BAxREHsXO6iwNe17APMPQ6BTAg+AZ1HM
M8HrbV1OS8eEpcHqq0dhpccZeK8oyBrECihpIfJ/xTiSdZAf4ck0ExgXSdGD
tMUU7NMvmIdW3smgL1zpwKKiOXy9QajKVvGqcHRqA0bZ8jEKgqL99TgYGY1D
7MMrEqthQMqmUx6UW9+tORU+51iy8Ih9BBz2stGFzoCKQCgTSK1n6Dc/CGJh
5Z6HQX9HDAhswBNLQqjtSFK8yhnxwDXYhyQW5KzJN5lpdcQdVItBvQJKUkYV
FgWUpNU5zDbYelmNOHhdbHogiNC+knhgZdIcFQGseCwMbZ+WgtpEmfeniFbD
rIi0SeaKlR52MCZWeJjdOZKZvU646B9n0rOm9jZgnU/vvtBuFYyDt+ELAa2U
baCg/FAU4NRVAaQGlxRSlojTPEPUZROwdh/juAWCZu4dxXzwFyh+fePnUP2k
l2GTvpVO8I650HqIuj0ZmNqeKV3QC0ipEndwJVD+qFhcl3LYPeL1pCQUxkGc
EjuVxCWhE2kcREI7bkzlZzZZJPzfdwuH5jInfZSgRynlDzhXKyXwNMwmnjaR
+VTnpWMlnYK0iR/x1KcdNzOzN8dnEPkx2zrGEW9U9sKBBKuZ5d1ADQfuMO1B
H41gH9AFHkX+R6CDT3tyEPmhj4BYwLiYdEEBPmxDZ8IbM+hCgSfcLty8ByXF
4O1gxAKKHHxBRVmKLiXGyYLmR1uBDvCrCtZQrcHaukrxoZVV7sJ3SfXHmgaN
JqBuYA/G3iOrn1oOoWQA1JSJbpFnzjHbfqDmEnwYXKqfA+MOYc5icKi1D5WH
2V5z5RUMStMhJAcjASuDRSZ30IlF9BSW+gqeCc/18sQiDcuN3kjYtHMIDgTt
LYhvg2uid0Cq+wNlBbjWIw0rEcclIv+LW0Cv5akHXx+GGulGUXg29A9mE0oT
DAhRbkPcmuIN9NFuqvU2cmnxpIgIb8Chiq/+glH+hVi9FoKR6eGYFEvuTALM
tm+JDUfkF+XOkEJAsaNdRRYoiwTGMXjmdOiJxHQgn9MN7VuZYqZvhUueFTiK
jfICCktUsPTqIW5HkveUsiDNJsvbCcWrkGe5QvpcFwJ62lpjpMjbaS9iNiPU
Jp/W4XVFtmC8IjIGfIls2uOF2b/Cl1nuKHzRR0CiCdSuFMdcI3zxDRc4nC6A
LyIse4MAiMVzz0M8Ii27QxvA+j2MX0T5F1uAv3iIL2CGMuPgL2JmifWIQ1kI
yp7osCiypxTjUBFCAemdNtrsgPQYOmstSU97zACX1Fkf2nkjiVObPUGMmOnA
VPAIzAspzQFx0fFCEKunHVo+Il7IysxzKRfEKL8AFID1Q+1qsGoOhEJLEWUn
jCI/5fPAOMBFyRomipUVYkN7vBAzPcq/bIGS4z1fMlLgHPooBhMkpenB148h
572EcLYASkrYdJ6yGTiVwmVRBcRFKf9CGRzMv8xCXlK0iGxwyXkigMOGpkuL
cmEZRRswQvSyIG8A/uRODD25g6bbBBSPJnEB+4DleVY1nA3TACwMKLh/CArg
O/g+PDMgZoj2QF5VnmtVsEj2kOJTpExjoBT4B6JFKtKvQZ7O3Vz0lC6Axodu
JPbxSDg7LZRnQklUlDPcjQ2K6wCOYX9E65jVZqpXUPlRAUvTIpOYRbiDlRNT
pNwHZvf+iCfM0b6Qdyife38IJsWCdfoZLDCaUf4FFgdOqokO2mDHlsOTYYFo
UcGA9puUIjzULgOEQwXHqeFZsKc5rIPwZu1a8EziLwU0ai+68+LAcO7H0GtQ
uxlQgM0AEkGZzeNOn0tok0BPJ/4iCuDLwLhsAA4GVn/LXKnWmsGNhOWQPdQs
rOA9FT0LDyGhcihuMx0Y2kl9sLBAKPaKWFF4lH8Rdf4lFI6k2A9Pe4hsnYFt
rGWNcY9A8oFfe+Yk1tpsHN+hDZQRlBTxuMJdvhRoQxYAmXLwF/jZniyKMG7A
SzCBZf/JxzgBqXNg3FefesF74F/6TljWDSFmBaXJOqT6a3sQpMgfYD8++a6/
ZDGixwTadT0DM+RLD3wYapmD9SNw8yVlZ9GWCVAynqKFiH0+y8MDRlIHUgsX
cwWkFkKjPFT6lS29IDH1XkC7YSleLTPiDhOFLyw1yC8iNAMcCnzWB9ZDm2RA
KMmX0NEWE7FdFbD+g7ChZMAkY3gmntAJAofNKO/9TFooEQ5GfZtPDW8oCB2K
CrQhW1E+ly3B35bQlWA+sal/TYaIkZ0MrF6nPBb0ElAKSFPcCJsuGtEOfo5p
xPwgYnWB4uZ40QcDsmSINsWUnQ0saBdwgzvnAUi29iRQhfLeiP3T/RSqH55F
WO9jLhCxwkN614dnRhGNGxd8BzYSJ3ba8WXRiWkHo92bJzzcRZij7CGxPYTL
aOJ2vCrUsodU7VOtctLRFzuAR2gBOHq64bZzH6CHeANFYZtWOIDvFD3QRmhX
CS/YkH5WWoOUAsXhcktK455sPKYYqpiA6EJPOykYEVmdQ3hBqq8P/WyNBOKw
BrwtKHuP+JR7iBHiJoRyEDYiGHgHRjbjgWUjmlALJOU8nHtgFzg230tqw4lN
tNivdwj7VXYAOjJZ9ifAWwFPDQPKzQf5UQDrpnoora2/dHzMTUDxByi4TU2g
puUcEYdHaraBWLExRvRwRr7lPfPSArdyXqDIdsKg/K5cqp3SG8oCYESHeAJl
zjuw5Y3ygnwLC8M4YFyI140E+Tr6mKeUydpSW2BRklV1LyrKOXuisLqUy0go
Y7zM1BoElIaN+AP1C8lKfmVDoRuehFdwlfdGLOLaDKoPTA9KErwNDAgeMUHU
oPjTwUhCw0PNgMdB/ZjEPmLKSwnKElR+oPyojh63OdMwV7Bq8CPLX4ATHfvd
MLAeMA4h2Cmii/OkZgL814dmA+YFlJeq1wMERgrxB77KSEnV49Bx96R2oLnX
I+CN0PQurbxQ1ppPVJtD0vgUrygXRJlOytLD+kwdrS54YruUAQX2CxMYR/le
YgI5N2jnDNiIht4WgnIhiEc0E1ATHW5UhCMTle8voEWoh1ZF/IRs2qIVFso5
4++gCKRdgTc6pxx9rlakiDNATYqtyv8bFJcj2uWzJuz3TWePyA6OnU74Ar2x
98A8K070CpyMkLt3gNqx6aiAY2MkKS8VUFaJCQ/xpaLVoCfilqIUlisyxCML
6pfj77Dcu7508wh0bB+DUa9pXY1Rhg+hPvJSHchciAk4hI53jlyLepER7o75
wtqlFuGNV4An3IQLbycoc25BwSNOZ+tQj3YM9gAlTvZgEfbHumOzScVjAwqm
3JK9kFeAlVUhogdGwdrGViHgyV8jyh3avsXCxPJoreYAbmmHvEe5MS7MaEN6
SQoocOFFolgZwB3MvrPl+Z6TF0Qm1yXwRQxTy/NnZdqt/UJsxdKhNYgxuJU/
1uFnsFnMBbEysg/YOIMahl5aWA9Qz2uKsGCnBWlWEdNqGHhc7urVKpDVemYV
E6CDh5HUFIvHbEuKT0exBq/LpeXRCkRG+bqI4jDmP6JeLNArYvA2xWEoT8ym
6Ai7t+NAMNiPJLUDhs2AaILsi6Iq8bpqwEoBDZ+RwgYzRGS3UisIhOcqtkpq
h9Y4K6gdYsh7j/IOHhpy5lQYF8Wq4BcqGwK+MkztW0b8FnoppjWtmYleFM4T
LBMs38M4VJ5aIy2gNQ3SDZSXEmYPeJbmM3giPLNQKA5PDIh15To8c6yJxqZJ
qxCfETl78GwxxOcyH37kgE1AzYoQfnFLWehDhG8ktrmXS6i6DvMjkY58cJuZ
eTsXtL5oa3vXEHZssieyBrFUUa3OtjYsXdtDcYWxfUvrAxMBZTPVvWdZCI8V
tP4JLmS4u2QoEEOjrzzor4l7exOMVA4ECvGOHq3bJ3f9SGA2I7mlLMD91C48
IPtOmGIEfCF0iNyyPomBuQ1JH1W03rgDOqxjvr/z6fSWwXRJWXvpbYUsnmJe
6eBxD4HNeLCEb1tOFerufiY8Oc7BFGk1txNQxMr3iDNQoPn9gR/7xFKHCdkp
8ASR/wUjCZv15rD+CKzthTJg0HgTafa+Ur5O96c2E9CBEyEQoQKPcj4W5oC5
RdURStV9OUxNPUpKRlp6AfUT+IsilHd/NOf8MEdvnfR7dc4vv8HPz27gatfn
/Gh3R3cbIqrV5/jkod777fJ67/dUXu79LrbRHc3q23u/H2jf3r+799uPKOdh
R/p57zdCidr7LXgmZ6VluRNizKRxz3vB42/OUaAtN81u8Btf7T3ND2DGzFV7
TckDzd4/3wsOfHm9G/z1XvBvdo5yaJho2Kdzhz3Y1QOxw9VBLDGv5l8708fo
xEHeK+OFV1E8uu88ag5LDDZ5OEI2yNunWfkFc1Bos4ml87x4etTTG08vXsTR
q1KNLVwt6kaT1BVldDPu3OsBvDEy3cCLEUnmngHlL7vr9K54SS1If22/gpL5
Ct8eYC76XrPPkwGpx/PL/ZeIR/0ob3ZqAxXV2UYjHfBl9CLuLIqrh2gRuUxY
KxGk9769Wqf56iW6S51ZbuX1mT86dumZArNtkQa8wTsfZ/Z+Nw7CbohxZAUk
iiWMJC+4V1gdzFV9LmfR34xz+tlbSsSj4hFzMxgXlvBNq4PZfnsvuKb2gjNf
pgt3mRsz+/aJkHVc7h+m8AB4m7bbi2V2z4zboxgWOzax/Gi52vFJqCEOjlPo
zLFWMLDGXrhw7BHt/zC6Pc/fvoCLl2qHxlIWbMImKy2yvIwtvNWscBjicJzy
+8NImPUOK3Ve1rmh3b1jkQ0vzstakhj8V3/YN8d8Sycm97G9/RrofTpz1Kd9
JX/uDAPxuu/brdmFfVzYLVhifYZBnVnwbeU5nLS9OklxfY6iPtW0xs+cTTIP
iAA8ZJ5bpN85aUUHmi7OWv2LJ63IGy/OWl2etJqgDRxWtTihElDsCqW4Phgv
09EYtmv1waOHrh11xJ17TAxxIxeWEWsZC0uhRdLZxvPtINFDWgM4xqVX8sn0
gKlb+0V/FRjbpwija83ToJjzo7WXZd6dScsSi+wlmjiPyeB3A3Mwj5bZU8Kd
r9CIh1DPXtyi6ECl9rnWeA7NEbA17DLuYbbTPudfXggRxvy73nc3zl/7Hnkj
eZ9ARIUMv+GSHdng9uvjYbuUg987oeY8pIiPj3q2jU/ed/a9cBFZI8Qj51kO
2fODUaA9hQw6Wdcb3B5m4EDRpPBqbysewXGdWbna0YkIn7OA41/MlxOb1jhB
j+536dEajTviAK3c9ZdpJyqrG89IzVgW3ViHBLT6gVwURbAo1omRjUALv45l
YY0nU00G6SYdYqYnseh3/M54j3j3HC+Lkpm9jcd1nalcAnT1wruT1GMtZdOC
dl3rt5/H3x6xeP+/6ioxl0cs3jhZUd7e0MkKMbGuTlZAARXBUDjk2+3Zilcn
K6B4/8Tp8OZs+Kd33zkdPqz6wcXJCqBSfaYZbAC2Xajz6eYtH4NNUkYfDASs
z9UQ3UrLTo99Ul19jA/tNqKTFEdEOdpTZ/NJZgFz/fbUfKLpd/ERcQoz3qOI
Cl61R6TQu8xi/cBse+F54zwagaEMwapd2M2xfULAdXCf9sQ6rK8+sc6dCXBO
xqU1FEuAHj4Bq5eqFzIVQKbnsKTzJFVvnO9jaW/bs1FL4jF/5mzU2JhZkTGe
RHsxXO3BGKuU9yaxlQGjvTXtEe33PM2690ETUj2r/EW/YnwPy4WKsa3nMe/u
uOxNAlE8TQa/78YasxA/14gdL+Fy2pV8u48RI1kX3FFyLeXxongMjNte2Ekf
Gowh36GdMebpFBzay3g04NIzCWUD5d+ItPc8yBr/VrYy8ICUr04ANuf/nA6d
/4P0WcrJ/SGwo31iWHc++bbtWequg61f5muMQzyVLIgnQqZgZVwzO4GRPfKl
eZTcc9gwe+am7iXLfgg74tOi/5DSuEzAkAsm7veu6HfB2J8fjv27qeXdx4Gz
jzr9iRyc4tKujktie32Pw6d3013E97o/2F7e5PAX73H49O7Nmxz+4j0OQAjE
JRNMHRpLA6cL4GF5Vd/jwFs/ufKSNzz107sf+eqf9VT49IWv/jWOh2hixDq7
p/MqGUus8ZHl2YNLh+qD6Vp0vPvAuN8JgadrsGlzCnUkHhETv0Jkd927aPqo
ewsZiLFfFvMUbUnvhXm/ZsXuBaP1NYIe9M2054ricTpMKaovoLZ6oax8tNVE
W53mnI11PmcDTuWNRaFsFzqAAVPMqDndyk1wCWv3gnFRp258Lrzxot+exl1y
kQ7q8370lPrEH5s+GtVUxSN80zO8+swf/r+09a9v8RyM/MMYSE/RTZ2+02aW
eXzQChcjO/Yn8IA7Nh+JNIT3j1KZ7bn+hwHLnKMH7ljfvURFFDG7Yl55e+fD
dsFyjg5YsncPjbZ3O8VqvOBdYYG/SOfGv/uyDoz9SujCwL8+u6NT8ZYZ2R5L
6VYVdaYH3nhxqucvnem5PNHz/qeIc77bLl6S8PP9dsaSf9yO+HPWlfNkv6ui
xz+GfxTij4nn+qF+N7t5TgxMSTxy1oO4/DC6X0e/fRh/eYajlj1hDh29C7Lw
h7RHPzrJczrF8WcO8/yTIzjfPc9zeaDn/M2m5Et9bqctHVYfpPlV3at1XTPi
r10s9E2Rmjfe8s9f8v//tqE3T5386Gah5owJuMC/c7NQc68QNOq/c7NQk28A
h7zKOHiLPw4q47DsV0lZ30ySGHoWy+6ru4MuYw589SLq/Ksxh3Jg/+T2oD8R
c9Cji6jzr8Yc6MI/yQ9/FHPQlu/ww78SczC6F1HnX4k54QudDPYiT/QfYukY
kZbx8XxrP+oWj8u0SMxsOAusyO/0O5SdCTteAH1EeyoGzNQHPm+UzYROndTa
5p/Em8HtYKzyTOBKF7cNMTtlAvbi/Fnt80bmKh35Od3jg7b0Y9JYw4y5h60T
mOmAm4XGjS9auCgm0s7CYClWU4Q7L/+yDueIM4fbUhSFGRemkajbFxAhhu5S
+GMt2whwspnMBl6QcWnqIlxW96PB9imxs4mYRE+J5ZiuHllTzvJQtzp0+8Kb
p8T/rITZ1hLGLq4ljBYN4txbU6rkOxLmLx0O//SuPR7+bxwOX9CmaggOumSL
Lt16Uo5TMMc1dTvRyVVzDc5tkWMx2ppn5ruAAxh1dgNKDzDYgnLAmAXI9Qq9
YCKHoxS1oGgdjZniqg08uO+BCOONfTihp0gLI5fopEbaHvZuvsHmrlYBiKI4
LdkkKG9jaRZLEaiLgdRx8xl3XAh92l7KiR4z0BjvRGP8+sKr0890AVaq9e7G
3ArGx2gOWOsnUoCQRx2vLCBinePIIgEti+nas2nbc9qLbH0yPTpDjKgtOuk8
RoBwy54jzS/HoAOpo0f6aOge+DKqxnk6imFYJBvSgW9m2rhkFctFLJeU7rvt
+pjNf3Lp1kXyDLD15lUKfsDGUjrddOgdfeuPA57UBe2ihUiQThDPjteLzN3R
NRkjwOlZqe2NRlK/A90a11I/ciAWXx606MnVHI4g5LKll/lF5WNmc69TPaUT
7xlPBcGtIMEwR5ZvOEc4fSXgKBN/N0+HxY7C2jlI6l/TjruOlx4FJ0p0b6ID
hRgRuAtuEIHT3uRjQ+trJRfiIVz+Y+o/FrNglR39w5dh8vKPNNwfb1ZVvnQe
ert/RPGjvV7ZBxDtY39jjD7nv9+tJ7fHcC6jtWC/hTfDu+k+/BCbazOZ//ED
PnaiYTVteZuHveZQ3ydedJfmEIxmtVa1mwZ1jUZVzfy9mc7x+/+g646pRDvd
kLqd/e/3//k38JR/ZPWX8Iyn9QrfpC/T9fzVFv+ms/OtxO/eWcSs7s3Aep+u
48/b91r3/Yf/efWLnip8g9a296am50tkwcZUAdL4fCtqe19oe0lmU2SdrtVU
JI2u71bFxugHdZ3/rC6KcC6q86uqcDp7/7ffDLz5j5QOQn+vogG9pq4/pa7e
/vOXRbev6OEVgyJurgW/LjR4rrmlSgM9l8/1bbDnb3fU0JSrF3Ub7VUh4+aw
dVPdiy6XPX9No5eq6UzVcfR5U0GVenO+Cv36HvSrqoTXRUFUBeH59lww5qJo
36l43OntNzenUaU7bc/X6WazOKXb7eN1XM7osvqf6/ve0w+r5S9EppviiO2t
z58xPtmSbpRXd6HHV3N30zm9Zbavinh5uhtb8fi6goCqd1ff0N3USby8tbn3
sfdRr+3k4jfG6RWdm4vRP1WtpRYO/ui/t1br55IGph2QpjzuuRxUayKxugO+
bTcZhNneLj1br1d0X3Na3yh+1bJzO25/xfe6l9/7nrnWpdnrCovXfzo9rXer
ekWI8Mo6MHY/XdTdrD3rp1/f/3Q2BTXEp99fFemstd7pj7Pt9OPpncZvl++k
a3DbanTrWVOMvukAXZhAMFVfLn+q9Pvf3t9T5eN6ti9qzm6o2BUVkWqqL1zd
yX26+/a/8P27pqYymWRbsFU9oq2IclWeoXHQ+ZKs6Dx5nd7rN1wWtlU3QKha
s2/MyvlL9Qv/MatUu55WT3UzaNa2qpbbtStelbpoBwFmV+KpVCGvbd0GzTPU
q/7WpSm+b6Zbu651oux43dz1SwBaFz+ZpZclV9ubos+P6f5W+1Vd4OBcXflV
YYXmmRuqFvA9NDl75PnxHVj79ISS6vKHutLACTPrgkxAenR9WszRyr83Neto
9JpS2O9/Xs9+OffjovnGN88/a/u36hl9g9B1URlVpkcVh2wvqDjUpZXqIkjP
iJrv4UuvMgvnCzBUpa7dHH+Yb5v3UsnA13UK17OXVT57XSbjojudb7pz8YRN
Rh6mqoRls1NNDaoFcnGl+HVRyKZegfpQ1mCaumJkc1hOs/VqSRby6/vDbPvx
jZjeeR3Tuyqm3zf3V7P6/moY3/mO64Jqj1KZpMZ0DePD325gBPV1KBQO6aoS
TMOsqoerqdU0S/Fgfw6/rvuuLkJXt6DX9WPo4vhndS94Wy3uVRmzegxUiuX2
tndZBpUqENFzKF20/fhmdFGk4wIxf2qR5KeLMiIXt+CfgEM/x8Rm3hoXUnP3
VhEOeF9BxIauPcFbKTRSqTuqOjJfqoJr6+dzNNR/Oz0/Pl8xXz99SdRM1ZVs
h+JUzYcomyot2Tzl9+vBPVGya9RDfP4wW74Q2rVfvL2IlGDX6mqa/aG+lh/Q
WDPV5nL5+GpYiXxuZ/vzUBnaqSvpRa3sU5WTD4M/6qrIJxSvCrqMvUGAE/+j
L6gyF3VtiVf1ks+u3WJW4zw/wPfOf/3Xf69ry8QndnOqVHRGu1O7fv7eg4xm
JN6IFb98W8upqfVHBTt+1I/zAOoYwBOqp03ci5OEbtJpItKpWkhDtFUjqHD1
9oKqGMY1U9hTob9TOZnD9bXx7Xc6qo6PsvHDe3yyml3R8gvCXUfuK3fYnKte
NJfe12WP6ZL/b1DHeI06HYU6vKrrIZ14wqnw4k/08JuuIhWzFJzyefY//sdP
asD3ven71bQuMzqdbc58QxWApUf4wn4PAKqATxSCmpKhqlosNfRKwjTmd2Jz
6iqpgqoJLt9nc3xvPc0Ol3SusSLVUzVc5epUUlX5ED7wYbMqFGPwm5GbKYlG
RQTqigDN178/gt8Oof56CI0auBuv7l0QjnMB0qvKTC2kKFS9qCH3fS9qjf/8
9/jL9h/Veo/OURHF2TccA7JoOydpe05wqdrIb1di+cZn312yx2u+qeb+xxl8
9ZHWlq4eVXP3V3WTWxT53FQyo0Cq6vNc1BFrgex1ZKKqcsv3b5DqH/RPr/vX
Yi/cbdm4IiajKbp5CYmnsRz47LLsYPO+ti9pbcTf1jWN23JEc1URfRuvv8y2
1NemDtTL/KJYUFy7CTzm2/riH9VUt+h0wszrmqiK8xHgJk2dLpqMi4omeEeL
+5eluD6+Zevaa1vXX9l6S0nq/mGSN439qWpCJ1uIl99xhlc1qNqunGe5udnt
ihKiZ6p0T3Ml2wUvf6vAfCOMXzvI0+jpm9dvrhTFn/DHNzxHFR3vt3jSxnqw
tPhaRu1ULZ56Jt8MX7Ol8gGqE6MiR9PYNpa9YfKvipC//1nVHlvigRs1FHU5
96eHgf83XVPdm6vsV/2oX1TL7yC/20osTeN/bytLnQLq92aznrxzyz6c+EKT
cWqu3DtXcmwrkb/hUFAPVHRoqa4OXNaFbvHJH3sH1eE8VcV8nzzPi7R+ASH8
lerBMxXDagziebtRdbgu/PTcpu+NzG+va25dI8X3AEGlhq4KlX6/U689u27U
dU+uvZhSZ6vNNa79rXcBba89QZV/Om4rVSKKKseTuKFiek1dPkQYWtelCpqr
1ecP+M+0SVxeesjfXmOsaspwBQjKIWjw4v84Z+UKKml9uBDZ57ZuauJxKi9Y
A09de5vKaX1Dr+ZNBc2rEuDk+E3LmsBRmxU4o6pdRY+x5ns846erHORP51pi
5CqC/Z0J9u5EwH50WeL5csU2VfeKiuOPGMozRL3x/TdwRvVYXe9YE+i3P0XB
c/OcgOfXeVEC/l9PIhevBetsRqDu27nK3XzTZCVPBe6uL7hsoncL7Krudf3N
doR/bjV0gYmuA+QpPYDn7qhkLprwXH1s9wnQ1gL6tSrn9kZZYMUA2oT4L+9/
bgOOVoPUH7CZNb26qWpWqAmp0w1t6MA40R2jnZubhCpr1sn4tK0dj+ZcmNzH
0xu6v1zRla2CYMVmGtze1BNwkY9Sf05m262KV3EaJ3MqTPjxFYU6bYpoqpvW
Q4imTuviVa9HoQYPYndX9TX/SVQCoFLoP1Xiq0UknnLxWfzuZDancpTXzaIU
AmETvbsAdS5Ub07U+5Vh/+XOoT1X8PdNpdI/1Us85VU//4VekiEsX5HLk0ee
u94uDFy1VOXGKfmKeLhex4c6EUuLKnVyshXSDVCTF17lJc8+WNdgo9gDM6Sv
tJn3lhlcpwy/eZIqmPa6oGtT+uy1YanFoVPtRDzq/M7NK3S5HMOfWypjwAeb
wu2KZp7UfPOlFgcvax7Of1Tu8UP9oZqU/3EKCer74HeKGJ/e/ss3gHSV245P
Wbrva4e2AeiFSq0srxmL+tu3GbsPF1USk/Umn3+IKc/3oalAfpHPu/wM9VHT
FGl2VejjA6PFIHU3ckMCW55wTqic4hWNYZ2FRIP/ZFMUgl/k1NoJ+2au6txS
XG3POY42ydD436bOrFPgxlNURL7w/jrx2qzyqI/ygf7xeiI/IxZQkb23qri3
HlzLcBXH6+zkagqdTh4er4tDK8t/aEZEyTfv6cYxtfK2bALf91Z9fibvm9HD
qUxvWrOgehxfveGXhnT8s89R78kAXv+eWoi/0ei1+NCEi0It0CrZd1Y8RZOJ
2c6WZOKb/34V31QoX5I/k4hov/Xz3wxNeQZvU1iqma8bopp9mb5961PvVIxp
n3zCAmp8kyBrGPvbxV6v4177ZTWzF8a7nG2JgH/YEO+cbtYftJsLhlrP3Os0
NdpLn6xZKnq/+lY5NDbVtPmttPt3EmCXPPVMFt7MDKhmvTlmb+QZFI9+ZSZQ
fpehq14kOespSOrP14N4SY7xmhZYZ8UpV4wXnRsYt+yIiDsl7JqoRellIm+H
urDmZn1RPnauCm/St/0oeCIq2UD3L28N4ndSYO1y4almp3pRu8xI3k8rEut4
esIaoOHH96NmN4KKhpfUoH44fe+iqu3JMuli+c+qGLYCscZHWpJNq2XKtZq3
NxSAglaFgYin2RszhmFUIx9cLFfUf/6PU662DSZ1MMU4fJtzoD7UDv5MAK42
q9Z/q0vXUkHcH7+l8/6JPz7+/Yn7Q3pF88pamAIXawlTh6835U3NvFUTzgXm
T9GlKfPcNGOwKsvnZasHT6ODr+/UffmXK2yvWdy0oUVqjbSsC6yCM3548h9a
gD3xOOKSMH8w6vkmK9WG4yYAbzar6Tzezl6HErXwV1uBspbP8ctqXRPO4qAm
l0w8m3+hjxXx4QKuVCq5tgjFJxszUAm0zezqd9SK9eUyMZGa+WVK7Rugp1a3
ma+Y2nBC68siyS35aTncNzUALhmVcp8tFE9d2339vDlbyyabV6f5eG1uaMul
qjw9tfsrVD/+e/vLuWtnuGhCWp3nrneJXCCI2gL0oVCZt8vsAnXlSsI2TXim
Egvb0/LcirJymzfa9Bu1pWER34nLDfJdSHk13xf7SOp30uRSUy95cANgD/d3
NR6fP9maQduQzm+/XCuai70Q54j3p1zgFNO/SeA1K+Ovwfdq6QwPOFPbNxHp
3zaNUzKwyQR93x78CsKVxrstwfzeuMByFXEpMJyI4Xea+6fTyPWqk3JVteY1
v1ooVQtkzYKSspp6mfty1V+BP5WCr3c1NAnA+UYt9ar9Euc1ITyg3pfWdu0i
lfSqzxdRlVREY59NaMH4Ljcq2dcO+6t9CBe4oabh4wUVnm8a6ycwpHFbIohf
geIbTz3PZtOE9mVntlsToSazfEmZLp/zsU56rTfb1wK+ncPWD97XHOvnOotT
Uq6dhumXd+d9edPTQtt5bbNO+G+afMmJlp1TJyq812uoanbO7nKK+dSjD1Sq
fHnxvbpGukIesBWVKbsgTH//ePElzu6B8mfLUqK6gFrcrtU2wVYukoa9LprS
BA7M+N+VqHqN22dq3raLgk9bVmYb5/hfGoc2dqg9bbUVtjLs4+Va6znWXbO9
IMPgbN7L2XpJ4Xtz2dU6f3Fq2cVza6ebL9P5yzx9xkfREhWQvt1oov3HNxr6
2zkkq/i/OYXKg2kBpKUDMQWIqoinp1Wp80Y+/WOnRvA6HX/qk+rA2cuJTS6b
hGWbgVebPeDLRE5UEflXq/bwxuWbBqGKFTUZUDUhLgBT7YVssPeUHj2N/isd
fAmVJy9tnPeELg2w/Pp+9vHLx5or0paAElxBbfOiwZwnz61nNnmgq/R+a0AD
9+nceJXypreAB2dAEPpf9YkLtYcff23RoraFNhHf9K1Fp+WMSiTFMIcr3zrN
ZgOdF+vvZEDPG2VOdYpfJeApFb6dnSZWDcvFuvzH9/5pr/HrbSu01EC5OWhU
tZqDwJnM6+S1WutvllZpnWzfqOh2A17bPDSENhtANa6q+aUs2VxmIs6U8Sq+
U67l5BRqUpWEvShcVesXXRGAl9WcdmA/J/WS8brZ+LFWVnzaJzKdzzYXUUdt
MKGXTWtwf72Akcxq6MW4bKozO2vmqF5Fpk0hq0KZy8fTJod2SwXtFLnOyV3k
g87bxBuh0O4WVzvCToziPMe/noyYxuY8XXWtrLYV116x+cYINgS87Qb6k6nQ
kiYmd/9DIFPS/WrDigL4y63a9NXNrFArVLRi2Dz9zE9V5v/VJ9qYp0b8vKmn
HbNds19HxV/y17Ooa9bvt7MTU73YXd9sfjzZJyHSaWny46vgs4zLJhGkNGrz
iGbPWeNchEvvCb7iAp1e1uhFSanT3jTM42Z7ueG4pnXN5rTzip9Kha+n2Zxa
Tnnzk+prsa1dAz0jKVlLPQx4wucNvvr+6eH+Tbper3SfIK/OGqnv/mAiThSc
hN8yWcHYT5nbhtnHal/OfNPsllBGvCra1eH6E9fM6zLpeRVIG784R5k6Wp8h
fEMijRRHrfWUHV07k/ru5QEJNaoVhroZ6Aabf63TEydRqWhMzSTO295PL/74
AwdQaZcm13J2gGvYINxRm8naxGnRnFNQ25bV0q4C1vt6pZnaVq8tfLx+6is8
vrKWWXHedXVKAqiJq0dR8efLbzT64qS2riRfTUAbDH9jP/XFeNNMK2D9fA4A
SnVdRKLLiNCC0ubb0PMjoFFy5RuN0q4z/Hp1RqFe/aN9Bo2Br5olHZXkO/Hz
3Ur5xKV5tP6xeaV7GsFXzE5j3+4nXj1vLjNoNcK0J7BrggwHqd8waya8fsdr
uPkm9k1VGqOlA8ms3v9US0Ra3rpsQkmyZd1WSKQcjdqOQ/xutT3NLRGlet3r
5IbE3etHrs/BuZ7ZS0ir4ma1TnUNn7bqxT39JK/OGaPrUPTPLK9lmv8vjHvw
r9h0a9E10/nLNv3Kov/be++CYCMSrNU32tVPvOQt2vRm85LTZuoaaJMVoh4R
wintIGgC+f8BhnbUwABcAgA=

-->

</rfc>

